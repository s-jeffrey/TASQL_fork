"```sql\nSELECT \n    c.Segment,\n    SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END) AS Consumption_2013,\n    SUM(CASE WHEN ym.Date LIKE '2012%' THEN ym.Consumption ELSE 0 END) AS Consumption_2012,\n    (SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END) - \n     SUM(CASE WHEN ym.Date LIKE '2012%' THEN ym.Consumption ELSE 0 END)) AS Increase_Decrease,\n    ((SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END) - \n      SUM(CASE WHEN ym.Date LIKE '2012%' THEN ym.Consumption ELSE 0 END)) / \n     NULLIF(SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END), 0) * 100) AS Percentage_Increase\nFROM \n    yearmonth ym\nJOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'EUR'\nGROUP BY \n    c.Segment\nORDER BY \n    Percentage_Increase DESC;\n```\n\nThis SQL query calculates the percentage increase in consumption for each segment (SME, LAM, KAM) for transactions paid in EUR between the years 2012 and 2013. It uses the `yearmonth` and `customers` tables, filtering for EUR currency and grouping by the customer segment. The results are ordered by the percentage increase in descending order to easily identify the segments with the biggest and lowest percentage increases."