"```sql\nSELECT \n    c.Segment,\n    SUM(CASE WHEN ym.Date LIKE '2013%' AND cu.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS Consumption_2013,\n    SUM(CASE WHEN ym.Date LIKE '2012%' AND cu.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS Consumption_2012,\n    (SUM(CASE WHEN ym.Date LIKE '2013%' AND cu.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) - \n     SUM(CASE WHEN ym.Date LIKE '2012%' AND cu.Currency = 'EUR' THEN ym.Consumption ELSE 0 END)) AS Increase_Decrease,\n    ((SUM(CASE WHEN ym.Date LIKE '2013%' AND cu.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) - \n      SUM(CASE WHEN ym.Date LIKE '2012%' AND cu.Currency = 'EUR' THEN ym.Consumption ELSE 0 END)) / \n     NULLIF(SUM(CASE WHEN ym.Date LIKE '2013%' AND cu.Currency = 'EUR' THEN ym.Consumption ELSE 0 END), 0) * 100) AS Percentage_Increase\nFROM \n    yearmonth ym\nJOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    c.Segment IN ('SME', 'LAM', 'KAM')\nGROUP BY \n    c.Segment\nORDER BY \n    Percentage_Increase DESC;\n```\n\nThis SQL query calculates the percentage increase in consumption paid in EUR for each segment (SME, LAM, KAM) between 2012 and 2013. It uses the `yearmonth` table to get the consumption data and joins it with the `customers` table to filter by segment and currency. The results are ordered by the percentage increase in descending order to easily identify the segment with the biggest and lowest percentage increases."