{
    "0": "SELECT CAST(COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) AS REAL) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio FROM customers WHERE Currency IN ('EUR', 'CZK');\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT customers.CustomerID FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date BETWEEN '201201' AND '201212' AND customers.Segment = 'LAM' ORDER BY yearmonth.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(yearmonth.Consumption) / 12 AS average_monthly_consumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME'  AND yearmonth.Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT      (SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) -       SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END)) AS Consumption_Difference FROM      customers c INNER JOIN      yearmonth ym ON c.CustomerID = ym.CustomerID WHERE      ym.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTR(yearmonth.Date, 1, 4) AS year, SUM(yearmonth.Consumption) AS total_consumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' GROUP BY year ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT yearmonth.Date, MAX(yearmonth.Consumption) AS PeakConsumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND yearmonth.Date BETWEEN '201301' AND '201312' GROUP BY yearmonth.Date ORDER BY PeakConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT      (SELECT AVG(y.Consumption)       FROM yearmonth y       INNER JOIN customers c ON y.CustomerID = c.CustomerID       WHERE y.Date BETWEEN '201301' AND '201312'       AND c.Segment = 'SME'       AND y.Consumption = (SELECT MIN(y2.Consumption)                            FROM yearmonth y2                            INNER JOIN customers c2 ON y2.CustomerID = c2.CustomerID                            WHERE y2.Date BETWEEN '201301' AND '201312'                            AND c2.Segment = 'SME')) -      (SELECT AVG(y.Consumption)       FROM yearmonth y       INNER JOIN customers c ON y.CustomerID = c.CustomerID       WHERE y.Date BETWEEN '201301' AND '201312'       AND c.Segment = 'LAM'       AND y.Consumption = (SELECT MIN(y2.Consumption)                            FROM yearmonth y2                            INNER JOIN customers c2 ON y2.CustomerID = c2.CustomerID                            WHERE y2.Date BETWEEN '201301' AND '201312'                            AND c2.Segment = 'LAM')) AS SME_LAM_Difference,      (SELECT AVG(y.Consumption)       FROM yearmonth y       INNER JOIN customers c ON y.CustomerID = c.CustomerID       WHERE y.Date BETWEEN '201301' AND '201312'       AND c.Segment = 'LAM'       AND y.Consumption = (SELECT MIN(y2.Consumption)                            FROM yearmonth y2                            INNER JOIN customers c2 ON y2.CustomerID = c2.CustomerID                            WHERE y2.Date BETWEEN '201301' AND '201312'                            AND c2.Segment = 'LAM')) -      (SELECT AVG(y.Consumption)       FROM yearmonth y       INNER JOIN customers c ON y.CustomerID = c.CustomerID       WHERE y.Date BETWEEN '201301' AND '201312'       AND c.Segment = 'KAM'       AND y.Consumption = (SELECT MIN(y2.Consumption)                            FROM yearmonth y2                            INNER JOIN customers c2 ON y2.CustomerID = c2.CustomerID                            WHERE y2.Date BETWEEN '201301' AND '201312'                            AND c2.Segment = 'KAM')) AS LAM_KAM_Difference,      (SELECT AVG(y.Consumption)       FROM yearmonth y       INNER JOIN customers c ON y.CustomerID = c.CustomerID       WHERE y.Date BETWEEN '201301' AND '201312'       AND c.Segment = 'KAM'       AND y.Consumption = (SELECT MIN(y2.Consumption)                            FROM yearmonth y2                            INNER JOIN customers c2 ON y2.CustomerID = c2.CustomerID                            WHERE y2.Date BETWEEN '201301' AND '201312'                            AND c2.Segment = 'KAM')) -      (SELECT AVG(y.Consumption)       FROM yearmonth y       INNER JOIN customers c ON y.CustomerID = c.CustomerID       WHERE y.Date BETWEEN '201301' AND '201312'       AND c.Segment = 'SME'       AND y.Consumption = (SELECT MIN(y2.Consumption)                            FROM yearmonth y2                            INNER JOIN customers c2 ON y2.CustomerID = c2.CustomerID                            WHERE y2.Date BETWEEN '201301' AND '201312'                            AND c2.Segment = 'SME')) AS KAM_SME_Difference;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT      c.Segment,      (SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END) -       SUM(CASE WHEN ym.Date LIKE '2012%' THEN ym.Consumption ELSE 0 END)) /       NULLIF(SUM(CASE WHEN ym.Date LIKE '2012%' THEN ym.Consumption ELSE 0 END), 0) * 100 AS Percentage_Increase FROM      yearmonth ym INNER JOIN      customers c ON ym.CustomerID = c.CustomerID WHERE      ym.Date LIKE '2012%' OR ym.Date LIKE '2013%' GROUP BY      c.Segment ORDER BY      Percentage_Increase DESC;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(yearmonth.Consumption)  FROM yearmonth  WHERE yearmonth.CustomerID = 6  AND yearmonth.Date >= '201308'  AND yearmonth.Date <= '201311';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT      (SELECT COUNT(*)       FROM gasstations       WHERE Country = 'CZE' AND Segment = 'Discount') -      (SELECT COUNT(*)       FROM gasstations       WHERE Country = 'SVK' AND Segment = 'Discount') AS discount_difference;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT      (COUNT(CASE WHEN c.Currency = 'CZK' THEN 1 END) - COUNT(CASE WHEN c.Currency = 'EUR' THEN 1 END)) AS difference FROM      customers c INNER JOIN      transactions_1k t ON c.CustomerID = t.CustomerID WHERE      c.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM') AS percentage FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'LAM' AND yearmonth.Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM yearmonth WHERE yearmonth.Date = '201202') AS percentage FROM yearmonth WHERE yearmonth.Date = '201202' AND yearmonth.Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(yearmonth.Consumption)  FROM yearmonth  WHERE yearmonth.Date LIKE '2012%';\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201309';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT gasstations.Country FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE yearmonth.Date LIKE '201306%'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT customers.CustomerID)  FROM customers  INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID  WHERE customers.Currency = 'EUR'  AND yearmonth.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.Description FROM gasstations INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID INNER JOIN products ON transactions_1k.ProductID = products.ProductID WHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT transactions_1k.Time  FROM gasstations  INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID  WHERE gasstations.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*)  FROM transactions_1k  INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID  WHERE gasstations.Country = 'CZE'  AND transactions_1k.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT customers.Currency FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT customers.Segment FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*)  FROM transactions_1k  INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID  WHERE transactions_1k.Date = '2012-08-26'  AND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'  AND gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT customers.CustomerID FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT CAST(COUNT(CASE WHEN c.Currency = 'EUR' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM transactions_1k t INNER JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (SUM(CASE WHEN yearmonth.Date LIKE '2012%' THEN yearmonth.Consumption ELSE 0 END) -          SUM(CASE WHEN yearmonth.Date LIKE '2013%' THEN yearmonth.Consumption ELSE 0 END)) /          NULLIF(SUM(CASE WHEN yearmonth.Date LIKE '2012%' THEN yearmonth.Consumption ELSE 0 END), 0) AS consumption_decrease_rate FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE transactions_1k.Amount = 634.8  AND transactions_1k.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT      CAST(COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM      gasstations WHERE      Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(transactions_1k.Amount) AS total_spent FROM transactions_1k WHERE transactions_1k.CustomerID = 38508;  SELECT SUM(transactions_1k.Amount) AS total_spent_january_2012 FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE yearmonth.CustomerID = 38508 AND yearmonth.Date = '201201';\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT      c.Currency,      (SUM(t.Price) / SUM(t.Amount)) AS average_price_per_item FROM      transactions_1k t INNER JOIN      customers c ON t.CustomerID = c.CustomerID GROUP BY      t.CustomerID, c.Currency ORDER BY      SUM(t.Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT yearmonth.Consumption FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE transactions_1k.ProductID = 5  AND (transactions_1k.Price / transactions_1k.Amount) > 29.00  AND yearmonth.Date = '201208';\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*)  FROM attendance  INNER JOIN event ON attendance.link_to_event = event.event_id  INNER JOIN member ON attendance.link_to_member = member.member_id  WHERE event.event_name = 'Women\\'s Soccer'  AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*)  FROM attendance  INNER JOIN event ON attendance.link_to_event = event.event_id  GROUP BY attendance.link_to_event  HAVING COUNT(attendance.link_to_member) > 10 AND event.type = 'Meeting';\t----- bird -----\tstudent_club",
    "33": "SELECT event.event_name FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id GROUP BY event.event_name HAVING COUNT(attendance.link_to_member) > 20 AND event.event_name NOT LIKE '%fundraiser%'\t----- bird -----\tstudent_club",
    "34": "SELECT income.amount FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": "SELECT member.first_name, member.last_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT expense.approved FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN expense ON attendance.link_to_member = expense.link_to_member WHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(expense.cost)  FROM expense  INNER JOIN member ON expense.link_to_member = member.member_id  WHERE member.first_name = 'Elijah'  AND member.last_name = 'Allen'  AND (MONTH(expense.expense_date) = 9 OR MONTH(expense.expense_date) = 10);\t----- bird -----\tstudent_club",
    "38": "SELECT      SUM(CASE WHEN strftime('%Y', event.event_date) = '2019' THEN budget.spent ELSE 0 END) -      SUM(CASE WHEN strftime('%Y', event.event_date) = '2020' THEN budget.spent ELSE 0 END) AS difference_spent FROM      budget INNER JOIN      event ON budget.link_to_event = event.event_id WHERE      strftime('%Y', event.event_date) IN ('2019', '2020');\t----- bird -----\tstudent_club",
    "39": "SELECT income.notes  FROM income  WHERE income.source = 'Fundraising'  AND income.date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": "SELECT member.phone  FROM member  WHERE member.first_name = 'Carlo' AND member.last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT budget.event_status FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.expense_description = 'Post Cards, Posters'  AND expense.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.first_name = 'Brent' AND member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*)  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT member.department  FROM member  WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT income.date_received  FROM income  INNER JOIN member ON income.link_to_member = member.member_id  WHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT      (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) /       NULLIF(SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END), 0)) AS budget_ratio FROM      budget b INNER JOIN      event e ON b.link_to_event = e.event_id WHERE      b.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(expense.cost)  FROM expense  WHERE expense.expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT zip_code.city)  FROM zip_code  WHERE zip_code.county = 'Orange County'  AND zip_code.state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(attendance.link_to_member)  FROM attendance  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT member.first_name, member.last_name FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE major.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT event.event_name FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.status = 'Closed' ORDER BY (budget.spent / budget.amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(budget.spent) AS highest_spent FROM budget;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(budget.spent)  FROM budget  WHERE budget.category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT member.first_name, member.last_name FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id GROUP BY attendance.link_to_member HAVING COUNT(attendance.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT member.first_name, member.last_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT event.event_name FROM expense JOIN budget ON expense.link_to_budget = budget.link_to_event JOIN event ON budget.link_to_event = event.event_id WHERE expense.cost = (SELECT MIN(cost) FROM expense);\t----- bird -----\tstudent_club",
    "58": "SELECT      (SUM(CASE WHEN event.event_name = 'Yearly Kickoff' THEN expense.cost ELSE 0 END) / SUM(expense.cost)) * 100 AS percentage FROM      expense INNER JOIN      attendance ON expense.link_to_member = attendance.link_to_member INNER JOIN      event ON attendance.link_to_event = event.event_id\t----- bird -----\tstudent_club",
    "59": "SELECT income.source FROM income WHERE income.date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY income.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*)  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Advertisement' ORDER BY budget.spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT COUNT(*)  FROM attendance  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE member.first_name = 'Maya'  AND member.last_name = 'Mclean'  AND event.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "63": "SELECT expense.cost FROM budget INNER JOIN event ON budget.link_to_event = event.event_id INNER JOIN expense ON expense.link_to_budget = budget.budget_id WHERE event.event_name = 'September Speaker' AND expense.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "64": "SELECT event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.status = 'Closed' AND budget.remaining < 0 ORDER BY budget.remaining ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT expense.link_to_member, SUM(expense.cost) AS total_value FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id INNER JOIN expense ON attendance.link_to_member = expense.link_to_member WHERE event.event_name = 'October Meeting' AND expense.approved = 'true' GROUP BY expense.link_to_member;\t----- bird -----\tstudent_club",
    "66": "SELECT budget.category, SUM(budget.amount) AS total_budgeted_amount FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'April Speaker' GROUP BY budget.category ORDER BY total_budgeted_amount ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost)  FROM expense  WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name, SUM(expense.cost) AS total_cost FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.link_to_member = 'rec4BLdZHS2Blfp4v' GROUP BY member.first_name, member.last_name;\t----- bird -----\tstudent_club",
    "69": "SELECT expense.expense_description FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT event.type  FROM event  WHERE event.location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.location = 'MU 215'  AND event.type = 'Guest Speaker'  AND budget.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT      CAST(COUNT(CASE WHEN income.amount = 50 THEN 1 END) AS REAL) * 100 / COUNT(member.member_id) AS percentage FROM      member INNER JOIN      income ON member.member_id = income.link_to_member WHERE      member.t_shirt_size = 'Medium' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event.event_name  FROM event  WHERE event.type = 'Game'  AND event.status = 'Closed'  AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT member.first_name, member.last_name, member.phone FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name, expense.cost FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.expense_description IN ('Water', 'Veggie tray', 'supplies');\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name, member.last_name, income.amount FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "78": "SELECT      CAST((COUNT(CASE WHEN Patient.SEX = 'M' AND Patient.Admission = '+' THEN 1 END) -                COUNT(CASE WHEN Patient.SEX = 'M' AND Patient.Admission = '-' THEN 1 END)) AS REAL) * 100 /      NULLIF(COUNT(CASE WHEN Patient.SEX = 'M' AND Patient.Admission = '-' THEN 1 END), 0) AS deviation_percentage FROM      Patient WHERE      Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT      CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F') AS percentage FROM      Patient WHERE      SEX = 'F' AND YEAR(Birthday) > 1930;\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT      DIVIDE(COUNT(CASE WHEN Admission = '+' THEN ID END), COUNT(CASE WHEN Admission = '-' THEN ID END)) AS ratio FROM      Patient WHERE      Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Patient.Diagnosis, Laboratory.Date FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, SUBTRACT(YEAR(CURRENT_TIMESTAMP), YEAR(Patient.Birthday)) AS age FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*)  FROM Patient  WHERE SEX = 'F'  AND YEAR(Description) = 1997  AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*)  FROM Examination  INNER JOIN Patient ON Examination.ID = Patient.ID  WHERE Examination.Thrombosis = 1  AND Patient.SEX = 'F'  AND YEAR(Examination.Date) = 1997;\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Examination.Symptoms, Examination.Diagnosis FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = (SELECT MAX(Birthday) FROM Patient);\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT Laboratory.Date,         (YEAR(Laboratory.Date) - YEAR(Patient.Birthday)) AS Age FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Examination.Diagnosis LIKE '%SJS%' ORDER BY Laboratory.Date ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT      (SUM(CASE WHEN Laboratory.UA <= 8.0 AND Patient.SEX = 'M' THEN 1 ELSE 0 END) * 1.0) /      (SUM(CASE WHEN Laboratory.UA <= 6.5 AND Patient.SEX = 'F' THEN 1 ELSE 0 END) * 1.0) AS male_to_female_ratio FROM      Laboratory  INNER JOIN      Patient ON Laboratory.ID = Patient.ID WHERE      (Laboratory.UA <= 8.0 AND Patient.SEX = 'M') OR      (Laboratory.UA <= 6.5 AND Patient.SEX = 'F');\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(*)  FROM Examination  INNER JOIN Patient ON Examination.ID = Patient.ID  WHERE YEAR(Patient.Birthday) > YEAR(CURDATE()) - 18  AND YEAR(Examination.Date) BETWEEN 1990 AND 1993;\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT      Examination.Diagnosis,      (YEAR(Examination.`Examination Date`) - YEAR(Patient.Birthday)) AS age FROM      Examination INNER JOIN      Patient ON Examination.ID = Patient.ID WHERE      Examination.ID = (SELECT ID FROM Laboratory ORDER BY HGB DESC LIMIT 1)\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT Examination.Diagnosis  FROM Examination  INNER JOIN Patient ON Examination.ID = Patient.ID  WHERE Patient.Diagnosis = 'SLE'  AND Patient.Description = '1994-02-19'  AND Examination.Date = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT      (SUM(CASE WHEN Laboratory.Date LIKE '1981-11-%' THEN Laboratory.T-CHO END) -       SUM(CASE WHEN Laboratory.Date LIKE '1981-12-%' THEN Laboratory.T-CHO END)) /      NULLIF(SUM(CASE WHEN Laboratory.Date LIKE '1981-12-%' THEN Laboratory.T-CHO END), 0) AS decrease_rate FROM      Laboratory  INNER JOIN      Patient ON Laboratory.ID = Patient.ID WHERE      Patient.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT Examination.ID FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31'   AND Laboratory.GPT > 30   AND Laboratory.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2   AND ANA = 'S'   AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.Admission = '-' AND Laboratory.Date LIKE '1991-10%' AND Laboratory.T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(Laboratory.ALB)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Patient.SEX = 'F'  AND Laboratory.PLT > 400  AND Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*)  FROM Patient  INNER JOIN Examination ON Patient.ID = Examination.ID  WHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM Patient WHERE YEAR(Birthday) = '1980' AND Diagnosis = 'RA') AS percentage FROM Patient WHERE YEAR(Birthday) = '1980' AND Diagnosis = 'RA' AND SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT COUNT(*)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.ID = 57266  AND ((Laboratory.UA > 8.0 AND Patient.SEX = 'M') OR (Laboratory.UA > 6.5 AND Patient.SEX = 'F'));\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT Laboratory.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'M' AND Laboratory.GPT > 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GPT > 60 ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Patient.ID) AS patient_ids FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.T_BIL >= 2.0 GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(CURDATE()) - YEAR(Patient.Birthday)) AS average_age FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'M' AND `T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.TG >= 200  AND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE YEAR(Patient.Birthday) BETWEEN 1936 AND 1956  AND Patient.SEX = 'M'  AND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Laboratory.ID, Patient.SEX, (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) AS age FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GLU >= 180 AND Laboratory.T_CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.Diagnosis, Laboratory.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) AS age FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.SEX FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17 ORDER BY Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Laboratory.ID,         YEAR(CURDATE()) - YEAR(Patient.Birthday) AS age FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.HCT >= 52 GROUP BY Laboratory.ID HAVING COUNT(Laboratory.ID) > 2;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT      (SELECT COUNT(*) FROM Laboratory WHERE PLT < 100) AS count_lower,     (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS count_higher,     (SELECT COUNT(*) FROM Laboratory WHERE PLT < 100) - (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS res\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE YEAR(Laboratory.Date) = 1984 AND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) < 50 AND Laboratory.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT      (SUM(CASE WHEN Patient.SEX = 'F' AND Laboratory.PT >= 14 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_PT FROM      Patient INNER JOIN      Laboratory ON Patient.ID = Laboratory.ID WHERE      (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) > 55     AND Laboratory.PT >= 14;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT Laboratory.ID)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Patient.SEX = 'M'  AND Laboratory.WBC > 3.5  AND Laboratory.WBC < 9.0  AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT Laboratory.ID)  FROM Laboratory  WHERE Laboratory.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000  AND Patient.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT Patient.ID)  FROM Laboratory  JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.IGA > 80  AND Laboratory.IGA < 500  AND Laboratory.Date >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.IGM <= 40 OR Laboratory.IGM >= 400 GROUP BY Patient.Diagnosis ORDER BY COUNT(Patient.Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.CRP = '+' AND Patient.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.CRE >= 1.5  AND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE (Laboratory.RNP = 'negative' OR Laboratory.RNP = '0')  AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*)  FROM Patient  JOIN Laboratory ON Patient.ID = Laboratory.ID  JOIN Examination ON Patient.ID = Examination.ID  WHERE Laboratory.SM IN ('-', '0')  AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  INNER JOIN Examination ON Patient.ID = Examination.ID  WHERE Laboratory.SC170 IN ('negative', '0')  AND Patient.SEX = 'F'  AND Examination.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.ID)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.CENTROMEA IN ('-', '+-')  AND Laboratory.SSB IN ('-', '+-')  AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT Patient.Birthday  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.GOT >= 60  ORDER BY Patient.Birthday ASC  LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(*)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  INNER JOIN Examination ON Patient.ID = Examination.ID  WHERE Laboratory.CPK < 250  AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT Match.league_id FROM Match WHERE Match.season = '2015/2016' GROUP BY Match.league_id ORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name FROM Match INNER JOIN League ON Match.league_id = League.id INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id WHERE League.name = 'Scotland Premier League'    AND Match.season = '2009/2010'    AND Match.away_team_goal > Match.home_team_goal GROUP BY Match.away_team_api_id ORDER BY COUNT(Match.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT Team_Attributes.buildUpPlaySpeed FROM Team_Attributes ORDER BY Team_Attributes.buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal GROUP BY Match.league_id HAVING COUNT(Match.id) = (     SELECT MAX(draw_count)     FROM (         SELECT COUNT(Match.id) AS draw_count         FROM Match         WHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal         GROUP BY Match.league_id     ) AS draw_counts );\t----- bird -----\teuropean_football_2",
    "132": "SELECT      (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) AS age FROM      Player  INNER JOIN      Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE      Player_Attributes.sprint_speed >= 97      AND strftime('%Y', Player_Attributes.date) >= '2013'      AND strftime('%Y', Player_Attributes.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "133": "SELECT League.name, COUNT(Match.id) AS match_count FROM League INNER JOIN Match ON League.id = Match.league_id GROUP BY League.id ORDER BY match_count DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT Team.team_fifa_api_id  FROM Team_Attributes  INNER JOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id  WHERE Team_Attributes.buildUpPlaySpeed > 50 AND Team_Attributes.buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT Team.team_long_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE strftime('%Y', Team_Attributes.date) = '2012' AND Team_Attributes.buildUpPlayPassing > (     SELECT AVG(Team_Attributes.buildUpPlayPassing)     FROM Team_Attributes     WHERE Team_Attributes.buildUpPlayPassing IS NOT NULL     AND strftime('%Y', Team_Attributes.date) = '2012' );\t----- bird -----\teuropean_football_2",
    "136": "SELECT      (COUNT(CASE WHEN preferred_foot = 'left' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_left_foot FROM      Player WHERE      YEAR(birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(Player_Attributes.long_shots) AS average_long_shots FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name, AVG(Player_Attributes.heading_accuracy) AS avg_heading_accuracy FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height > 180 GROUP BY Player.player_api_id ORDER BY avg_heading_accuracy DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2009/2010' GROUP BY Match.league_id HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": "SELECT Player.player_name  FROM Player  WHERE substr(Player.birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT Player_Attributes.overall_rating FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Gabriel Tamas'  AND strftime('%Y', Player_Attributes.date) = '2011';\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(Match.home_team_goal)  FROM Match  INNER JOIN Country ON Match.country_id = Country.id  WHERE Country.name = 'Poland' AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT Player.player_name, AVG(Player_Attributes.finishing) AS average_finishing FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height = (SELECT MAX(height) FROM Player) OR Player.height = (SELECT MIN(height) FROM Player) GROUP BY Player.player_name ORDER BY average_finishing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(Player_Attributes.overall_rating)  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player.height > 170  AND strftime('%Y', Player_Attributes.date) >= '2010'  AND strftime('%Y', Player_Attributes.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "145": "SELECT      (SELECT AVG(Player_Attributes.ball_control)       FROM Player       INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id       WHERE Player.player_name = 'Abdou Diallo') -      (SELECT AVG(Player_Attributes.ball_control)       FROM Player       INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id       WHERE Player.player_name = 'Aaron Appindangoye') AS difference_of_average_ball_control\t----- bird -----\teuropean_football_2",
    "146": "SELECT      CASE          WHEN (SELECT birthday FROM Player WHERE player_name = 'Aaron Lennon') <               (SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada')          THEN 'Aaron Lennon'          ELSE 'Abdelaziz Barrada'      END AS older_player;\t----- bird -----\teuropean_football_2",
    "147": "SELECT Player.player_name FROM Player ORDER BY Player.height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*)  FROM Player_Attributes  WHERE preferred_foot = 'left'  AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT Player.player_api_id)  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE strftime('%Y', Player.birthday) < '1986'  AND Player_Attributes.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*)  FROM Match  INNER JOIN League ON Match.league_id = League.id  WHERE League.name = 'Belgium Jupiler League'  AND SUBSTR(Match.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2008/2009' GROUP BY Match.league_id ORDER BY COUNT(Match.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT      (CAST((Ariel.overall_rating - Paulin.overall_rating) AS FLOAT) / Paulin.overall_rating) * 100 AS percentage_difference FROM      (SELECT Player_Attributes.overall_rating       FROM Player       INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id       WHERE Player.player_name = 'Ariel Borysiuk') AS Ariel,     (SELECT Player_Attributes.overall_rating       FROM Player       INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id       WHERE Player.player_name = 'Paulin Puel') AS Paulin;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(Player_Attributes.overall_rating)  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(Team_Attributes.chanceCreationPassing) AS highest_chance_creation_passing,         Team_Attributes.chanceCreationPassingClass  FROM Team  INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id  WHERE Team.team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.player_name  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player_Attributes.overall_rating = 77  AND Player_Attributes.date LIKE '2016-06-23%'  ORDER BY Player.birthday ASC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT Player_Attributes.overall_rating FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": "SELECT Player_Attributes.attacking_work_rate  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player.player_name = 'Francesco Migliore'  AND Player_Attributes.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT Player_Attributes.date FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Kevin Constant'  AND Player_Attributes.crossing = (     SELECT MAX(crossing)     FROM Player_Attributes     WHERE player_api_id = Player.player_api_id ) ORDER BY Player_Attributes.date LIMIT 1;\t----- bird -----\teuropean_football_2",
    "160": "SELECT Team_Attributes.buildUpPlayPassingClass  FROM Team  INNER JOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id  WHERE Team.team_long_name = 'FC Lorient'  AND Team_Attributes.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT Team_Attributes.defenceAggressionClass  FROM Team  INNER JOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id  WHERE Team.team_long_name = 'Hannover 96'  AND Team_Attributes.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(Player_Attributes.overall_rating)  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player.player_name = 'Marko Arnautovic'  AND Player_Attributes.date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT CAST((Landon.overall_rating - Jordan.overall_rating) AS REAL) * 100 / Landon.overall_rating AS percentage FROM (     SELECT Player_Attributes.overall_rating     FROM Player     INNER JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id     WHERE Player.player_name = 'Landon Donovan' AND Player_Attributes.date = '2013-07-12' ) AS Landon, (     SELECT Player_Attributes.overall_rating     FROM Player     INNER JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id     WHERE Player.player_name = 'Jordan Bowery' AND Player_Attributes.date = '2013-07-12' ) AS Jordan;\t----- bird -----\teuropean_football_2",
    "164": "SELECT Player.player_name  FROM Player  ORDER BY Player.height DESC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "165": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "166": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT Team.team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*)  FROM Player  WHERE player_name LIKE 'Aaron%'  AND birthday > '1990-01-01';\t----- bird -----\teuropean_football_2",
    "169": "SELECT      (SELECT jumping FROM Player_Attributes WHERE id = 6) -      (SELECT jumping FROM Player_Attributes WHERE id = 23) AS jumping_difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT Player.id FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.preferred_foot = 'right' ORDER BY Player_Attributes.potential ASC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*)  FROM Player_Attributes  WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes)  AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": "SELECT Match.home_team_goal, Match.away_team_goal FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "173": "SELECT Team_Attributes.buildUpPlaySpeedClass  FROM Team  INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id  WHERE Team.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": "SELECT finishing, curve  FROM Player  WHERE weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY Match.league_id ORDER BY COUNT(Match.id) DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT Team.team_long_name FROM Match INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id GROUP BY Match.away_team_api_id HAVING MAX(Match.away_team_goal) = (     SELECT MAX(away_team_goal)     FROM Match );\t----- bird -----\teuropean_football_2",
    "177": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "178": "SELECT      CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM Player) AS percentage FROM      Player INNER JOIN      Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE      Player.height < 180 AND Player_Attributes.overall_rating > 70;\t----- bird -----\teuropean_football_2",
    "179": "SELECT driverRef  FROM qualifying  WHERE raceId = 20  ORDER BY q1 ASC  LIMIT 5;\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 19 ORDER BY qualifying.q2 ASC LIMIT 1;\t----- bird -----\tformula_1",
    "181": "SELECT races.name  FROM circuits  INNER JOIN races ON circuits.circuitId = races.circuitId  WHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": "SELECT circuits.lat, circuits.lng  FROM circuits  INNER JOIN races ON circuits.circuitId = races.circuitId  WHERE races.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT qualifying.q1  FROM drivers  INNER JOIN qualifying ON drivers.driverId = qualifying.driverId  WHERE drivers.forename = 'Bruno'  AND drivers.surname = 'Senna'  AND qualifying.raceId = 354;\t----- bird -----\tformula_1",
    "185": "SELECT drivers.number  FROM qualifying  INNER JOIN drivers ON qualifying.driverId = drivers.driverId  WHERE qualifying.raceId = 903 AND qualifying.q3 = '0:01:54';\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*)  FROM races  LEFT JOIN results ON races.raceId = results.raceId  WHERE races.name = 'Bahrain Grand Prix'  AND races.year = 2007  AND results.time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.raceId = 592 AND results.time IS NOT NULL ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT drivers.url  FROM lapTimes  INNER JOIN drivers ON lapTimes.driverId = drivers.driverId  WHERE lapTimes.time = '0:01:27' AND lapTimes.raceId = 161;\t----- bird -----\tformula_1",
    "189": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructorResults.raceId = 9 ORDER BY constructorResults.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "191": "SELECT drivers.code  FROM qualifying  INNER JOIN drivers ON qualifying.driverId = drivers.driverId  WHERE qualifying.raceId = 45 AND qualifying.q3 = '0:01:33';\t----- bird -----\tformula_1",
    "192": "SELECT seasons.url  FROM races  INNER JOIN seasons ON races.year = seasons.year  WHERE races.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT drivers.driverId FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.raceId = 872 ORDER BY drivers.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality FROM drivers d INNER JOIN results r ON d.driverId = r.driverId WHERE r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results);\t----- bird -----\tformula_1",
    "195": "SELECT      CAST((r1.fastestLapSpeed - r2.fastestLapSpeed) AS REAL) * 100 / r2.fastestLapSpeed AS percent_faster FROM      results r1 JOIN      drivers d ON r1.driverId = d.driverId JOIN      results r2 ON d.driverId = r2.driverId WHERE      d.forename = 'Paul'      AND d.surname = 'di Resta'      AND r1.raceId = 853      AND r2.raceId = 854;\t----- bird -----\tformula_1",
    "196": "SELECT      CAST(COUNT(DISTINCT results.driverId) AS REAL) * 100 / COUNT(DISTINCT lapTimes.driverId) AS completion_rate FROM      races  LEFT JOIN      lapTimes ON lapTimes.raceId = races.raceId  LEFT JOIN      results ON results.raceId = races.raceId  WHERE      races.date = '1983-07-16'      AND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "197": "SELECT name  FROM races  WHERE year = (SELECT MIN(year) FROM races)  AND MONTH(date) = MONTH((SELECT MIN(date) FROM races));\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, ds.points FROM driverStandings ds INNER JOIN drivers d ON ds.driverId = d.driverId WHERE ds.points = (SELECT MAX(points) FROM driverStandings);\t----- bird -----\tformula_1",
    "199": "SELECT d.forename, d.surname, r.name FROM lapTimes lt INNER JOIN drivers d ON lt.driverId = d.driverId INNER JOIN races r ON lt.raceId = r.raceId WHERE lt.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds)  FROM drivers  INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId  INNER JOIN races ON lapTimes.raceId = races.raceId  WHERE drivers.forename = 'Lewis'  AND drivers.surname = 'Hamilton'  AND races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "201": "SELECT CAST(COUNT(CASE WHEN results.position > 1 THEN 1 END) AS REAL) / COUNT(*) * 100 AS percentage FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.surname = 'Hamilton' AND races.year >= 2010;\t----- bird -----\tformula_1",
    "202": "SELECT d.forename, d.nationality, MAX(ds.points) AS max_points FROM driverStandings ds INNER JOIN drivers d ON ds.driverId = d.driverId WHERE ds.wins = (SELECT MAX(wins) FROM driverStandings) GROUP BY d.driverId, d.forename, d.nationality;\t----- bird -----\tformula_1",
    "203": "SELECT forename, surname  FROM drivers  WHERE nationality = 'Japanese'  ORDER BY dob ASC  LIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE MONTH(races.date) = 9 AND YEAR(races.date) = 2005;\t----- bird -----\tformula_1",
    "205": "SELECT races.name FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT races.name, races.year FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' ORDER BY results.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT races.name, results.points FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = (SELECT MIN(year) FROM races INNER JOIN results ON races.raceId = results.raceId WHERE results.driverId = drivers.driverId);\t----- bird -----\tformula_1",
    "208": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix') AS percentage FROM races WHERE name = 'European Grand Prix' AND circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Germany');\t----- bird -----\tformula_1",
    "209": "SELECT circuits.lat, circuits.lng  FROM circuits  WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuits.circuitRef  FROM circuits  WHERE circuits.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT drivers.nationality FROM drivers ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT results.raceId FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(results.fastestLapSpeed)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "215": "SELECT results.positionOrder FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008;\t----- bird -----\tformula_1",
    "216": "SELECT results.time  FROM results  INNER JOIN races ON results.raceId = races.raceId  WHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND results.rank = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT results.driverId)  FROM results  INNER JOIN races ON results.raceId = races.raceId  WHERE races.name = 'Chinese Grand Prix'  AND races.year = 2008  AND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT      ((CAST(SUBSTR(last_driver_time, 2) AS REAL) + CAST(SUBSTR(champion_time, 1, INSTR(champion_time, ':') - 1) AS REAL) * 60 + CAST(SUBSTR(champion_time, INSTR(champion_time, ':') + 1) AS REAL)) - CAST(SUBSTR(champion_time, 1, INSTR(champion_time, ':') - 1) AS REAL) * 60 + CAST(SUBSTR(champion_time, INSTR(champion_time, ':') + 1) AS REAL)) /      (CAST(SUBSTR(last_driver_time, 2) AS REAL) + CAST(SUBSTR(champion_time, 1, INSTR(champion_time, ':') - 1) AS REAL) * 60 + CAST(SUBSTR(champion_time, INSTR(champion_time, ':') + 1) AS REAL)) * 100 AS percentage_faster FROM      races  JOIN      results ON races.raceId = results.raceId  WHERE      races.name = 'Australian Grand Prix'      AND races.year = 2008      AND results.statusId IS NOT NULL     AND results.position = 1     AND results.position = (SELECT MAX(position) FROM results WHERE raceId = races.raceId);\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*)  FROM circuits  WHERE country = 'Australia' AND location = 'Adelaide';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cs.points)  FROM constructorStandings cs  INNER JOIN constructors c ON cs.constructorId = c.constructorId  WHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructorResults.raceId = 291 AND constructorResults.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*)  FROM results  JOIN constructors ON results.constructorId = constructors.constructorId  WHERE constructors.nationality = 'Japanese'  GROUP BY results.constructorId  HAVING COUNT(results.raceId) = 2 AND SUM(results.points) = 0;\t----- bird -----\tformula_1",
    "223": "SELECT      CAST(COUNT(r.results.driverId) AS REAL) * 100 / COUNT(d.driverId) AS race_completion_percentage FROM      drivers d INNER JOIN      results r ON d.driverId = r.driverId INNER JOIN      races ra ON r.raceId = ra.raceId WHERE      d.nationality = 'Japanese'      AND ra.year BETWEEN 2007 AND 2009     AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "224": "SELECT AVG(CAST(SUBSTR(races.time, 1, 2) AS REAL) * 60 +              CAST(SUBSTR(races.time, 4, 2) AS REAL) +              CAST(SUBSTR(races.time, 7, 3) AS REAL) / 1000) AS average_time_seconds FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.year < 1975 AND results.position = 1;\t----- bird -----\tformula_1",
    "225": "SELECT results.fastestLap FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND results.position = 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(results.fastestLapSpeed)  FROM results  INNER JOIN races ON results.raceId = races.raceId  WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "227": "SELECT      CAST(COUNT(DISTINCT d.driverId) AS REAL) * 100 / COUNT(DISTINCT r.driverId) AS percentage FROM      drivers d JOIN      results res ON d.driverId = res.driverId JOIN      races r ON res.raceId = r.raceId WHERE      YEAR(d.dob) < 1985      AND res.laps > 50      AND r.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverId)  FROM drivers d  INNER JOIN lapTimes lt ON d.driverId = lt.driverId  WHERE d.nationality = 'French' AND lt.time < '02:00.00';\t----- bird -----\tformula_1",
    "229": "SELECT drivers.code  FROM drivers  WHERE drivers.nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT drivers.code,         (SELECT COUNT(*)          FROM drivers          WHERE nationality = 'Netherlandic'            AND driverId IN (SELECT driverId                             FROM drivers                             ORDER BY dob ASC                             LIMIT 3)) AS netherlandic_count FROM drivers  ORDER BY dob ASC  LIMIT 3;\t----- bird -----\tformula_1",
    "231": "SELECT drivers.driverRef  FROM drivers  WHERE drivers.nationality = 'German'  ORDER BY drivers.dob  LIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT drivers.driverId, drivers.code FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE YEAR(drivers.dob) = 1971 AND results.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*)  FROM results  WHERE raceId > 50 AND raceId < 100  AND time IS NOT NULL  AND statusId = 2;\t----- bird -----\tformula_1",
    "234": "SELECT circuits.location, circuits.lat, circuits.lng, COUNT(races.circuitId) AS circuit_count FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'Austria' GROUP BY circuits.location, circuits.lat, circuits.lng;\t----- bird -----\tformula_1",
    "235": "SELECT r.year, r.name, r.date, r.time FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.date LIMIT 1;\t----- bird -----\tformula_1",
    "236": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'German'  AND YEAR(drivers.dob) BETWEEN 1980 AND 1985 GROUP BY drivers.driverId ORDER BY AVG(pitStops.duration) ASC LIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT results.time FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1;\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE races.name = 'Singapore Grand Prix' AND races.year = 2009 AND results.time = (SELECT MIN(results.time) FROM results WHERE results.raceId = races.raceId);\t----- bird -----\tformula_1",
    "239": "SELECT superpower.power_name  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superhero.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT cs.points, c.name, c.nationality FROM constructorStandings cs INNER JOIN races r ON cs.raceId = r.raceId INNER JOIN constructors c ON cs.constructorId = c.constructorId WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cs.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename, drivers.surname FROM qualifying INNER JOIN races ON qualifying.raceId = races.raceId INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE races.year = 2008  AND races.name = 'Marina Bay Street Circuit'  AND qualifying.position = 1;\t----- bird -----\tformula_1",
    "242": "SELECT CONCAT(drivers.forename, ' ', drivers.surname) AS full_name, drivers.nationality FROM drivers WHERE drivers.dob = (SELECT MAX(dob) FROM drivers);\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(results.number) AS accident_count FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Canadian Grand Prix' AND results.statusId = 3 GROUP BY results.driverId ORDER BY accident_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "244": "SELECT drivers.forename, drivers.surname FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId ORDER BY lapTimes.time LIMIT 20;\t----- bird -----\tformula_1",
    "245": "SELECT lapTimes.lap, lapTimes.time FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE circuits.country = 'Italy' ORDER BY lapTimes.time ASC\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*)  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Super Strength'  AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT superhero.id)  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ORDER BY superhero.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY superhero.eye_colour_id ORDER BY COUNT(superhero.id) DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE publisher.publisher_name = 'Marvel Comics'  AND superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*)  FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE publisher.publisher_name = 'Marvel Comics'  AND colour.colour = 'Gold';\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE attribute.attribute_name = 'Intelligence' ORDER BY hero_attribute.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "255": "SELECT race.race  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*)  FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE gender.gender = 'Female'  AND attribute.attribute_name = 'Strength'  AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT      CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero s       INNER JOIN publisher p ON s.publisher_id = p.id       WHERE p.publisher_name = 'Marvel Comics') AS percentage FROM      superhero s  INNER JOIN      alignment a ON s.alignment_id = a.id  INNER JOIN      publisher p ON s.publisher_id = p.id  WHERE      p.publisher_name = 'Marvel Comics' AND a.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "260": "SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) -     (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS difference\t----- bird -----\tsuperhero",
    "261": "SELECT publisher.id  FROM publisher  WHERE publisher.publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*)  FROM superhero  WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(superhero.weight_kg)  FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  WHERE gender.gender = 'Female';\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT superpower.power_name  FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE gender.gender = 'Male'  LIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT superhero.superhero_name FROM superhero WHERE superhero.height_cm BETWEEN 170 AND 190 AND superhero.eye_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  INNER JOIN colour ON superhero.hair_colour_id = colour.id  WHERE superhero.height_cm = 185 AND race.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180) AS percentage FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180 AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "268": "SELECT superhero.superhero_name FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Male'  AND superhero.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero);\t----- bird -----\tsuperhero",
    "269": "SELECT superpower.power_name  FROM hero_power  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE hero_power.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_power.hero_id)  FROM hero_power  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' ORDER BY hero_attribute.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics'  AND attribute.attribute_name = 'Durability' ORDER BY hero_attribute.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT      c1.colour AS eye_colour,      c2.colour AS hair_colour,      c3.colour AS skin_colour  FROM      superhero  INNER JOIN      gender ON superhero.gender_id = gender.id  INNER JOIN      publisher ON superhero.publisher_id = publisher.id  INNER JOIN      colour AS c1 ON superhero.eye_colour_id = c1.id  INNER JOIN      colour AS c2 ON superhero.hair_colour_id = c2.id  INNER JOIN      colour AS c3 ON superhero.skin_colour_id = c3.id  WHERE      gender.gender = 'Female'      AND publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.hair_colour_id = superhero.skin_colour_id AND superhero.hair_colour_id = superhero.eye_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT      CAST(COUNT(CASE WHEN c.colour = 'Blue' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM      superhero s INNER JOIN      gender g ON s.gender_id = g.id INNER JOIN      colour c ON s.skin_colour_id = c.id WHERE      g.gender = 'Female';\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(hero_power.power_id)  FROM hero_power  INNER JOIN superhero ON hero_power.hero_id = superhero.id  WHERE superhero.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT superhero.height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT superhero.superhero_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*)  FROM hero_attribute  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE attribute.attribute_name = 'Strength'  AND hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "281": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics') AS percent FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' AND superhero.gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "282": "SELECT      (SUM(CASE WHEN full_name = 'Emil Blonsky' THEN weight_kg ELSE 0 END) -       SUM(CASE WHEN full_name = 'Charles Chandler' THEN weight_kg ELSE 0 END)) AS weight_difference FROM      superhero;\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE height_cm IS NOT NULL AND height_cm > 0;\t----- bird -----\tsuperhero",
    "284": "SELECT superpower.power_name  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": "SELECT superhero.superhero_name  FROM superhero  INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id  INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id  WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT      (COUNT(CASE WHEN c.colour = 'Blue' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM      superhero s INNER JOIN      colour c ON s.eye_colour_id = c.id;\t----- bird -----\tsuperhero",
    "290": "SELECT      CAST(SUM(CASE WHEN g.gender = 'Male' THEN 1 ELSE 0 END) AS FLOAT) /      NULLIF(SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END), 0) AS ratio FROM      superhero s INNER JOIN      gender g ON s.gender_id = g.id;\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT      (SELECT COUNT(*) FROM superhero WHERE weight_kg IS NULL OR weight_kg = 0 AND eye_colour_id = 7) -      (SELECT COUNT(*) FROM superhero WHERE weight_kg IS NULL OR weight_kg = 0 AND eye_colour_id = 1) AS difference\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*)  FROM superhero  INNER JOIN colour ON superhero.skin_colour_id = colour.id  INNER JOIN alignment ON superhero.alignment_id = alignment.id  WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": "SELECT superhero.superhero_name  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Wind Control'  ORDER BY superhero.superhero_name ASC;\t----- bird -----\tsuperhero",
    "295": "SELECT gender.gender FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE superpower.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) -     (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference;\t----- bird -----\tsuperhero",
    "297": "SELECT      CASE          WHEN (SELECT MAX(Reputation) FROM users WHERE DisplayName = 'Harlan') >               (SELECT MAX(Reputation) FROM users WHERE DisplayName = 'Jarrod Dixon')          THEN 'Harlan'          ELSE 'Jarrod Dixon'      END AS Higher_Reputation_User;\t----- bird -----\tcodebase_community",
    "298": "SELECT users.DisplayName FROM users WHERE YEAR(users.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*)  FROM users  WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT users.DisplayName  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE posts.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*)  FROM posts  WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE posts.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age > 65 AND posts.Score > 19;\t----- bird -----\tcodebase_community",
    "304": "SELECT posts.Body  FROM posts  INNER JOIN tags ON posts.Id = tags.ExcerptPostId  WHERE tags.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(posts.Score)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT CAST(COUNT(CASE WHEN users.Age > 65 THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT posts.FavoriteCount FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE comments.UserId = 3025  AND comments.CreationDate = '2014-04-23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "308": "SELECT      COUNT(*) > 0 AS is_not_well_finished FROM      comments INNER JOIN      posts ON comments.PostId = posts.Id WHERE      comments.UserId = 23853      AND comments.CreationDate = '2013-07-12 09:08:18.0'      AND posts.ClosedDate IS NULL;\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*)  FROM posts  WHERE OwnerDisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName  FROM users  INNER JOIN votes ON users.Id = votes.UserId  WHERE votes.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT      COUNT(posts.Id) / COUNT(votes.Id) AS post_vote_ratio FROM      posts LEFT JOIN      votes ON posts.Id = votes.PostId WHERE      posts.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "312": "SELECT posts.ViewCount  FROM posts  WHERE posts.Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT comments.Text  FROM comments  WHERE comments.Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT users.DisplayName  FROM comments  INNER JOIN users ON comments.UserId = users.Id  WHERE comments.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT posts.OwnerDisplayName  FROM posts  WHERE posts.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "318": "SELECT users.DisplayName FROM votes INNER JOIN posts ON votes.PostId = posts.Id INNER JOIN users ON votes.UserId = users.Id WHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT posts.Title, comments.Text, AVG(posts.ViewCount) AS AverageViewCount FROM posts INNER JOIN comments ON comments.PostId = posts.Id INNER JOIN postLinks ON postLinks.PostId = posts.Id INNER JOIN tags ON postLinks.RelatedPostId = tags.Id WHERE tags.TagName = 'humor' GROUP BY posts.Id, posts.Title, comments.Text;\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*)  FROM (     SELECT badges.UserId      FROM badges      GROUP BY badges.UserId      HAVING COUNT(badges.Name) > 5 ) AS subquery;\t----- bird -----\tcodebase_community",
    "321": "SELECT postHistory.UserId FROM postHistory INNER JOIN posts ON postHistory.PostId = posts.Id GROUP BY postHistory.UserId HAVING COUNT(postHistory.PostId) = 1 AND MAX(posts.ViewCount) >= 1000;\t----- bird -----\tcodebase_community",
    "322": "SELECT      ((COUNT(CASE WHEN YEAR(badges.Date) = 2010 THEN 1 END) * 100.0 / COUNT(*)) -      (COUNT(CASE WHEN YEAR(badges.Date) = 2011 THEN 1 END) * 100.0 / COUNT(*))) AS percentage_difference FROM      badges WHERE      badges.Name = 'Student';\t----- bird -----\tcodebase_community",
    "323": "SELECT      AVG(users.UpVotes) AS average_upvotes,      AVG(users.Age) AS average_age FROM      posts INNER JOIN      users ON posts.OwnerUserId = users.Id GROUP BY      posts.OwnerUserId HAVING      COUNT(posts.Id) > 10;\t----- bird -----\tcodebase_community",
    "324": "SELECT      DIVIDE(COUNT(CASE WHEN YEAR(CreationDate) = 2010 THEN Id END),              COUNT(CASE WHEN YEAR(CreationDate) = 2011 THEN Id END)) AS vote_ratio FROM      votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT posts.Id FROM posts WHERE posts.OwnerDisplayName = 'slashnick' ORDER BY posts.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(ViewCount) AS MaxViewCount FROM posts WHERE OwnerDisplayName IN ('Harvey Motulsky', 'Noah Snyder');\t----- bird -----\tcodebase_community",
    "327": "SELECT tags.TagName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id INNER JOIN postLinks ON posts.Id = postLinks.PostId INNER JOIN tags ON postLinks.PostId = tags.ExcerptPostId WHERE users.DisplayName = 'Mark Meckes' AND posts.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT      CAST(COUNT(t.PostId) AS REAL) * 100 / COUNT(p.Id) AS percentage FROM      posts p LEFT JOIN      postLinks pl ON p.Id = pl.PostId LEFT JOIN      tags t ON p.Id = t.ExcerptPostId WHERE      p.OwnerDisplayName = 'Community'     AND t.TagName = 'r';\t----- bird -----\tcodebase_community",
    "329": "SELECT      (SELECT SUM(posts.ViewCount)       FROM posts       INNER JOIN users ON posts.OwnerUserId = users.Id       WHERE users.DisplayName = 'Mornington') -      (SELECT SUM(posts.ViewCount)       FROM posts       INNER JOIN users ON posts.OwnerUserId = users.Id       WHERE users.DisplayName = 'Amos') AS ViewCountDifference;\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(postLinks.Id) / 12 AS average_monthly_links FROM postLinks INNER JOIN posts ON postLinks.PostId = posts.Id WHERE YEAR(postLinks.CreationDate) = 2010 AND posts.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(votes.CreationDate)  FROM users  INNER JOIN votes ON users.Id = votes.UserId  WHERE users.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT users.DisplayName FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Autobiographer' ORDER BY badges.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT users.Id)  FROM users  INNER JOIN posts ON users.Id = posts.OwnerUserId  WHERE users.Location = 'United Kingdom'  AND posts.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "334": "SELECT posts.Id, posts.Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky' ORDER BY posts.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT posts.Id, users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE YEAR(users.CreationDate) = 2010 ORDER BY posts.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT      (COUNT(posts.Id) * 100.0 / (SELECT COUNT(*) FROM posts)) AS percentage FROM      posts INNER JOIN      users ON posts.OwnerUserId = users.Id WHERE      users.Reputation > 1000      AND YEAR(users.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "337": "SELECT posts.ViewCount, users.DisplayName  FROM posts  INNER JOIN users ON posts.LastEditorUserId = users.Id  WHERE posts.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*)  FROM comments  WHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.Text, users.DisplayName FROM comments INNER JOIN posts ON comments.PostId = posts.Id INNER JOIN users ON comments.UserId = users.Id WHERE posts.Title = 'Analysing wind data with R' ORDER BY comments.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT      CAST(COUNT(CASE WHEN posts.Score > 50 THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM      posts INNER JOIN      users ON posts.OwnerUserId = users.Id WHERE      users.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "341": "SELECT tags.ExcerptPostId, tags.WikiPostId  FROM tags  WHERE tags.TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT users.Reputation, users.UpVotes FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.ViewCount BETWEEN 100 AND 150 ORDER BY comments.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*)  FROM comments  INNER JOIN posts ON comments.PostId = posts.Id  WHERE posts.CommentCount = 1 AND comments.Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT      CAST(COUNT(c.UserId) AS REAL) * 100 / COUNT(*) AS percentage FROM      comments c INNER JOIN      users u ON c.UserId = u.Id WHERE      c.Score BETWEEN 5 AND 10 AND      u.UpVotes = 0;\t----- bird -----\tcodebase_community",
    "346": "SELECT cards.cardKingdomFoilId  FROM cards  WHERE cards.cardKingdomFoilId IS NOT NULL  AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT cards.cardKingdomFoilId, cards.cardKingdomId FROM cards WHERE cards.borderColor = 'borderless' AND cards.hasFoil = 0;\t----- bird -----\tcard_games",
    "348": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'mythic'    AND legalities.status = 'Banned'    AND legalities.format = 'gladiator';\t----- bird -----\tcard_games",
    "349": "SELECT legalities.status  FROM cards  INNER JOIN legalities ON cards.uuid = legalities.uuid  WHERE cards.type = 'Artifact'  AND cards.side IS NULL  AND legalities.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.power = '*' AND legalities.format = 'commander' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "351": "SELECT cards.id, rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Stephen Daniel' AND cards.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.isPromo FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid GROUP BY cards.id HAVING COUNT(rulings.uuid) = (     SELECT MAX(ruling_count)     FROM (         SELECT COUNT(rulings.uuid) AS ruling_count         FROM cards         INNER JOIN rulings ON cards.uuid = rulings.uuid         GROUP BY cards.id     ) AS subquery ) AND cards.isPromo = 1;\t----- bird -----\tcard_games",
    "353": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards) AS percentage FROM foreign_data WHERE foreign_data.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*)  FROM cards  WHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT cards.borderColor  FROM cards  WHERE cards.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT legalities.status  FROM cards  INNER JOIN legalities ON legalities.uuid = cards.uuid  WHERE cards.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards) AS percentage FROM cards WHERE cards.borderColor = 'borderless';\t----- bird -----\tcard_games",
    "358": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) AS percentage FROM cards WHERE isStorySpotlight = 1 AND language = 'French';\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*)  FROM cards  WHERE originalType = 'Summon - Angel'  AND subtypes != 'Angel';\t----- bird -----\tcard_games",
    "360": "SELECT cards.id  FROM cards  WHERE cards.duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*)  FROM cards  INNER JOIN legalities ON cards.uuid = legalities.uuid  WHERE legalities.status = 'Banned'  AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT foreign_data.flavorText FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.originalType = 'Artifact' AND cards.colors LIKE '%B%'\t----- bird -----\tcard_games",
    "363": "SELECT cards.manaCost  FROM cards  WHERE cards.layout = 'normal'  AND cards.frameVersion = '2003'  AND cards.borderColor = 'black'  AND cards.availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT      (COUNT(CASE WHEN cards.isStorySpotlight = 1 AND cards.isTextless = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage,     cards.id FROM      cards WHERE      cards.isStorySpotlight = 1 AND cards.isTextless = 0 GROUP BY      cards.id;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*)  FROM set_translations  INNER JOIN sets ON set_translations.setCode = sets.code  WHERE sets.block = 'Commander'  AND set_translations.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT cards.subtypes, cards.supertypes FROM cards INNER JOIN set_translations ON cards.uuid = set_translations.setCode WHERE set_translations.language = 'German' AND cards.subtypes IS NOT NULL AND cards.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*)  FROM cards  WHERE (power IS NULL OR power = '*')  AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'premodern'   AND cards.side IS NULL   AND cards.text = 'This is a triggered mana ability.';\t----- bird -----\tcard_games",
    "369": "SELECT foreign_data.name  FROM cards  INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid  WHERE cards.artist = 'Matthew D. Wilson'    AND cards.borderColor = 'black'    AND cards.layout = 'normal'    AND cards.type = 'Creature'    AND foreign_data.language = 'French';\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language  FROM set_translations  INNER JOIN sets ON set_translations.setCode = sets.code  WHERE sets.baseSetSize = 180 AND sets.block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": "SELECT      CAST(COUNT(CASE WHEN hasContentWarning = 0 THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM      foreign_data  INNER JOIN      legalities ON foreign_data.uuid = legalities.uuid WHERE      legalities.format = 'commander'      AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "372": "SELECT      (COUNT(CASE WHEN foreign_data.language = 'French' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM      cards INNER JOIN      foreign_data ON foreign_data.uuid = cards.uuid WHERE      cards.power IS NULL OR cards.power = '*';\t----- bird -----\tcard_games",
    "373": "SELECT foreign_data.language  FROM cards  INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid  WHERE cards.multiverseId = '149934';\t----- bird -----\tcard_games",
    "374": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards) AS proportion FROM cards WHERE cards.isTextless = 1 AND cards.layout = 'normal';\t----- bird -----\tcard_games",
    "375": "SELECT set_translations.language FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE sets.mcmName = 'Archenemy' AND set_translations.setCode = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT foreign_data.language  FROM cards  INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid  WHERE cards.name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT      CASE          WHEN (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel') >               (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper')          THEN 'Serra Angel'          ELSE 'Shrine Keeper'      END AS card_with_higher_cost\t----- bird -----\tcard_games",
    "378": "SELECT sets.name  FROM cards  INNER JOIN set_translations ON cards.setCode = set_translations.setCode  INNER JOIN sets ON set_translations.setCode = sets.code  WHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "379": "SELECT set_translations.translation  FROM cards  INNER JOIN set_translations ON cards.setCode = set_translations.setCode  WHERE cards.name = 'Ancestor''s Chosen'  AND set_translations.language = 'Korean';\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*)  FROM cards  INNER JOIN sets ON cards.setCode = sets.code  WHERE sets.name = 'Hauptset Zehnte Edition'  AND cards.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT set_translations.translation  FROM sets  INNER JOIN set_translations ON sets.code = set_translations.setCode  WHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT COUNT(*) FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT sets.code)  FROM sets  INNER JOIN set_translations ON sets.code = set_translations.setCode  WHERE sets.block = 'Ice Age'  AND set_translations.language = 'Italian'  AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT sets.isForeignOnly  FROM cards  INNER JOIN sets ON cards.setCode = sets.code  WHERE cards.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(DISTINCT sets.code)  FROM set_translations  INNER JOIN sets ON set_translations.setCode = sets.code  WHERE set_translations.language = 'Italian'  AND sets.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT cards.artist  FROM cards  WHERE cards.setCode = 'Coldsnap'  AND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*)  FROM cards  WHERE setCode = 'Coldsnap'  AND convertedManaCost > 5  AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "388": "SELECT foreign_data.flavorText  FROM cards  INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid  WHERE cards.name = 'Ancestor''s Chosen'  AND foreign_data.language = 'Italian';\t----- bird -----\tcard_games",
    "389": "SELECT foreign_data.text FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian';\t----- bird -----\tcard_games",
    "390": "SELECT foreign_data.name  FROM cards  INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid  INNER JOIN sets ON cards.setCode = sets.code  WHERE sets.name = 'Coldsnap'  AND cards.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = 'COLDSNAP')  AND foreign_data.language = 'Italian';\t----- bird -----\tcard_games",
    "391": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap') AS percentage FROM cards WHERE convertedManaCost = 7 AND setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "392": "SELECT      CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap') AS percentage_incredibly_powerful FROM      cards WHERE      setCode = 'Coldsnap'      AND cardKingdomFoilId IS NOT NULL      AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "393": "SELECT legalities.format, cards.name FROM legalities INNER JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status = 'Banned' GROUP BY legalities.format, cards.name HAVING COUNT(legalities.status) = (     SELECT MAX(banned_count)     FROM (         SELECT COUNT(legalities.status) AS banned_count         FROM legalities         WHERE legalities.status = 'Banned'         GROUP BY legalities.format     ) AS banned_counts );\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format  FROM cards  INNER JOIN legalities ON cards.uuid = legalities.uuid  WHERE cards.edhrecRank = 1 AND legalities.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT sets.name FROM sets WHERE sets.code IN (     SELECT set_translations.setCode     FROM set_translations     WHERE set_translations.language = 'Korean' ) AND sets.code NOT IN (     SELECT set_translations.setCode     FROM set_translations     WHERE set_translations.language = 'Japanese' );\t----- bird -----\tcard_games",
    "397": "SELECT cards.frameVersion, cards.name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.artist = 'Allen Williams' AND legalities.status = 'Banned';\t----- bird -----\tcard_games",
    "398": "SELECT bond.bond_type FROM bond GROUP BY bond.bond_type ORDER BY COUNT(bond.bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count)  FROM (     SELECT COUNT(atom.atom_id) AS oxygen_count     FROM atom     INNER JOIN bond ON atom.molecule_id = bond.molecule_id     WHERE bond.bond_type = '-' AND atom.element = 'o'     GROUP BY atom.molecule_id ) AS subquery;\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bond_count) AS average_carcinogenic_molecules FROM (     SELECT COUNT(bond.molecule_id) AS single_bond_count     FROM bond     INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id     WHERE bond.bond_type = '-' AND molecule.label = '+' ) AS subquery;\t----- bird -----\ttoxicology",
    "401": "SELECT bond.molecule_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "402": "SELECT CAST(COUNT(CASE WHEN a.element = 'c' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM atom a INNER JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 INNER JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT atom.element  FROM connected  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN atom ON connected.atom_id = atom.atom_id  WHERE bond.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT atom.element FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'h' GROUP BY molecule.label ORDER BY COUNT(molecule.label) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY atom.element ORDER BY COUNT(atom.element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT bond.bond_type  FROM connected  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20')     OR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id)  FROM atom a  INNER JOIN connected c ON a.atom_id = c.atom_id  INNER JOIN bond b ON c.bond_id = b.bond_id  WHERE (a.element = 'i' OR a.element = 's') AND b.bond_type = '-'  GROUP BY a.atom_id;\t----- bird -----\ttoxicology",
    "409": "SELECT      (CAST(COUNT(DISTINCT a.molecule_id) - COUNT(DISTINCT a_f.molecule_id) AS REAL) * 100) / COUNT(DISTINCT a.molecule_id) AS percentage FROM      atom a INNER JOIN      molecule m ON a.molecule_id = m.molecule_id LEFT JOIN      atom a_f ON a.molecule_id = a_f.molecule_id AND a_f.element = 'f' WHERE      m.label = '+';\t----- bird -----\ttoxicology",
    "410": "SELECT      CAST(COUNT(bond.bond_id) AS REAL) * 100 / (SELECT COUNT(bond.bond_id) FROM bond WHERE bond.bond_type = '#') AS percent FROM      bond  INNER JOIN      molecule ON bond.molecule_id = molecule.molecule_id  WHERE      bond.bond_type = '#' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "411": "SELECT atom.element  FROM atom  WHERE atom.molecule_id = 'TR000'  ORDER BY atom.element  LIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND(CAST(COUNT(CASE WHEN bond.bond_type = '=' THEN 1 END) AS REAL) * 100 / COUNT(bond.bond_id), 5) AS percent FROM bond WHERE bond.molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(molecule_id), 3) AS real) AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND((SUM(CASE WHEN atom.element = 'h' THEN 1 ELSE 0 END) * 100.0) / COUNT(atom.atom_id), 4) AS percent FROM atom WHERE atom.molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT atom.element, molecule.label  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT bond.bond_type, molecule.molecule_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.molecule_id = 'TR010' GROUP BY bond.bond_type HAVING COUNT(bond.bond_type) = (     SELECT MAX(bond_count)     FROM (         SELECT COUNT(bond.bond_type) AS bond_count         FROM bond         WHERE bond.molecule_id = 'TR010'         GROUP BY bond.bond_type     ) AS counts );\t----- bird -----\ttoxicology",
    "417": "SELECT bond.molecule_id  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE bond.bond_type = '-' AND molecule.label = '-'  ORDER BY bond.molecule_id  LIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*)  FROM connected  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.molecule_id = 'TR009'  AND (connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2  FROM connected  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE connected.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*)  FROM connected  WHERE connected.atom_id LIKE 'TR%_19' OR connected.atom_id2 LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT atom.element  FROM atom  WHERE atom.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT molecule.molecule_id  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE SUBSTR(atom.atom_id, 7, 2) BETWEEN '21' AND '25'  AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "423": "SELECT connected.bond_id  FROM atom AS a1  INNER JOIN connected ON a1.atom_id = connected.atom_id  INNER JOIN atom AS a2 ON connected.atom_id2 = a2.atom_id  WHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "424": "SELECT molecule.label  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE bond.bond_type = '='  GROUP BY bond.molecule_id  ORDER BY COUNT(bond.bond_type) DESC  LIMIT 1;\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bonds FROM (     SELECT COUNT(connected.bond_id) AS bond_count     FROM atom     LEFT JOIN connected ON atom.atom_id = connected.atom_id     WHERE atom.element = 'i'     GROUP BY atom.atom_id ) AS bond_counts;\t----- bird -----\ttoxicology",
    "426": "SELECT atom.element  FROM atom  WHERE atom.atom_id NOT IN (SELECT connected.atom_id FROM connected);\t----- bird -----\ttoxicology",
    "427": "SELECT connected.atom_id, connected.atom_id2 FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.molecule_id = 'TR041' AND bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "428": "SELECT atom.element  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  WHERE connected.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT atom.element FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT CAST(COUNT(molecule.label) AS REAL) * 100 / COUNT(bond.bond_id) AS proportion FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT atom.atom_id)  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = '#'  AND (atom.element = 'p' OR atom.element = 'br');\t----- bird -----\ttoxicology",
    "432": "SELECT      (COUNT(CASE WHEN a.element = 'cl' THEN 1 END) * 100.0 / COUNT(*)) AS percent FROM      atom a INNER JOIN      bond b ON a.molecule_id = b.molecule_id WHERE      b.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT atom.element  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT      (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(m.molecule_id)) AS percentage FROM      atom a INNER JOIN      molecule m ON a.molecule_id = m.molecule_id WHERE      m.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT COUNT(atom.element)  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = '+' AND SUBSTR(atom.atom_id, 7, 1) = '4';\t----- bird -----\ttoxicology",
    "436": "SELECT      (SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) * 1.0 / COUNT(a.element)) AS ratio,     m.label FROM      atom a INNER JOIN      molecule m ON a.molecule_id = m.molecule_id WHERE      a.molecule_id = 'TR006' GROUP BY      m.label;\t----- bird -----\ttoxicology",
    "437": "SELECT atom.molecule_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY atom.molecule_id HAVING COUNT(atom.atom_id) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*)  FROM satscores  INNER JOIN schools ON satscores.cds = schools.CDSCode  WHERE satscores.AvgScrMath > 400 AND schools.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT frpm.CDSCode FROM frpm WHERE (frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS Eligible_Free_Rate FROM frpm INNER JOIN satscores ON frpm.CDSCode = satscores.cds WHERE (satscores.NumGE1500 / satscores.NumTstTakr) > 0.3;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT schools.CharterNum  FROM satscores  INNER JOIN schools ON satscores.cds = schools.CDSCode  WHERE satscores.AvgScrWrite > 499  ORDER BY satscores.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT schools.School, schools.Street FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT schools.CDSCode FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE frpm.FreeMealCountK12 / frpm.TotalEnrollmentK12 > 0.1 AND satscores.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT schools.FundingType, schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Riverside' GROUP BY schools.FundingType, schools.School HAVING AVG(satscores.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT schools.School,         CONCAT(schools.Street, ', ', schools.City, ', ', schools.State, ' ', schools.Zip) AS full_address FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.County = 'Monterey'    AND frpm.CDSCode > 800;\t----- bird -----\tcalifornia_schools",
    "446": "SELECT schools.School, AVG(satscores.writing_score) AS average_writing_score, schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.OpenDate > '1991-01-01' OR schools.ClosedDate < '2000-01-01' GROUP BY schools.School, schools.Phone;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT schools.School, schools.DOCType FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.FundingType = 'Locally funded' AND (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > (     SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`)     FROM frpm     INNER JOIN schools ON frpm.CDSCode = schools.CDSCode     WHERE schools.FundingType = 'Locally funded' )\t----- bird -----\tcalifornia_schools",
    "448": "SELECT      CAST(frpm.`Free Meal Count (K-12)` AS REAL) / frpm.`Enrollment (K-12)` AS eligible_free_rate FROM      frpm JOIN      schools ON frpm.CDSCode = schools.CDSCode ORDER BY      frpm.`Enrollment (K-12)` DESC LIMIT 10;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT      CAST(frpm.`FRPM Count (K-12)` AS REAL) / CAST(frpm.`Enrollment (K-12)` AS REAL) AS eligible_FRPM_rate FROM      frpm  INNER JOIN      schools ON frpm.CDSCode = schools.CDSCode WHERE      schools.SOC = '66' ORDER BY      frpm.`FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT schools.Street, schools.City, schools.State, schools.Zip FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE (satscores.NumGE1500 / satscores.NumTstTakr) = (     SELECT MIN(satscores.NumGE1500 / satscores.NumTstTakr)     FROM satscores )\t----- bird -----\tcalifornia_schools",
    "451": "SELECT schools.AdmFName1, schools.AdmLName1 FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumGE1500 > 0 ORDER BY satscores.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(satscores.NumTstTakr)  FROM satscores  INNER JOIN schools ON satscores.cds = schools.CDSCode  WHERE schools.City = 'Fresno'  AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.District = 'Fresno Unified' ORDER BY satscores.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT schools.School FROM schools INNER JOIN satscores ON satscores.cds = schools.CDSCode WHERE schools.Virtual = 'F' ORDER BY satscores.AvgScrRead DESC GROUP BY schools.County LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT schools.School, satscores.AvgScrWrite FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich';\t----- bird -----\tcalifornia_schools",
    "456": "SELECT schools.School FROM schools INNER JOIN frpm ON frpm.CDSCode = schools.CDSCode WHERE schools.DOC = '31' ORDER BY frpm.enrollment_count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS monthly_average FROM schools WHERE County = 'Alameda'    AND DOC = '52'    AND strftime('%Y', OpenDate) = '1980';\t----- bird -----\tcalifornia_schools",
    "458": "SELECT CAST(COUNT(*) AS REAL) / (SELECT COUNT(*)                                     FROM schools                                     WHERE County = 'Orange County'                                     AND DOC = '52'                                     AND StatusType = 'Merged') AS ratio FROM schools  WHERE County = 'Orange County'  AND DOC = '54'  AND StatusType = 'Merged';\t----- bird -----\tcalifornia_schools",
    "459": "SELECT schools.Street, schools.School FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrMath DESC LIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*)  FROM schools  INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode  WHERE schools.Charter = 0  AND schools.County = 'Los Angeles'  AND (frpm.`Free Meal Count (K-12)` * 100 / frpm.`Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT SUM(frpm.`Enrollment (Ages 5-17)`) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Academic Year` = 2014 AND schools.County = 'Fremont' AND schools.EdOpsCode = 'SSS';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT frpm.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Los Angeles' AND frpm.CDSCode = 'Kindergarten to 9th grade';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(School) AS number_of_schools FROM schools WHERE Virtual = 'F' AND County IN ('San Diego', 'Santa Barbara') GROUP BY County ORDER BY number_of_schools DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT schools.GSoffered  FROM schools  ORDER BY schools.Longitude DESC  LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "465": "SELECT      schools.City,      COUNT(schools.School) AS school_count FROM      schools WHERE      schools.GSserved = 'K-8'  GROUP BY      schools.City;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, frpm.`District Code` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3  FROM schools  WHERE County = 'San Bernardino'    AND City = 'San Bernardino City Unified'    AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'    AND SOC = '62'    AND DOC = '54';\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id INNER JOIN trans ON account.account_id = trans.account_id WHERE district.district_id = 'East Bohemia' AND trans.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district.district_id)  FROM district  JOIN client ON client.district_id = district.district_id  WHERE client.gender = 'F'  AND district.A11 > 6000  AND district.A11 < 10000;\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*)  FROM client  INNER JOIN district ON client.district_id = district.district_id  WHERE client.gender = 'M'  AND district.A3 = 'north Bohemia'  AND district.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT      a.account_id,      (SELECT AVG(d2.salary) FROM disp d2       INNER JOIN client c2 ON d2.client_id = c2.client_id       WHERE c2.gender = 'F') -      (SELECT AVG(d1.salary) FROM disp d1       INNER JOIN client c1 ON d1.client_id = c1.client_id       WHERE c1.gender = 'F'       GROUP BY c1.client_id       ORDER BY c1.birth_date ASC       LIMIT 1) AS gap FROM      account a INNER JOIN      disp d ON a.account_id = d.account_id INNER JOIN      client c ON d.client_id = c.client_id WHERE      c.gender = 'F' ORDER BY      c.birth_date ASC;\t----- bird -----\tfinancial",
    "472": "SELECT account.account_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id WHERE client.birth_date = (SELECT MIN(birth_date) FROM client) GROUP BY client.client_id HAVING AVG(disp.account_id) = (SELECT MAX(avg_salary) FROM (SELECT AVG(disp.account_id) AS avg_salary FROM disp GROUP BY client_id) AS avg_table);\t----- bird -----\tfinancial",
    "473": "SELECT account.account_id  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE loan.date LIKE '1997%'  AND account.frequency = 'POPLATEK TYDNE'  ORDER BY loan.amount ASC  LIMIT 1;\t----- bird -----\tfinancial",
    "474": "SELECT account.account_id FROM account INNER JOIN loan ON loan.account_id = account.account_id WHERE loan.duration > 12 AND account.date >= '1993-01-01' AND account.date < '1994-01-01' ORDER BY loan.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*)  FROM client  JOIN disp ON client.client_id = disp.client_id  JOIN account ON disp.account_id = account.account_id  JOIN district ON client.district_id = district.district_id  WHERE client.gender = 'F'  AND client.birth_date < '1950-01-01'  AND district.district_id = (SELECT district_id FROM district WHERE district_name = 'Sokolov');\t----- bird -----\tfinancial",
    "476": "SELECT district.A2 FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT      CAST(COUNT(CASE WHEN client.gender = 'M' THEN 1 END) AS REAL) * 100 / COUNT(*) AS male_percentage FROM      client INNER JOIN      district ON client.district_id = district.district_id WHERE      district.district_id = (SELECT district_id FROM district WHERE name = 'South Bohemia' ORDER BY inhabitants DESC LIMIT 1);\t----- bird -----\tfinancial",
    "478": "SELECT      CAST((SUM(CASE WHEN trans.date = '1998-12-27' THEN trans.balance END) -            SUM(CASE WHEN trans.date = '1993-03-22' THEN trans.balance END)) AS REAL) * 100 /      NULLIF(SUM(CASE WHEN trans.date = '1993-03-22' THEN trans.balance END), 0) AS increase_rate FROM      loan INNER JOIN      account ON loan.account_id = account.account_id INNER JOIN      client ON account.account_id = client.client_id WHERE      loan.date = (SELECT MIN(loan.date)                   FROM loan                   INNER JOIN account ON loan.account_id = account.account_id                   WHERE loan.date >= '1993-07-05')\t----- bird -----\tfinancial",
    "479": "SELECT      CAST(SUM(CASE WHEN loan.status = 'A' THEN loan.amount ELSE 0 END) AS REAL) * 100 / SUM(loan.amount) AS percentage_paid FROM      loan WHERE      loan.status IN ('A', 'B', 'C', 'D');\t----- bird -----\tfinancial",
    "480": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM loan WHERE amount < 100000) AS percentage FROM loan WHERE amount < 100000 AND status = 'C';\t----- bird -----\tfinancial",
    "481": "SELECT district.district_id,         (district.A13 - district.A12) / district.A12 * 100 AS unemployment_increment_percentage FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN client ON account.district_id = client.district_id INNER JOIN district ON client.district_id = district.district_id WHERE loan.status = 'D';\t----- bird -----\tfinancial",
    "482": "SELECT account.district_id, COUNT(client.client_id) AS female_count FROM client INNER JOIN account ON client.client_id = disp.client_id WHERE client.gender = 'F' GROUP BY account.district_id ORDER BY female_count DESC LIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*)  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE account.frequency = 'POPLATEK MESICNE'  AND loan.amount >= 250000  AND loan.date >= '1995-01-01'  AND loan.date <= '1997-12-31';\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account.account_id)  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE account.district_id = 1 AND loan.status IN ('C', 'D');\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*)  FROM client  WHERE client.district_id = (     SELECT district.district_id      FROM district      ORDER BY district.A15 DESC      LIMIT 1 OFFSET 1 )  AND client.gender = 'M';\t----- bird -----\tfinancial",
    "486": "SELECT district.A2, SUM(trans.amount) AS total_withdrawals FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.type = 'VYDAJ' AND trans.date LIKE '1996-01%' GROUP BY district.A2 ORDER BY total_withdrawals DESC LIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*)  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE account.district_id = 1 AND loan.status IN ('C', 'D');\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*)  FROM client  WHERE client.gender = 'M'  AND client.district_id = (     SELECT district.district_id      FROM district      ORDER BY district.A15 DESC      LIMIT 1 OFFSET 1 );\t----- bird -----\tfinancial",
    "489": "SELECT disp.account_id FROM trans INNER JOIN card ON trans.account_id = card.disp_id INNER JOIN disp ON card.disp_id = disp.disp_id WHERE trans.operation = 'VYBER KARTOU'   AND strftime('%Y', trans.date) = '1998'   AND trans.amount < (SELECT AVG(trans.amount)                       FROM trans                       WHERE trans.operation = 'VYBER KARTOU'                         AND strftime('%Y', trans.date) = '1998');\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT disp.type FROM disp INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE disp.type = 'DISPONENT' AND district.A11 > 8000 AND district.A11 <= 9000;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(district.A15) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE account.date >= '1997-01-01' AND district.A15 > 4000;\t----- bird -----\tfinancial",
    "492": "SELECT trans.account FROM trans INNER JOIN disp ON trans.account_id = disp.account_id WHERE trans.operation = 'VYBER' AND disp.client_id = 3356;\t----- bird -----\tfinancial",
    "493": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM account a                                            INNER JOIN district d ON a.district_id = d.district_id                                            WHERE d.A11 > 10000) AS percentage FROM client c  INNER JOIN disp d ON c.client_id = d.client_id  INNER JOIN account a ON d.account_id = a.account_id  INNER JOIN district di ON a.district_id = di.district_id  WHERE c.gender = 'F' AND di.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT      ((SUM(CASE WHEN loan.date BETWEEN '1997-01-01' AND '1997-12-31' THEN loan.amount ELSE 0 END) -        SUM(CASE WHEN loan.date BETWEEN '1996-01-01' AND '1996-12-31' THEN loan.amount ELSE 0 END)) /        NULLIF(SUM(CASE WHEN loan.date BETWEEN '1996-01-01' AND '1996-12-31' THEN loan.amount ELSE 0 END), 0)) * 100 AS growth_rate FROM      loan INNER JOIN      account ON loan.account_id = account.account_id INNER JOIN      disp ON account.account_id = disp.account_id INNER JOIN      client ON disp.client_id = client.client_id WHERE      client.gender = 'M';\t----- bird -----\tfinancial",
    "495": "SELECT      a.frequency,      o.k_symbol  FROM      account a  LEFT JOIN      order o ON a.account_id = o.account_id  WHERE      a.account_id = 3      OR o.account_id = 3539;\t----- bird -----\tfinancial",
    "496": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM disp WHERE account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK TYDNE')) AS percentage_male_clients FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M') AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK TYDNE');\t----- bird -----\tfinancial",
    "497": "SELECT account.account_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' ORDER BY client.birth_date ASC, district.A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "498": "SELECT AVG(loan.amount)  FROM loan  INNER JOIN account ON loan.account_id = account.account_id  WHERE loan.status IN ('C', 'D')  AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, (YEAR(CURDATE()) - YEAR(client.birth_date)) AS age FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN client ON disp.client_id = client.client_id WHERE card.type = 'gold' AND disp.type = 'OWNER';\t----- bird -----\tfinancial"
}