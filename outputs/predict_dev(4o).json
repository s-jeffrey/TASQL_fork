{
    "0": "SELECT MAX(frpm.`Percent (%) Eligible Free (K-12)`)  FROM frpm  INNER JOIN schools ON frpm.CDSCode = schools.CDSCode  WHERE schools.County = 'Alameda';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT (frpm.`Free Meal Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)`) AS eligible_free_rate FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.EdOpsCode = 'CON' ORDER BY eligible_free_rate ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT DISTINCT schools.Zip FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter School (Y/N)` = 1   AND schools.County = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT schools.MailStreet FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT schools.Phone FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter Funding Type` = 'Directly funded'   AND frpm.`Charter School (Y/N)` = 1   AND schools.OpenDate > '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath > 400 AND schools.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT schools.School FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr > 500 AND schools.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT schools.Phone FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT satscores.NumTstTakr FROM frpm INNER JOIN satscores ON frpm.CDSCode = satscores.cds ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath > 560   AND schools.FundingType = 'Directly funded'   AND schools.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "10": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode INNER JOIN frpm ON frpm.CDSCode = schools.CDSCode ORDER BY satscores.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT frpm.CDSCode FROM frpm WHERE (frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(frpm.`Percent (%) Eligible Free (Ages 5-17)`) FROM satscores INNER JOIN frpm ON satscores.cds = frpm.CDSCode WHERE (satscores.NumGE1500 / satscores.NumTstTakr) > 0.3;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT schools.Phone FROM (     SELECT satscores.cds, (satscores.NumGE1500 / satscores.NumTstTakr) AS ExcellenceRate     FROM satscores     ORDER BY ExcellenceRate DESC     LIMIT 3 ) AS top_schools INNER JOIN schools ON top_schools.cds = schools.CDSCode;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT schools.School, schools.NCESSchool FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`Enrollment (Ages 5-17)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT schools.District FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.StatusType = 'Active' ORDER BY satscores.AvgScrRead DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Alameda'   AND schools.StatusType = 'Merged'   AND satscores.NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT schools.CharterNum FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrWrite > 499   AND schools.CharterNum IS NOT NULL ORDER BY satscores.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Fresno'   AND schools.FundingType = 'Directly funded'   AND satscores.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT schools.Phone FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Amador'   AND frpm.`Low Grade` = '9'   AND frpm.`High Grade` = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.City = 'Los Angeles'   AND frpm.`Free Meal Count (K-12)` > 500   AND frpm.`FRPM Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT satscores.sname FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Contra Costa' ORDER BY satscores.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT schools.School, schools.Street FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT DISTINCT schools.School FROM frpm INNER JOIN satscores ON frpm.CDSCode = satscores.cds INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) > 0.1   AND satscores.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT schools.School, schools.FundingType FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Riverside' GROUP BY schools.CDSCode HAVING AVG(satscores.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT schools.School, schools.Street, schools.City, schools.State, schools.Zip FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Monterey'   AND schools.SOCType = 'High Schools (Public)'   AND frpm.`FRPM Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT schools.School, satscores.AvgScrWrite, schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.OpenDate > '1991-12-31' OR schools.ClosedDate < '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "28": "SELECT schools.School, schools.DOCType FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter Funding Type` = 'Locally funded' AND (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > (     SELECT AVG(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`)     FROM frpm     WHERE frpm.`Charter Funding Type` = 'Locally funded' )\t----- bird -----\tcalifornia_schools",
    "29": "SELECT schools.OpenDate FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`Enrollment (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT schools.City FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`Enrollment (K-12)` ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) AS eligible_free_rate FROM frpm ORDER BY frpm.`Enrollment (K-12)` DESC LIMIT 11 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT (frpm.`FRPM Count (K-12)` / frpm.`Enrollment (K-12)`) AS eligible_frpm_rate FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.SOC = '66' ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT schools.School, schools.Website FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT frpm.`Free Meal Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)` AS free_rate FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Kacey' AND schools.AdmLName1 = 'Gibson';\t----- bird -----\tcalifornia_schools",
    "35": "SELECT schools.AdmEmail1 FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter School (Y/N)` = 1 ORDER BY frpm.`Enrollment (K-12)` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT      schools.AdmFName1, schools.AdmLName1,      schools.AdmFName2, schools.AdmLName2,      schools.AdmFName3, schools.AdmLName3 FROM      satscores INNER JOIN      schools ON satscores.cds = schools.CDSCode ORDER BY      satscores.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT schools.Street, schools.City, schools.Zip, schools.State FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE (satscores.NumGE1500 / satscores.NumTstTakr) = (     SELECT MIN(satscores.NumGE1500 / satscores.NumTstTakr)     FROM satscores     WHERE satscores.NumTstTakr > 0 ) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT schools.Website FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Los Angeles' AND satscores.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(satscores.NumTstTakr)  FROM satscores  INNER JOIN schools ON satscores.cds = schools.CDSCode  WHERE schools.County = 'Fresno'  AND YEAR(schools.OpenDate) = 1980;\t----- bird -----\tcalifornia_schools",
    "40": "SELECT schools.Phone FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.dname = 'Fresno Unified' ORDER BY satscores.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT School FROM (     SELECT s.School,             ss.AvgScrRead,             s.County,            ROW_NUMBER() OVER (PARTITION BY s.County ORDER BY ss.AvgScrRead DESC) as rn     FROM schools s     INNER JOIN satscores ss ON s.CDSCode = ss.cds     WHERE s.Virtual = 'F' ) ranked_schools WHERE rn <= 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT schools.EdOpsName FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "43": "SELECT satscores.AvgScrMath, schools.County FROM (     SELECT satscores.cds, satscores.AvgScrMath,             (satscores.AvgScrMath + satscores.AvgScrRead + satscores.AvgScrWrite) AS TotalAvgScore     FROM satscores     ORDER BY TotalAvgScore ASC     LIMIT 1 ) AS lowest_score_school INNER JOIN schools ON lowest_score_school.cds = schools.CDSCode;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT satscores.AvgScrWrite, schools.City FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT schools.School, satscores.AvgScrWrite FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich';\t----- bird -----\tcalifornia_schools",
    "46": "SELECT schools.School FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.DOC = '31' ORDER BY frpm.CDSCode DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*) / 12 AS monthly_average FROM schools WHERE County = 'Alameda'   AND DOC = '52'   AND YEAR(OpenDate) = 1980;\t----- bird -----\tcalifornia_schools",
    "48": "SELECT      (COUNT(CASE WHEN DOC = '54' THEN 1 END) * 1.0 / COUNT(CASE WHEN DOC = '52' THEN 1 END)) AS ratio FROM      schools WHERE      StatusType = 'Merged' AND      County = 'Orange';\t----- bird -----\tcalifornia_schools",
    "49": "SELECT schools.County, schools.School, schools.ClosedDate FROM schools WHERE schools.StatusType = 'Closed' AND schools.County = (     SELECT schools.County     FROM schools     WHERE schools.StatusType = 'Closed'     GROUP BY schools.County     ORDER BY COUNT(*) DESC     LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "50": "SELECT schools.Street, schools.School FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrMath DESC LIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT schools.MailStreet, schools.School FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.MailCity = 'Lakeport' AND (satscores.AvgScrMath + satscores.AvgScrRead + satscores.AvgScrWrite) >= 1500;\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(satscores.NumTstTakr)  FROM satscores  INNER JOIN schools ON satscores.cds = schools.CDSCode  WHERE schools.MailCity = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT schools.School, schools.MailZip FROM schools WHERE schools.AdmFName1 = 'Avetik' AND schools.AdmLName1 = 'Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT      (COUNT(CASE WHEN County = 'Colusa' THEN 1 END) * 1.0 /       COUNT(CASE WHEN County = 'Humboldt' THEN 1 END)) AS ratio FROM      schools WHERE      MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA'   AND City = 'San Joaquin'   AND StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT schools.Phone, schools.Ext FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrWrite DESC LIMIT 333, 1\t----- bird -----\tcalifornia_schools",
    "58": "SELECT schools.Phone, schools.Ext, schools.School FROM schools WHERE schools.Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson')    OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P'    AND Charter = 1    AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1   AND City = 'Hickman'   AND DOC = 52;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Los Angeles'   AND schools.Charter = 0   AND (frpm.`Free Meal Count (K-12)` * 100 / frpm.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT      schools.AdmFName1,      schools.AdmLName1,      schools.AdmFName2,      schools.AdmLName2,      schools.School,      schools.City FROM      schools WHERE      schools.Charter = 1      AND schools.CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT      CAST(COUNT(*) FILTER (WHERE frpm.`Charter Funding Type` = 'Locally funded') AS REAL) * 100.0 / COUNT(*) AS ratio_percentage FROM      schools INNER JOIN      frpm ON schools.CDSCode = frpm.CDSCode WHERE      schools.County = 'Santa Clara';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE FundingType = 'Directly funded'   AND County = 'Stanislaus'   AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE City = 'San Francisco'   AND District = 'Community College District'   AND strftime('%Y', ClosedDate) = '1989';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County FROM schools WHERE SOC = '11'   AND ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT schools.NCESDist FROM schools WHERE schools.SOC = '31';\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE County = 'Alpine'   AND EdOpsCode = 'COMMDAY'   AND StatusType IN ('Active', 'Closed');\t----- bird -----\tcalifornia_schools",
    "71": "SELECT frpm.`District Code` FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.Magnet = 0 AND schools.City = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(frpm.`Enrollment (Ages 5-17)`) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.EdOpsCode = 'SSS' AND schools.City = 'Fremont' AND frpm.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.EdOpsName = 'Youth Authority School' AND schools.MailStreet = 'PO Box 1040';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT MIN(frpm.CDSCode) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.EdOpsCode = 'SPECON'   AND schools.NCESDist = '0613360';\t----- bird -----\tcalifornia_schools",
    "75": "SELECT schools.EILName, schools.School FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.County = '37' AND frpm.BreakfastProvision = '2';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT schools.City FROM schools WHERE schools.County = 'Merced'   AND schools.EILCode = 'HS'   AND schools.CDSCode IN (     SELECT frpm.CDSCode     FROM frpm     WHERE frpm.LunchProvision = 2       AND frpm.LowestGrade = 9       AND frpm.HighestGrade = 12   );\t----- bird -----\tcalifornia_schools",
    "77": "SELECT schools.School, frpm.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Los Angeles' AND schools.GSserved = 'K-9';\t----- bird -----\tcalifornia_schools",
    "78": "SELECT schools.GSserved FROM schools WHERE schools.City = 'Adelanto' GROUP BY schools.GSserved ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(School) AS school_count FROM schools WHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY school_count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT schools.School, schools.Latitude FROM schools ORDER BY schools.Latitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "81": "SELECT schools.City, schools.GSserved, schools.School FROM schools WHERE schools.State = 'CA' ORDER BY schools.Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT schools.GSoffered FROM schools ORDER BY ABS(schools.Longitude) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "83": "SELECT schools.City, COUNT(schools.School) AS count_schools FROM schools WHERE schools.GSserved = 'K-8' GROUP BY schools.City;  SELECT COUNT(*) AS count_multiple_provision_types FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.Magnet = 1   AND schools.GSserved = 'K-8'   AND frpm.`NSLP Provision Status` = 'Multiple Provision Types';\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, District FROM schools GROUP BY AdmFName1, District ORDER BY COUNT(*) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, frpm.`District Code` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "86": "SELECT schools.AdmLName1, schools.District, schools.County, schools.School FROM schools WHERE schools.CharterNum = '40';\t----- bird -----\tcalifornia_schools",
    "87": "SELECT DISTINCT schools.AdmEmail1, schools.AdmEmail2 FROM schools WHERE schools.County = 'San Bernardino'   AND schools.City = 'San Bernardino City Unified'   AND schools.OpenDate BETWEEN '2009-01-01' AND '2010-12-31'   AND schools.SOC = '62'   AND schools.DOC = '54';\t----- bird -----\tcalifornia_schools",
    "88": "SELECT schools.AdmEmail1, satscores.sname FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE account.frequency = 'POPLATEK PO OBRATU' AND district.A3 = 'east Bohemia';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN district ON account.district_id = district.district_id JOIN loan ON account.account_id = loan.account_id WHERE district.A3 = 'Prague';\t----- bird -----\tfinancial",
    "91": "SELECT      CASE          WHEN AVG(district.A12) > AVG(district.A13) THEN '1995'          ELSE '1996'      END AS higher_unemployment_year FROM      district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district.district_id)  FROM client  INNER JOIN district ON client.district_id = district.district_id  WHERE client.gender = 'F'  AND district.A11 > 6000  AND district.A11 < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M'   AND district.A3 = 'north Bohemia'   AND district.A11 > 8000;\t----- bird -----\tfinancial",
    "94": "SELECT a.account_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dist ON a.district_id = dist.district_id WHERE c.gender = 'F' AND c.birth_date = (     SELECT MIN(c2.birth_date)     FROM client c2     WHERE c2.gender = 'F' ) AND dist.A11 = (     SELECT MIN(dist2.A11)     FROM client c2     JOIN disp d2 ON c2.client_id = d2.client_id     JOIN account a2 ON d2.account_id = a2.account_id     JOIN district dist2 ON a2.district_id = dist2.district_id     WHERE c2.gender = 'F' ) UNION ALL SELECT (MAX(dist.A11) - MIN(dist.A11)) AS salary_gap FROM district dist;\t----- bird -----\tfinancial",
    "95": "SELECT account.account_id FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON account.district_id = district.district_id ORDER BY client.birth_date DESC, district.A11 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(*) FROM account INNER JOIN disp ON account.account_id = disp.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT disp.client_id FROM account INNER JOIN disp ON account.account_id = disp.account_id WHERE account.frequency = 'POPLATEK PO OBRATU'   AND disp.type = 'DISPONENT';\t----- bird -----\tfinancial",
    "98": "SELECT account.account_id FROM account INNER JOIN loan ON account.account_id = loan.account_id WHERE loan.date >= '1997-01-01'    AND loan.date <= '1997-12-31'   AND account.frequency = 'POPLATEK TYDNE'   AND loan.amount = (     SELECT MIN(loan.amount)     FROM loan     WHERE loan.date >= '1997-01-01'        AND loan.date <= '1997-12-31'   )\t----- bird -----\tfinancial",
    "99": "SELECT account.account_id FROM account INNER JOIN loan ON account.account_id = loan.account_id WHERE loan.duration > 12   AND strftime('%Y', account.date) = '1993' ORDER BY loan.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F'   AND client.birth_date < '1950-01-01'   AND district.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "101": "SELECT trans.account FROM trans WHERE trans.date >= '1995-01-01' AND trans.date <= '1995-12-31' ORDER BY trans.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT account.account_id FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE account.date < '1997-01-01' AND trans.balance > 3000\t----- bird -----\tfinancial",
    "103": "SELECT client.client_id FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN client ON disp.client_id = client.client_id WHERE card.issued = '1994-03-03';\t----- bird -----\tfinancial",
    "104": "SELECT account.date FROM account WHERE account.account_id = (     SELECT trans.account_id     FROM trans     WHERE trans.amount = 840 AND trans.date = '1998-10-14' );\t----- bird -----\tfinancial",
    "105": "SELECT account.district_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT trans.amount FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN trans ON disp.account_id = trans.account_id WHERE card.issued = '1996-10-21' ORDER BY trans.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "107": "SELECT client.gender FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON account.district_id = district.district_id WHERE district.A11 = (     SELECT MAX(district.A11)     FROM district ) ORDER BY client.birth_date LIMIT 1;\t----- bird -----\tfinancial",
    "108": "SELECT trans.amount FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN trans ON account.account_id = trans.account_id WHERE loan.amount = (     SELECT MAX(loan.amount)     FROM loan ) AND trans.date > account.date ORDER BY trans.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT client.client_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Jesenik' AND client.gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT disp.disp_id FROM trans INNER JOIN disp ON trans.account_id = disp.account_id WHERE trans.amount = 5100 AND trans.date = '1998-09-02';\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Litomerice' AND strftime('%Y', account.date) = '1996';\t----- bird -----\tfinancial",
    "112": "SELECT district.A2 FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT client.birth_date FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE loan.amount = 98832 AND loan.date = '1996-01-03';\t----- bird -----\tfinancial",
    "114": "SELECT a.account_id FROM account a INNER JOIN disp d ON a.account_id = d.account_id INNER JOIN client c ON d.client_id = c.client_id INNER JOIN district di ON a.district_id = di.district_id WHERE di.A3 = 'Prague' ORDER BY a.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT      (CAST(COUNT(CASE WHEN client.gender = 'M' THEN 1 END) AS REAL) * 100 / COUNT(client.client_id)) AS male_percentage FROM      district INNER JOIN      client ON district.district_id = client.district_id WHERE      district.A3 = 'south Bohemia'     AND district.A4 = (         SELECT MAX(d2.A4)         FROM district d2         WHERE d2.A3 = 'south Bohemia'     );\t----- bird -----\tfinancial",
    "116": "SELECT      CAST((balance_date_A - balance_date_B) AS REAL) * 100 / balance_date_B AS increase_rate FROM (     SELECT          (SELECT SUM(trans.balance)           FROM trans           INNER JOIN disp ON trans.account_id = disp.account_id           WHERE disp.client_id = (              SELECT disp.client_id               FROM loan               INNER JOIN disp ON loan.account_id = disp.account_id               WHERE loan.date = '1993-07-05'               ORDER BY loan.date               LIMIT 1          ) AND trans.date = '1998-12-27') AS balance_date_A,                   (SELECT SUM(trans.balance)           FROM trans           INNER JOIN disp ON trans.account_id = disp.account_id           WHERE disp.client_id = (              SELECT disp.client_id               FROM loan               INNER JOIN disp ON loan.account_id = disp.account_id               WHERE loan.date = '1993-07-05'               ORDER BY loan.date               LIMIT 1          ) AND trans.date = '1993-03-22') AS balance_date_B ) AS balances;\t----- bird -----\tfinancial",
    "117": "SELECT (SUM(CASE WHEN loan.status = 'A' THEN loan.amount ELSE 0 END) * 100.0 / SUM(loan.amount)) AS percentage_fully_paid FROM loan;\t----- bird -----\tfinancial",
    "118": "SELECT      CAST(COUNT(CASE WHEN loan.status = 'C' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM      loan WHERE      loan.amount < 100000;\t----- bird -----\tfinancial",
    "119": "SELECT account.account_id, district.A2 AS district_name, district.A3 AS region FROM account INNER JOIN district ON account.district_id = district.district_id WHERE strftime('%Y', account.date) = '1993' AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "120": "SELECT account.account_id, account.frequency FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON account.district_id = district.district_id WHERE account.date >= '1995-01-01'    AND account.date <= '2000-12-31'   AND district.A3 = 'east Bohemia'   AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "121": "SELECT account.account_id, account.date FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT district.A2 AS district_name, district.A3 AS region FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.loan_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT account.account_id, district.A2 AS district_name, district.A3 AS region FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A2, district.A11 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT district.A2,         ((district.A13 - district.A12) / district.A12) * 100 AS unemployment_increment_percentage FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.status = 'D';\t----- bird -----\tfinancial",
    "126": "SELECT      CAST(COUNT(*) AS REAL) * 100.0 / (SELECT COUNT(*) FROM account WHERE strftime('%Y', date) = '1993') AS percentage FROM      account INNER JOIN      district ON account.district_id = district.district_id WHERE      district.A2 = 'Decin'      AND strftime('%Y', account.date) = '1993';\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT district.A2 FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' GROUP BY district.A2 ORDER BY COUNT(client.client_id) DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT district.A2 FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.type = 'VYDAJ'  AND trans.date LIKE '1996-01%' ORDER BY trans.amount DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "To convert the given SR (Structured Representation) into an executable SQL query, we need to follow the logic described in the SR and ensure it aligns with the schema and evidence provided. The goal is to count the number of account holders in the South Bohemia region who do not own credit cards.  Here's how we can construct the SQL query:  1. **Filter by Region**: We need to join the `district` table to filter accounts located in South Bohemia. 2. **Identify Account Holders Without Credit Cards**: We need to find account holders who do not have an entry in the `card` table, which can be done using a `LEFT JOIN` and checking for `NULL` in the `card.card_id`. 3. **Count the Results**: Finally, we count the number of such account holders.  Here is the SQL query:   SELECT COUNT(DISTINCT disp.client_id) AS account_holders_without_cards FROM disp INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id LEFT JOIN card ON disp.disp_id = card.disp_id WHERE district.A3 = 'south Bohemia' AND card.card_id IS NULL;   ### Explanation:  - **`INNER JOIN`**: We join `disp` with `account` and `district` to filter accounts based on the region South Bohemia. - **`LEFT JOIN`**: We use a `LEFT JOIN` between `disp` and `card` to include all account holders and identify those without a credit card (`card.card_id IS NULL`). - **`COUNT(DISTINCT disp.client_id)`**: We count distinct `client_id`s to ensure each account holder is counted only once. - **`WHERE` Clause**: Filters for the region South Bohemia and ensures the account holder does not have a credit card.\t----- bird -----\tfinancial",
    "131": "SELECT district.A2 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.status IN ('C', 'D') GROUP BY district.A2 ORDER BY COUNT(loan.loan_id) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loan.amount) AS average_loan_amount FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT district.district_id, district.A2 FROM district ORDER BY district.A13 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(*) FROM account WHERE district_id = (     SELECT district_id     FROM district     ORDER BY A16 DESC     LIMIT 1 );\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT disp.account_id)  FROM trans INNER JOIN disp ON trans.account_id = disp.account_id INNER JOIN account ON disp.account_id = account.account_id WHERE trans.operation = 'VYBER KARTOU'   AND account.frequency = 'POPLATEK MESICNE'   AND trans.balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(DISTINCT loan.account_id)  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE account.frequency = 'POPLATEK MESICNE'  AND loan.amount >= 250000  AND loan.date BETWEEN '1995-01-01' AND '1997-12-31';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account.account_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.status IN ('C', 'D') AND account.district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M' AND district.A15 = (     SELECT DISTINCT A15     FROM district     ORDER BY A15 DESC     LIMIT 1 OFFSET 1 )\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Pisek';\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT district.A2 FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.amount > 10000 AND trans.date >= '1997-01-01' AND trans.date <= '1997-12-31';\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT order.account_id FROM order INNER JOIN account ON order.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE order.k_symbol = 'SIPO' AND district.A2 = 'Pisek';\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT account.account_id FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT AVG(trans.amount)  FROM trans  WHERE trans.operation = 'VYBER KARTOU'    AND strftime('%Y', trans.date) = '2021'  GROUP BY strftime('%m', trans.date);\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT disp.client_id FROM trans INNER JOIN disp ON trans.account_id = disp.account_id WHERE trans.operation = 'VYBER KARTOU'   AND strftime('%Y', trans.date) = '1998'   AND trans.amount < (     SELECT AVG(trans.amount)     FROM trans     WHERE trans.operation = 'VYBER KARTOU'       AND strftime('%Y', trans.date) = '1998'   );\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F';\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT account.account_id)  FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' AND district.A3 = 'south Bohemia';\t----- bird -----\tfinancial",
    "148": "SELECT account.account_id FROM account INNER JOIN district ON account.district_id = district.district_id INNER JOIN disp ON account.account_id = disp.account_id WHERE district.A2 = 'Tabor' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT disp.type FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN district ON account.district_id = district.district_id LEFT JOIN loan ON account.account_id = loan.account_id WHERE disp.type = 'DISPONENT' AND loan.account_id IS NULL AND district.A11 > 8000 AND district.A11 <= 9000;\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT trans.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id INNER JOIN trans ON account.account_id = trans.account_id WHERE district.A3 = 'north Bohemia' AND trans.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT district.A2 FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(district.A15) AS average_crimes_1995 FROM district INNER JOIN account ON district.district_id = account.district_id WHERE district.A15 > 4000 AND account.date >= '1997-01-01';\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'classic' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.A2 = 'Hl.m. Praha' AND client.gender = 'M';\t----- bird -----\tfinancial",
    "155": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM card)) AS percent_gold_issued_prior_1998 FROM card WHERE type = 'gold' AND issued < '1998-01-01';\t----- bird -----\tfinancial",
    "156": "SELECT disp.client_id FROM loan INNER JOIN disp ON loan.account_id = disp.account_id WHERE disp.type = 'OWNER' ORDER BY loan.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "157": "SELECT district.A15 FROM account INNER JOIN district ON account.district_id = district.district_id WHERE account.account_id = 532;\t----- bird -----\tfinancial",
    "158": "SELECT account.district_id FROM account INNER JOIN order ON account.account_id = order.account_id WHERE order.order_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT trans.date, trans.amount, trans.account_id FROM trans INNER JOIN disp ON trans.account_id = disp.account_id WHERE trans.operation = 'VYBER' AND disp.client_id = 3356;\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account INNER JOIN loan ON account.account_id = loan.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND loan.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT card.type FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE client.client_id = 13539 AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "162": "SELECT district.A3 FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT district.A2 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.status = 'A' GROUP BY district.district_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT disp.client_id FROM order INNER JOIN disp ON order.account_id = disp.account_id WHERE order.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT      trans.trans_id,      trans.account_id,      trans.amount,      trans.balance,      trans.bank,      trans.date,      trans.k_symbol,      trans.operation,      trans.type FROM      trans INNER JOIN      account ON trans.account_id = account.account_id WHERE      account.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Jesenik';\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT client.client_id FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN client ON disp.client_id = client.client_id WHERE card.type = 'junior' AND card.issued >= '1997-01-01';\t----- bird -----\tfinancial",
    "168": "SELECT      CAST(COUNT(DISTINCT client.client_id) AS REAL) * 100 / COUNT(DISTINCT df4.client_id) AS percentage_of_women FROM      district INNER JOIN      account ON district.district_id = account.district_id INNER JOIN      disp ON account.account_id = disp.account_id INNER JOIN      client ON disp.client_id = client.client_id WHERE      district.A11 > 10000     AND client.gender = 'F';\t----- bird -----\tfinancial",
    "169": "SELECT      ((SUM(CASE WHEN strftime('%Y', loan.date) = '1997' THEN loan.amount ELSE 0 END) -        SUM(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) * 100.0 /       SUM(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) AS growth_rate FROM      loan INNER JOIN      disp ON loan.account_id = disp.account_id INNER JOIN      client ON disp.client_id = client.client_id WHERE      client.gender = 'M' AND      (strftime('%Y', loan.date) = '1996' OR strftime('%Y', loan.date) = '1997');\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE trans.operation = 'VYBER KARTOU'   AND trans.date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT      (SELECT SUM(A16) FROM district WHERE A3 = 'north Bohemia') -      (SELECT SUM(A16) FROM district WHERE A3 = 'east Bohemia') AS crime_difference\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE disp.account_id BETWEEN 1 AND 10 AND disp.type IN ('OWNER', 'DISPONENT');\t----- bird -----\tfinancial",
    "173": "SELECT      (SELECT COUNT(*)       FROM trans       WHERE trans.account_id = 3 AND trans.k_symbol = 'SLUZBY') AS statement_count,     (SELECT trans.k_symbol       FROM trans       WHERE trans.amount = 3539) AS aim_of_debiting;\t----- bird -----\tfinancial",
    "174": "To convert the given SR (Structured Representation) into an executable SQL query, we need to follow the logic of the SR and ensure that the SQL query accurately answers the question based on the provided schema and column descriptions.  The question asks for the birth year of the account owner with client ID 130. The SR indicates that we need to filter the `disp` table for `client_id` 130, then select the `birth_date` from the `client` table, and finally extract the year from the `birth_date`.  Here's how we can construct the SQL query:  1. **Join the `disp` and `client` tables**: We need to join these tables on `disp.client_id = client.client_id` to access the `birth_date` of the client.  2. **Filter for `client_id` 130**: We apply a filter to get the specific client.  3. **Select the year from `birth_date`**: We use the `YEAR()` function to extract the year from the `birth_date`.  Here is the SQL query:   SELECT YEAR(client.birth_date) AS birth_year FROM disp INNER JOIN client ON disp.client_id = client.client_id WHERE disp.client_id = 130;   This query will return the birth year of the account owner with client ID 130.\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN disp ON account.account_id = disp.account_id WHERE disp.type = 'OWNER' AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "176": "SELECT loan.amount, loan.status FROM disp INNER JOIN loan ON disp.account_id = loan.account_id WHERE disp.client_id = 992 AND loan.status = 'D';\t----- bird -----\tfinancial",
    "177": "SELECT SUM(trans.balance) AS total_balance, client.gender FROM trans INNER JOIN disp ON trans.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE trans.trans_id = 851 AND disp.client_id = 4;\t----- bird -----\tfinancial",
    "178": "SELECT card.type FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE client.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(trans.amount)  FROM trans INNER JOIN disp ON trans.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 617  AND trans.date >= '1998-01-01'  AND trans.date <= '1998-12-31';\t----- bird -----\tfinancial",
    "180": "SELECT client.client_id, client.birth_date FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.A3 = 'east Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F' ORDER BY loan.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT client.client_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN trans ON disp.account_id = trans.account_id WHERE client.gender = 'M'   AND client.birth_date BETWEEN '1974-01-01' AND '1976-12-31'   AND trans.k_symbol = 'SIPO'   AND trans.amount > 4000;\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Beroun' AND account.date > '1996-12-31';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT client.client_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE client.gender = 'F' AND card.type = 'junior';\t----- bird -----\tfinancial",
    "185": "SELECT      CAST(COUNT(DISTINCT df2.client_id) AS REAL) * 100 / COUNT(DISTINCT df1.client_id) AS female_proportion FROM      (SELECT disp.client_id      FROM account      INNER JOIN disp ON account.account_id = disp.account_id      INNER JOIN client ON disp.client_id = client.client_id      INNER JOIN district ON account.district_id = district.district_id      WHERE district.A3 = 'Prague') AS df1 INNER JOIN      (SELECT disp.client_id      FROM account      INNER JOIN disp ON account.account_id = disp.account_id      INNER JOIN client ON disp.client_id = client.client_id      INNER JOIN district ON account.district_id = district.district_id      WHERE district.A3 = 'Prague' AND client.gender = 'F') AS df2 ON df1.client_id = df2.client_id;\t----- bird -----\tfinancial",
    "186": "SELECT      (CAST(COUNT(DISTINCT df1.client_id) AS REAL) * 100 / COUNT(DISTINCT df2.client_id)) AS percentage_of_male_clients FROM      disp INNER JOIN      client AS df1 ON disp.client_id = df1.client_id INNER JOIN      account AS df2 ON disp.account_id = df2.account_id WHERE      df1.gender = 'M'      AND df2.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT disp.client_id)  FROM account  INNER JOIN disp ON account.account_id = disp.account_id  WHERE account.frequency = 'POPLATEK TYDNE'  AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "188": "SELECT account.account_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.duration > 24   AND account.date < '1997-01-01' ORDER BY loan.amount ASC LIMIT 1;\t----- bird -----\tfinancial",
    "189": "SELECT account.account_id FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' ORDER BY client.birth_date ASC, district.A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.birth_date LIKE '1920%' AND district.A3 = 'east Bohemia';\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.duration = 24 AND account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(loan.amount) AS average_loan_amount FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.status IN ('C', 'D')  AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "193": "SELECT client.client_id, client.district_id FROM disp INNER JOIN client ON disp.client_id = client.client_id WHERE disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "194": "SELECT client.client_id,         (strftime('%Y', 'now') - strftime('%Y', client.birth_date)) -         (strftime('%m-%d', 'now') < strftime('%m-%d', client.birth_date)) AS age FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT a.molecule_id) FROM atom a INNER JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '-' AND a.element = 'cl';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(oxygen_count)  FROM (     SELECT atom.molecule_id, COUNT(atom.atom_id) AS oxygen_count     FROM atom     INNER JOIN bond ON atom.molecule_id = bond.molecule_id     WHERE bond.bond_type = '-' AND atom.element = 'o'     GROUP BY atom.molecule_id ) AS oxygen_counts;\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(single_bond_count)  FROM (     SELECT COUNT(b.bond_id) AS single_bond_count     FROM bond b     INNER JOIN molecule m ON b.molecule_id = m.molecule_id     WHERE m.label = '+' AND b.bond_type = '-'     GROUP BY b.molecule_id ) AS subquery;\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m INNER JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'na' AND m.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT bond.molecule_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT (CAST(COUNT(DISTINCT a.atom_id) AS REAL) * 100 / COUNT(DISTINCT a2.atom_id)) AS carbon_percentage FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN atom a2 ON a2.molecule_id = b.molecule_id WHERE b.bond_type = '=' AND a.element = 'c';\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT atom.molecule_id FROM atom WHERE atom.element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT atom.element FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE connected.bond_id = 'TR004_8_9' UNION SELECT DISTINCT atom.element FROM connected INNER JOIN atom ON connected.atom_id2 = atom.atom_id WHERE connected.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT atom.element FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "208": "SELECT molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'h' GROUP BY molecule.label ORDER BY COUNT(molecule.label) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT DISTINCT bond.bond_type FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT connected.atom_id, connected.atom_id2 FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT c.atom_id, c.atom_id2 FROM connected c INNER JOIN bond b ON c.bond_id = b.bond_id INNER JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY atom.element ORDER BY COUNT(atom.element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT bond.bond_type FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20')    OR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT m.label FROM molecule m WHERE m.label != '-' AND m.molecule_id NOT IN (     SELECT a.molecule_id     FROM atom a     WHERE a.element = 'sn' );\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT c.atom_id) FROM connected c INNER JOIN atom a ON c.atom_id = a.atom_id INNER JOIN bond b ON c.bond_id = b.bond_id WHERE a.element IN ('i', 's') AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT connected.atom_id, connected.atom_id2 FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT connected.atom_id2 FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.molecule_id = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT      (COUNT(DISTINCT df3.molecule_id) - COUNT(DISTINCT df2.molecule_id)) * 100.0 / COUNT(DISTINCT df3.molecule_id) AS percentage FROM      (SELECT molecule_id       FROM molecule       WHERE label = '+') AS df1 LEFT JOIN      (SELECT DISTINCT atom.molecule_id       FROM atom       WHERE element = 'f') AS df2 ON df1.molecule_id = df2.molecule_id LEFT JOIN      (SELECT DISTINCT molecule_id       FROM molecule       WHERE label = '+') AS df3 ON df1.molecule_id = df3.molecule_id;  This SQL query calculates the percentage of carcinogenic-type molecules that do not contain fluorine. It first identifies all carcinogenic molecules, then checks which of these contain fluorine, and finally calculates the percentage of those that do not contain fluorine.\t----- bird -----\ttoxicology",
    "219": "SELECT      (COUNT(DISTINCT m.molecule_id) * 100.0 / COUNT(DISTINCT b.molecule_id)) AS percent FROM      bond b INNER JOIN      molecule m ON b.molecule_id = m.molecule_id WHERE      b.bond_type = '#' AND m.label = '+'  This SQL query calculates the percentage of carcinogenic molecules that have a triple bond type. It joins the `bond` and `molecule` tables on `molecule_id`, filters for triple bonds (`bond_type = '#'`) and carcinogenic molecules (`label = '+'`), and then computes the percentage based on the distinct count of such molecules.\t----- bird -----\ttoxicology",
    "220": "SELECT DISTINCT atom.element FROM atom WHERE atom.molecule_id = 'TR000' ORDER BY atom.element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT connected.atom_id, connected.atom_id2 FROM connected WHERE connected.bond_id = 'TR001_2_6';\t----- bird -----\ttoxicology",
    "222": "SELECT      (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) -       SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) AS difference FROM      molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT connected.atom_id, connected.atom_id2 FROM connected WHERE connected.bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT connected.bond_id FROM connected WHERE connected.atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT DISTINCT bond.molecule_id FROM bond WHERE bond.bond_type = '=' ORDER BY bond.molecule_id ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT ROUND(CAST(SUM(CASE WHEN bond.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(bond.bond_id), 5) AS percent FROM bond WHERE bond.molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND(CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(label), 3) AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND(CAST(COUNT(*) AS REAL) * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR206'), 4) AS percent FROM atom WHERE molecule_id = 'TR206' AND element = 'h';\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT bond.bond_type FROM bond WHERE bond.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT atom.element, molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT b.bond_type, m.label FROM bond b INNER JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.molecule_id = 'TR010' GROUP BY b.bond_type ORDER BY COUNT(b.bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT DISTINCT bond.molecule_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-' ORDER BY bond.molecule_id ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT bond.bond_id FROM bond WHERE bond.molecule_id = 'TR006' ORDER BY bond.bond_id ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(DISTINCT connected.bond_id)  FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.molecule_id = 'TR009'  AND (connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+' AND atom.element = 'br';\t----- bird -----\ttoxicology",
    "236": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2 FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT a.molecule_id, m.label FROM atom a INNER JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT bond.molecule_id) FROM bond WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE connected.atom_id LIKE 'TR%_19' OR connected.atom_id2 LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT atom.element FROM atom WHERE atom.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT atom.molecule_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE SUBSTR(atom.atom_id, 7, 2) BETWEEN '21' AND '25' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT DISTINCT c.bond_id FROM connected c INNER JOIN atom a1 ON c.atom_id = a1.atom_id INNER JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'p' AND a2.element = 'n'    OR a1.element = 'n' AND a2.element = 'p';\t----- bird -----\ttoxicology",
    "244": "SELECT m.label FROM bond b INNER JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '=' GROUP BY b.molecule_id ORDER BY COUNT(b.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count)  FROM (     SELECT COUNT(connected.bond_id) AS bond_count     FROM atom     INNER JOIN connected ON atom.atom_id = connected.atom_id     WHERE atom.element = 'i'     GROUP BY atom.atom_id ) AS subquery;\t----- bird -----\ttoxicology",
    "246": "SELECT bond.bond_type, bond.bond_id FROM bond WHERE CAST(SUBSTR(bond.bond_id, 7, 2) AS INTEGER) = 45 OR CAST(SUBSTR(bond.bond_id, 10, 2) AS INTEGER) = 45;\t----- bird -----\ttoxicology",
    "247": "SELECT DISTINCT atom.element FROM atom WHERE atom.atom_id NOT IN (SELECT connected.atom_id FROM connected);\t----- bird -----\ttoxicology",
    "248": "SELECT connected.atom_id, connected.atom_id2 FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.molecule_id = 'TR041' AND bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT DISTINCT atom.element FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE connected.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT bond.molecule_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND bond.bond_type = '=' GROUP BY bond.molecule_id ORDER BY COUNT(bond.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY atom.element ORDER BY COUNT(atom.element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT DISTINCT connected.atom_id2 FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element = 'pb';\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT atom.element FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "To convert the given SR into an executable SQL query, we need to follow the logic described in the SR and ensure it aligns with the schema and question requirements. The goal is to find the percentage of bonds that have the most common combination of atoms' elements.  Here's how we can construct the SQL query:  1. **Identify the most common combination of elements in bonds**: We need to find the combination of elements that appears most frequently in bonds. This involves joining the `connected` table with the `atom` table to get the elements for each bond.  2. **Count the occurrences of each combination**: Group by the combination of elements and count the occurrences.  3. **Find the most common combination**: Order the results by count in descending order and limit to 1 to get the most common combination.  4. **Calculate the percentage of bonds with this combination**: Divide the count of bonds with the most common combination by the total number of bonds and multiply by 100 to get the percentage.  Here is the SQL query that implements this logic:   WITH ElementCombinations AS (     SELECT          c.bond_id,         a1.element AS element1,         a2.element AS element2     FROM          connected c     JOIN          atom a1 ON c.atom_id = a1.atom_id     JOIN          atom a2 ON c.atom_id2 = a2.atom_id ), CombinationCounts AS (     SELECT          element1,          element2,          COUNT(*) AS combination_count     FROM          ElementCombinations     GROUP BY          element1, element2 ), MostCommonCombination AS (     SELECT          element1,          element2,          combination_count     FROM          CombinationCounts     ORDER BY          combination_count DESC     LIMIT 1 ), TotalBonds AS (     SELECT          COUNT(DISTINCT bond_id) AS total_bonds     FROM          connected ) SELECT      (mcc.combination_count * 100.0 / tb.total_bonds) AS percentage FROM      MostCommonCombination mcc, TotalBonds tb;   This query calculates the percentage of bonds that have the most common combination of elements by following the steps outlined above.\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(COUNT(CASE WHEN m.label = '+' THEN 1 END) AS REAL) * 100 / COUNT(b.bond_id) AS proportion FROM bond b INNER JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT connected.atom_id2 FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT bond.bond_type FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT atom.element) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT atom.atom_id) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#' AND (atom.element = 'p' OR atom.element = 'br');\t----- bird -----\ttoxicology",
    "261": "SELECT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT bond.molecule_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (CAST(SUM(CASE WHEN atom.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(atom.atom_id)) AS percent FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT molecule.label FROM molecule WHERE molecule.molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT molecule.molecule_id FROM molecule WHERE molecule.label = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*)  FROM molecule  WHERE molecule_id BETWEEN 'TR000' AND 'TR030'  AND label = '+';\t----- bird -----\ttoxicology",
    "267": "SELECT DISTINCT bond.bond_type FROM bond WHERE bond.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT DISTINCT atom.element FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE connected.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT connected.bond_id) FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'ca' GROUP BY molecule.label ORDER BY COUNT(molecule.label) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "271": "SELECT      CASE          WHEN COUNT(DISTINCT a.element) = 2 THEN 'Yes'         ELSE 'No'     END AS has_both_elements FROM      connected c JOIN      atom a ON c.atom_id = a.atom_id WHERE      c.bond_id = 'TR001_1_8' AND a.element IN ('cl', 'c');\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE a.element = 'c'   AND b.bond_type = '#'   AND m.label = '-' LIMIT 2;\t----- bird -----\ttoxicology",
    "273": "SELECT (CAST(COUNT(*) AS REAL) * 100.0 / (SELECT COUNT(*) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+')) AS percentage FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'cl' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "274": "SELECT DISTINCT atom.element FROM atom WHERE atom.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT DISTINCT bond.molecule_id FROM bond WHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "276": "SELECT connected.atom_id, connected.atom_id2 FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT DISTINCT atom.element FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE connected.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT bond.molecule_id) FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT bond.bond_id, molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT atom.element, COUNT(*) AS tally FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND SUBSTR(atom.atom_id, 7, 1) = '4' GROUP BY atom.element;\t----- bird -----\ttoxicology",
    "282": "SELECT      (SUM(CASE WHEN atom.element = 'h' THEN 1 ELSE 0 END) / COUNT(atom.element)) AS ratio,      molecule.label FROM      atom INNER JOIN      molecule ON atom.molecule_id = molecule.molecule_id WHERE      atom.molecule_id = 'TR006' GROUP BY      molecule.label;\t----- bird -----\ttoxicology",
    "283": "SELECT DISTINCT m.label FROM atom a INNER JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'ca';\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT bond.bond_type FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element = 'c';\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT a.element FROM connected c INNER JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_id = 'TR001_10_11' UNION SELECT DISTINCT a.element FROM connected c INNER JOIN atom a ON c.atom_id2 = a.atom_id WHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT CAST(COUNT(DISTINCT b.molecule_id) AS REAL) * 100 / COUNT(DISTINCT m.molecule_id) AS percent_triple_bond FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "287": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR047')) AS percent FROM bond WHERE molecule_id = 'TR047' AND bond_type = '='\t----- bird -----\ttoxicology",
    "288": "SELECT m.label FROM atom a INNER JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT molecule.label FROM molecule WHERE molecule.molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT atom.element FROM atom WHERE atom.molecule_id = 'TR151' AND atom.element IN ('cl', 'br', 'f', 'i', 'sn', 'pb', 'te')\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT atom.atom_id FROM atom WHERE atom.element = 'c'   AND CAST(SUBSTR(atom.molecule_id, 3, 3) AS INTEGER) BETWEEN 10 AND 50;\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(atom.molecule_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(*) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'h' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT bond.molecule_id FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.bond_id = 'TR000_1_2' AND connected.atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "297": "SELECT atom.atom_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'c' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT (COUNT(DISTINCT a.molecule_id) * 100.0 / COUNT(DISTINCT m.molecule_id)) AS percentage FROM molecule m INNER JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'h';\t----- bird -----\ttoxicology",
    "299": "SELECT molecule.label FROM molecule WHERE molecule.molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom.atom_id FROM atom WHERE atom.molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT bond.bond_type FROM bond WHERE bond.bond_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT atom.element FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE connected.bond_id = 'TR001_2_4' UNION SELECT DISTINCT atom.element FROM connected INNER JOIN atom ON connected.atom_id2 = atom.atom_id WHERE connected.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT      (SELECT COUNT(*)       FROM bond       WHERE bond.molecule_id = 'TR006' AND bond.bond_type = '=') AS count_double_bonds,     (SELECT molecule.label       FROM molecule       WHERE molecule.molecule_id = 'TR006') AS carcinogenic_status;\t----- bird -----\ttoxicology",
    "304": "SELECT atom.element, atom.molecule_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT bond.bond_id, connected.atom_id, connected.atom_id2 FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT a.molecule_id, a.element FROM bond b INNER JOIN atom a ON b.molecule_id = a.molecule_id WHERE b.bond_type = '#'\t----- bird -----\ttoxicology",
    "307": "SELECT DISTINCT a.element FROM connected c INNER JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_id = 'TR000_2_3' UNION SELECT DISTINCT a2.element FROM connected c2 INNER JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE c2.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT connected.bond_id) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT atom.atom_id FROM atom WHERE atom.molecule_id = 'TR346';  SELECT COUNT(DISTINCT bond.bond_type) FROM bond WHERE bond.molecule_id = 'TR346';\t----- bird -----\ttoxicology",
    "310": "SELECT      COUNT(DISTINCT m.molecule_id) AS total_molecules_with_double_bond,     COUNT(DISTINCT CASE WHEN m.label = '+' THEN m.molecule_id END) AS carcinogenic_molecules FROM      bond b INNER JOIN      molecule m ON b.molecule_id = m.molecule_id WHERE      b.bond_type = '='\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN bond b ON m.molecule_id = b.molecule_id WHERE a.element != 's' AND b.bond_type != '='\t----- bird -----\ttoxicology",
    "312": "SELECT molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT m.molecule_id FROM molecule m INNER JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'cl' AND m.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT m.molecule_id FROM atom a INNER JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'c' AND m.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT      (COUNT(DISTINCT a.molecule_id) * 100.0 / COUNT(DISTINCT m.molecule_id)) AS percentage FROM      molecule m INNER JOIN      atom a ON m.molecule_id = a.molecule_id WHERE      m.label = '+' AND a.element = 'cl';\t----- bird -----\ttoxicology",
    "318": "SELECT bond.molecule_id FROM bond WHERE bond.bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT atom.element) FROM connected JOIN atom ON connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id WHERE connected.bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT bond.bond_type FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id = 'TR000_1' AND connected.atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "321": "SELECT atom.molecule_id FROM connected JOIN atom ON connected.atom_id = atom.atom_id WHERE connected.atom_id = 'TR000_2' AND connected.atom_id2 = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT molecule.label FROM molecule WHERE molecule.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM bond)) AS percentage FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'n' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT molecule.molecule_id FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element = 's' AND bond.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT atom.molecule_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY atom.molecule_id HAVING COUNT(atom.atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT atom.element FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2) WHERE bond.bond_type = '=' AND bond.molecule_id = 'TR024';\t----- bird -----\ttoxicology",
    "329": "SELECT atom.molecule_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY atom.molecule_id ORDER BY COUNT(atom.atom_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT (CAST(COUNT(DISTINCT m.molecule_id) AS REAL) * 100.0 / COUNT(DISTINCT a.molecule_id)) AS percentage FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'h' AND b.bond_type = '#' AND m.label = '+'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*)  FROM molecule  WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT bond.molecule_id) FROM bond WHERE bond.molecule_id BETWEEN 'TR004' AND 'TR010' AND bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' AND atom.atom_id = 'TR004_7';\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT bond.molecule_id) FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id2 = atom.atom_id WHERE atom.element = 'o' AND bond.bond_type = '='\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT bond.molecule_id) FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT DISTINCT atom.element, bond.bond_type FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT atom.atom_id FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'c'   AND bond.bond_type = '='   AND atom.molecule_id = 'TR012';\t----- bird -----\ttoxicology",
    "339": "SELECT atom.atom_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT cards.name FROM cards WHERE cards.cardKingdomFoilId IS NOT NULL   AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT cards.name FROM cards WHERE cards.borderColor = 'borderless'   AND cards.cardKingdomFoilId IS NULL   AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost = (SELECT MAX(faceConvertedManaCost) FROM cards);\t----- bird -----\tcard_games",
    "343": "SELECT cards.name FROM cards WHERE cards.frameVersion = '2015' AND cards.edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT cards.name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'mythic'   AND legalities.status = 'Banned'   AND legalities.format = 'gladiator';\t----- bird -----\tcard_games",
    "345": "SELECT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types = 'Artifact'   AND cards.side IS NULL   AND legalities.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT cards.id, cards.artist FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE (cards.power = '*' OR cards.power IS NULL)   AND legalities.format = 'commander'   AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT cards.id, rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Stephen Daniele' AND cards.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "348": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s';\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, c.isPromo FROM cards c INNER JOIN rulings r ON c.uuid = r.uuid GROUP BY c.uuid ORDER BY COUNT(r.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT fd.language FROM cards c INNER JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.name = 'Annul' AND c.number = '29';\t----- bird -----\tcard_games",
    "351": "SELECT DISTINCT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM foreign_data)) AS percentage FROM foreign_data WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "353": "SELECT sets.name, sets.totalSetSize FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT set_translations.language FROM cards INNER JOIN sets ON cards.setCode = sets.code INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE cards.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities INNER JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status = 'Restricted' AND cards.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Condemn';\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Restricted' AND cards.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT cards.artist FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT (CAST(COUNT(*) FILTER (WHERE borderColor = 'borderless') AS REAL) * 100.0 / COUNT(*)) AS percentage FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.borderColor = 'borderless' AND foreign_data.language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT CAST(COUNT(fd.id) AS REAL) * 100 / COUNT(c.id) AS percentage FROM cards c INNER JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.isStorySpotlight = 1 AND fd.language = 'French';\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT cards.name FROM cards WHERE cards.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT cards.id FROM cards WHERE cards.convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%Flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel'  AND subtypes != 'Angel';\t----- bird -----\tcard_games",
    "378": "SELECT cards.id FROM cards WHERE cards.cardKingdomFoilId IS NOT NULL   AND cards.cardKingdomId IS NOT NULL   AND cards.hasFoil = 1   AND cards.hasNonFoil = 1;\t----- bird -----\tcard_games",
    "379": "SELECT cards.id FROM cards WHERE cards.duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT cards.edhrecRank FROM cards WHERE cards.frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT cards.artist FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT c.name FROM cards c INNER JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.availability = 'paper' AND fd.language = 'Japanese';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Banned' AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT cards.uuid, foreign_data.language FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE legalities.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(DISTINCT cards.id) AS card_count, legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = 'future' GROUP BY legalities.status;\t----- bird -----\tcard_games",
    "387": "SELECT cards.name, cards.colors FROM cards WHERE cards.setCode = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT cards.name, set_translations.language FROM cards INNER JOIN set_translations ON cards.setCode = set_translations.setCode WHERE cards.setCode = '10E'   AND cards.convertedManaCost = 5   AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "389": "SELECT cards.name, rulings.date FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT DISTINCT c.colors, l.format FROM cards c INNER JOIN legalities l ON c.uuid = l.uuid WHERE c.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT cards.id FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.originalType = 'Artifact'   AND cards.colors = 'B'   AND foreign_data.language IS NOT NULL;\t----- bird -----\tcard_games",
    "392": "SELECT cards.name FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'uncommon' ORDER BY rulings.date ASC LIMIT 3;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon'   AND cardKingdomFoilId IS NOT NULL   AND cardKingdomId IS NOT NULL   AND power != '\u221e';\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white'   AND cardKingdomFoilId IS NOT NULL   AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON'   AND availability LIKE '%mtgo%'   AND hand = '-1';\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993'   AND availability = 'paper'   AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT cards.manaCost FROM cards WHERE cards.availability = 'mtgo,paper'   AND cards.frameVersion = '2003'   AND cards.borderColor = 'black'   AND cards.layout = 'normal';\t----- bird -----\tcard_games",
    "398": "SELECT SUM(CAST(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(cards.manaCost, '{', ''), '}', ''), 'W', ''), 'U', ''), 'B', ''), 'R', ''), 'G', ''), '/', ''), '2', '2'), '3', '3') AS INTEGER)) AS total_mana_cost FROM cards WHERE cards.artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT type FROM cards WHERE availability LIKE '%arena%'\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT set_translations.setCode FROM set_translations WHERE set_translations.language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT CAST(COUNT(CASE WHEN cards.isOnlineOnly = 1 THEN 1 END) AS REAL) * 100 / COUNT(cards.id) AS percentage FROM cards WHERE cards.frameEffects LIKE '%legendary%'\t----- bird -----\tcard_games",
    "402": "SELECT      (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1)) AS percentage,     id FROM      cards WHERE      isStorySpotlight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "403": "SELECT cards.name,         (CAST(COUNT(foreign_data.id) AS REAL) * 100 / (SELECT COUNT(*) FROM cards)) AS percentage FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Spanish' GROUP BY cards.name;\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT set_translations.language FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE sets.baseSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT sets.code) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Commander' AND set_translations.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "406": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Legal' AND cards.types LIKE '%Creature%'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT foreign_data.type FROM foreign_data WHERE foreign_data.language = 'German';\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE legalities.format = 'premodern'   AND rulings.text = 'This is a triggered mana ability.'   AND cards.side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.artist = 'Erica Yang'   AND legalities.format = 'pauper'   AND cards.availability = 'paper';\t----- bird -----\tcard_games",
    "411": "SELECT cards.artist FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.text = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE foreign_data.language = 'French'   AND cards.borderColor = 'black'   AND cards.type = 'Creature'   AND cards.layout = 'normal'   AND cards.artist = 'Matthew D. Wilson';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'rare' AND rulings.date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT DISTINCT set_translations.language FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.baseSetSize = 180 AND sets.block = 'Ravnica';\t----- bird -----\tcard_games",
    "415": "SELECT      (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards                                        INNER JOIN legalities ON cards.uuid = legalities.uuid                                        WHERE legalities.format = 'commander'                                        AND legalities.status = 'Legal')) AS percentage FROM      cards  INNER JOIN      legalities ON cards.uuid = legalities.uuid  WHERE      legalities.format = 'commander'      AND legalities.status = 'Legal'      AND cards.hasContentWarning = 0;\t----- bird -----\tcard_games",
    "416": "SELECT      (CAST(COUNT(*) AS REAL) * 100.0 /      (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*')) AS percentage FROM      cards INNER JOIN      foreign_data ON cards.uuid = foreign_data.uuid WHERE      (cards.power IS NULL OR cards.power = '*')      AND foreign_data.language = 'French';\t----- bird -----\tcard_games",
    "417": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM set_translations WHERE language = 'Japanese') FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.language = 'Japanese' AND sets.type = 'expansion';\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT cards.name FROM cards WHERE (cards.power IS NULL OR cards.power = '*')    AND cards.promoTypes LIKE '%arenaleague%' ORDER BY cards.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT cards.cardKingdomFoilId, cards.cardKingdomId FROM cards WHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL ORDER BY cards.cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards WHERE isTextless = 1)) AS proportion FROM cards WHERE isTextless = 1 AND layout = 'normal';\t----- bird -----\tcard_games",
    "425": "SELECT cards.number FROM cards WHERE cards.side IS NULL   AND cards.subtypes LIKE '%Angel%'   AND cards.subtypes LIKE '%Wizard%'\t----- bird -----\tcard_games",
    "426": "SELECT sets.name FROM sets WHERE sets.mtgoCode IS NULL OR sets.mtgoCode = '' ORDER BY sets.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT set_translations.language FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE sets.mcmName = 'Archenemy' AND sets.code = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT sets.name, set_translations.translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT set_translations.language, sets.type FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE sets.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT sets.name, sets.id FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.language = 'Italian' AND sets.block = 'Shadowmoor' ORDER BY sets.name ASC LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT sets.code, sets.id FROM sets INNER JOIN set_translations ON set_translations.setCode = sets.code WHERE sets.isForeignOnly = 0   AND sets.isFoilOnly = 1   AND set_translations.language = 'Japanese';\t----- bird -----\tcard_games",
    "432": "SELECT st.setCode FROM set_translations st INNER JOIN sets s ON st.setCode = s.code WHERE st.language = 'Russian' ORDER BY s.baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT      (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM sets WHERE isOnlineOnly = 1)) AS percentage FROM      sets INNER JOIN      set_translations ON sets.code = set_translations.setCode WHERE      set_translations.language = 'Chinese Simplified'      AND sets.isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT sets.code) FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.language = 'Japanese' AND (sets.mtgoCode IS NULL OR sets.mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(cards.id) AS card_count, cards.id FROM cards WHERE cards.borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT cards.id FROM cards WHERE cards.frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT cards.name FROM cards WHERE cards.borderColor = 'black' AND cards.isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE id = 174;\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT sets.code FROM sets WHERE sets.releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, foreign_data.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros';\t----- bird -----\tcard_games",
    "445": "SELECT foreign_data.language, foreign_data.flavorText, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Abyssal Horror')) AS percentage FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Abyssal Horror' AND cards.convertedManaCost = 10;\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'commander';\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name, foreign_data.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan';\t----- bird -----\tcard_games",
    "449": "SELECT foreign_data.language, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller'   AND cardKingdomFoilId IS NOT NULL   AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND CAST(hand AS INTEGER) > 0;\t----- bird -----\tcard_games",
    "452": "SELECT cards.name FROM cards WHERE cards.isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT cards.manaCost FROM cards WHERE cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "455": "SELECT cards.name FROM cards WHERE cards.isPromo = 1 AND cards.side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT cards.purchaseUrls FROM cards WHERE cards.promoTypes LIKE '%bundle%'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist)  FROM cards  WHERE borderColor = 'black'  AND availability LIKE '%arena,mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT cards.name FROM cards WHERE cards.name IN ('Serra Angel', 'Shrine Keeper') ORDER BY cards.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT cards.name FROM cards WHERE cards.frameVersion = '2003' ORDER BY cards.convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT st.translation FROM cards c INNER JOIN set_translations st ON c.setCode = st.setCode WHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE setCode IN (     SELECT setCode     FROM cards     WHERE name = 'Angel of Mercy' )\t----- bird -----\tcard_games",
    "464": "SELECT cards.name FROM cards INNER JOIN set_translations ON cards.setCode = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS (     SELECT 1     FROM cards     INNER JOIN set_translations ON cards.setCode = set_translations.setCode     WHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'Korean' )\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards INNER JOIN set_translations ON cards.setCode = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "467": "SELECT sets.baseSetSize FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT set_translations.translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT DISTINCT sets.mtgoCode FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL\t----- bird -----\tcard_games",
    "470": "SELECT sets.releaseDate FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT sets.type FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT sets.code) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Ice Age'  AND set_translations.language = 'Italian'  AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "473": "SELECT s.isForeignOnly FROM cards c INNER JOIN sets s ON c.setCode = s.code WHERE c.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT sets.code) FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.language = 'Italian'   AND set_translations.translation IS NOT NULL   AND sets.baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' ORDER BY cards.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT cards.artist FROM cards WHERE cards.setCode = 'Coldsnap' AND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.number = '4';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap'   AND cards.convertedManaCost > 5   AND (cards.power = '*' OR cards.power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT foreign_data.flavorText FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT foreign_data.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'German';\t----- bird -----\tcard_games",
    "483": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid INNER JOIN set_translations ON cards.setCode = set_translations.setCode WHERE cards.setCode = 'CSP' AND set_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "484": "SELECT fd.name FROM cards c INNER JOIN sets s ON c.setCode = s.code INNER JOIN foreign_data fd ON c.uuid = fd.uuid WHERE s.name = 'Coldsnap' AND fd.language = 'Italian' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT rulings.date FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap')) AS percentage FROM cards WHERE convertedManaCost = 7 AND setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT (CAST(COUNT(*) AS REAL) * 100.0 / (SELECT COUNT(*) FROM cards  JOIN sets ON cards.setCode = sets.code  WHERE sets.name = 'Coldsnap')) AS percentage FROM cards  JOIN sets ON cards.setCode = sets.code  WHERE sets.name = 'Coldsnap'  AND cards.cardKingdomFoilId IS NOT NULL  AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "488": "SELECT sets.code FROM sets WHERE sets.releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT sets.keyruneCode FROM sets WHERE sets.code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT sets.mcmId FROM sets WHERE sets.code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT sets.mcmName FROM sets WHERE sets.releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT sets.type FROM sets WHERE sets.name = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT sets.parentCode FROM sets WHERE sets.name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT rulings.text, cards.hasContentWarning FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Jim Pavelec';\t----- bird -----\tcard_games",
    "495": "SELECT sets.releaseDate FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT sets.baseSetSize FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.translation = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT sets.type FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.translation = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT st.translation FROM cards c INNER JOIN set_translations st ON c.setCode = st.setCode WHERE c.name = 'Tendo Ice Bridge' AND st.language = 'French';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(set_translations.translation) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.name = 'Tenth Edition' AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "500": "SELECT st.translation FROM cards c INNER JOIN set_translations st ON c.setCode = st.setCode WHERE c.name = 'Fellwar Stone' AND st.language = 'Japanese';\t----- bird -----\tcard_games",
    "501": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Journey into Nyx Hero''s Path' ORDER BY cards.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT sets.releaseDate FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.translation = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT sets.type FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'World Championship Decks 2004' AND cards.convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT st.translation FROM sets s INNER JOIN set_translations st ON s.code = st.setCode WHERE s.name = 'Mirrodin' AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "506": "SELECT      (SUM(CASE WHEN sets.isNonFoilOnly = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_non_foil FROM      set_translations INNER JOIN      sets ON set_translations.setCode = sets.code WHERE      set_translations.language = 'Japanese';\t----- bird -----\tcard_games",
    "507": "SELECT      (CAST(SUM(CASE WHEN cards.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS online_only_percentage FROM      cards INNER JOIN      set_translations ON cards.setCode = set_translations.setCode WHERE      set_translations.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT sets.id FROM sets ORDER BY sets.baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT cards.frameEffects FROM cards WHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL GROUP BY cards.frameEffects ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*')   AND hasFoil = 0   AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT sets.id FROM sets WHERE sets.type = 'commander' ORDER BY sets.totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT cards.name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'duel' ORDER BY cards.manaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT c.originalReleaseDate, l.format FROM cards c INNER JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'Legal' ORDER BY c.originalReleaseDate ASC LIMIT 1;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.artist = 'Volkan Ba\u01f5a' AND foreign_data.language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(DISTINCT c.id) FROM cards c INNER JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'rare'   AND c.types LIKE '%Enchantment%'   AND c.name = 'Abundance' GROUP BY c.id HAVING COUNT(DISTINCT l.status) = 1 AND MIN(l.status) = 'Legal';\t----- bird -----\tcard_games",
    "518": "SELECT l.format, c.name FROM legalities l INNER JOIN cards c ON l.uuid = c.uuid WHERE l.status = 'Banned' GROUP BY l.format HAVING COUNT(l.status) = (     SELECT MAX(banned_count)     FROM (         SELECT COUNT(l2.status) AS banned_count         FROM legalities l2         WHERE l2.status = 'Banned'         GROUP BY l2.format     ) AS subquery )\t----- bird -----\tcard_games",
    "519": "SELECT DISTINCT set_translations.language FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "SELECT DISTINCT legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.artist = (     SELECT cards.artist     FROM cards     GROUP BY cards.artist     ORDER BY COUNT(cards.id) ASC     LIMIT 1 )\t----- bird -----\tcard_games",
    "521": "SELECT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = '1997'   AND cards.artist = 'D. Alexander Gregory'   AND cards.hasContentWarning = 1   AND legalities.format = 'legacy';\t----- bird -----\tcard_games",
    "522": "SELECT cards.name, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.edhrecRank = 1 AND legalities.status = 'Banned';\t----- bird -----\tcard_games",
    "523": "SELECT AVG(annual_count) AS annual_average, common_language FROM (     SELECT COUNT(DISTINCT sets.id) AS annual_count,             set_translations.language AS common_language     FROM sets     LEFT JOIN set_translations ON set_translations.setCode = sets.code     WHERE sets.releaseDate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY YEAR(sets.releaseDate), set_translations.language ) AS subquery GROUP BY common_language ORDER BY COUNT(common_language) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT legalities.uuid FROM legalities WHERE legalities.format = 'oldschool' AND (legalities.status = 'Banned' OR legalities.status = 'Restricted');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT cards.name, legalities.format FROM cards INNER JOIN sets ON cards.setCode = sets.code INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT DISTINCT sets.name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Korean' AND sets.code NOT IN (     SELECT set_translations.setCode     FROM set_translations     WHERE set_translations.language = 'Japanese' );\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT c.frameVersion, c.name FROM cards c WHERE c.artist = 'Allen Williams'  UNION  SELECT DISTINCT c.name FROM cards c INNER JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Banned';\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT users.DisplayName FROM users WHERE strftime('%Y', users.CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "538": "SELECT posts.Title FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT posts.Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' ORDER BY posts.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id ORDER BY posts.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(posts.CommentCount) AS TotalComments FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "543": "SELECT p.AnswerCount FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' ORDER BY p.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "544": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE posts.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' AND posts.ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age > 65 AND posts.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT users.Location FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "549": "SELECT posts.Body FROM posts INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "550": "SELECT posts.Body FROM posts WHERE posts.Id = (     SELECT tags.ExcerptPostId     FROM tags     ORDER BY tags.Count DESC     LIMIT 1 )\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "552": "SELECT badges.Name FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie' AND strftime('%Y', badges.Date) = '2011';\t----- bird -----\tcodebase_community",
    "554": "SELECT users.DisplayName FROM badges INNER JOIN users ON badges.UserId = users.Id GROUP BY badges.UserId ORDER BY COUNT(badges.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(posts.Score)  FROM users  INNER JOIN posts ON users.Id = posts.OwnerUserId  WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_count)  FROM (     SELECT COUNT(badges.Id) AS badge_count     FROM users     INNER JOIN badges ON users.Id = badges.UserId     WHERE users.Views > 200     GROUP BY badges.UserId ) AS badge_counts;\t----- bird -----\tcodebase_community",
    "557": "SELECT      CAST(COUNT(CASE WHEN users.Age > 65 THEN posts.Id END) AS REAL) * 100 / COUNT(posts.Id) AS percentage FROM      posts INNER JOIN      users ON posts.OwnerUserId = users.Id WHERE      posts.Score > 5;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE votes.UserId = 58 AND votes.CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(Id)  FROM badges  WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT posts.Title FROM posts INNER JOIN comments ON posts.Id = comments.PostId ORDER BY comments.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT posts.FavoriteCount FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE comments.UserId = 3025 AND comments.CreationDate = '2014-04-23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "564": "SELECT comments.Text FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.ParentId = 107829 AND posts.CommentCount = 1;\t----- bird -----\tcodebase_community",
    "565": "SELECT      CASE          WHEN posts.ClosedDate IS NULL THEN 'No'          ELSE 'Yes'      END AS WellFinished FROM      comments INNER JOIN      posts ON comments.PostId = posts.Id WHERE      comments.UserId = '23853'      AND comments.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "566": "SELECT users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = 65041;\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(posts.Id) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE users.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT users.DisplayName FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE votes.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(votes.Id) FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE posts.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT CAST(COUNT(posts.Id) AS REAL) / COUNT(votes.Id) AS times FROM posts LEFT JOIN votes ON posts.OwnerUserId = votes.UserId WHERE posts.OwnerUserId = '24'\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT users.DisplayName FROM users WHERE users.WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT users.DisplayName FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT comments.Text FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT users.DisplayName, users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "579": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT users.DisplayName FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT posts.LastEditorDisplayName FROM posts WHERE posts.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "582": "SELECT posts.Title FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Vebjorn Ljosa';\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(posts.Score), users.WebsiteUrl FROM users INNER JOIN posts ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT comments.Text FROM comments INNER JOIN postHistory ON comments.UserId = postHistory.UserId INNER JOIN posts ON postHistory.PostId = posts.Id WHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount)  FROM posts  INNER JOIN votes ON posts.Id = votes.PostId  WHERE posts.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT users.DisplayName FROM votes INNER JOIN posts ON votes.PostId = posts.Id INNER JOIN users ON votes.UserId = users.Id WHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT AVG(posts.ViewCount) AS AverageViewCount, posts.Title, comments.Text FROM posts INNER JOIN tags ON posts.Id = tags.ExcerptPostId INNER JOIN comments ON posts.Id = comments.PostId WHERE tags.TagName = 'humor' GROUP BY posts.Id, posts.Title, comments.Text;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT users.Id FROM users ORDER BY users.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT users.Id FROM users ORDER BY users.Views ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT badges.UserId) FROM badges WHERE badges.Name = 'Supporter' AND strftime('%Y', badges.Date) = '2011';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT badges.UserId)  FROM badges  GROUP BY badges.UserId  HAVING COUNT(badges.Name) > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT badges.UserId) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'New York' AND badges.Name IN ('Teacher', 'Supporter') GROUP BY badges.UserId HAVING COUNT(DISTINCT badges.Name) = 2;\t----- bird -----\tcodebase_community",
    "594": "SELECT users.DisplayName, users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT DISTINCT users.DisplayName FROM postHistory INNER JOIN posts ON postHistory.PostId = posts.Id INNER JOIN users ON postHistory.UserId = users.Id GROUP BY postHistory.PostId, postHistory.UserId HAVING COUNT(postHistory.Id) = 1 AND MAX(posts.ViewCount) >= 1000;\t----- bird -----\tcodebase_community",
    "596": "SELECT badges.Name FROM badges WHERE badges.UserId = (     SELECT comments.UserId     FROM comments     GROUP BY comments.UserId     ORDER BY COUNT(comments.Id) DESC     LIMIT 1 )\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'India' AND badges.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT      (COUNT(CASE WHEN YEAR(Date) = 2010 THEN 1 END) * 100.0 / COUNT(*)) -      (COUNT(CASE WHEN YEAR(Date) = 2011 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_difference FROM      badges WHERE      Name = 'Student';\t----- bird -----\tcodebase_community",
    "599": "SELECT ph.PostHistoryTypeId, COUNT(DISTINCT c.UserId) AS UniqueUserCount FROM postHistory ph LEFT JOIN comments c ON ph.PostId = c.PostId WHERE ph.PostId = 3720 GROUP BY ph.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT posts.Id, posts.ViewCount FROM postLinks INNER JOIN posts ON postLinks.PostId = posts.Id WHERE postLinks.RelatedPostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT comments.Score, postLinks.LinkTypeId FROM comments INNER JOIN postLinks ON comments.PostId = postLinks.PostId WHERE comments.PostId = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT posts.Id, posts.OwnerUserId FROM posts WHERE posts.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(posts.FavoriteCount) FROM posts WHERE posts.OwnerUserId = 686 AND strftime('%Y', posts.CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "604": "SELECT      AVG(users.UpVotes) AS avg_upvotes,      AVG(users.Age) AS avg_age FROM      users JOIN      posts ON users.Id = posts.OwnerUserId GROUP BY      users.Id HAVING      COUNT(posts.OwnerUserId) > 10;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT badges.UserId) FROM badges WHERE badges.Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT DISTINCT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT comments.Text FROM comments WHERE comments.CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id)  FROM posts  WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT DISTINCT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "611": "SELECT users.Reputation FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT badges.Date FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT (CAST(COUNT(DISTINCT b.UserId) AS REAL) * 100 / (SELECT COUNT(DISTINCT UserId) FROM badges)) AS percentage FROM badges b WHERE b.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT      CAST(COUNT(DISTINCT u.Id) FILTER (WHERE u.Age BETWEEN 13 AND 18) AS REAL) * 100 / COUNT(DISTINCT u.Id) AS percentage_of_teenagers FROM      badges b INNER JOIN      users u ON b.UserId = u.Id WHERE      b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT comments.Score FROM comments WHERE comments.CreationDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT comments.Text FROM comments WHERE comments.CreationDate = '2010-07-19 19:37:33.0';\t----- bird -----\tcodebase_community",
    "618": "SELECT DISTINCT users.Age FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'Vienna, Austria';\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT badges.UserId) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Supporter' AND users.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT users.Views FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "621": "SELECT DISTINCT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Reputation = (SELECT MIN(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "622": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Supporter' AND users.Age > 65;\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*)  FROM votes  WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "629": "SELECT CAST(COUNT(CASE WHEN YEAR(CreationDate) = 2010 THEN 1 END) AS REAL) / COUNT(CASE WHEN YEAR(CreationDate) = 2011 THEN 1 END) AS vote_ratio FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT tags.TagName FROM users INNER JOIN posts ON posts.OwnerUserId = users.Id INNER JOIN tags ON tags.ExcerptPostId = posts.Id WHERE users.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(posts.Id) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE users.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(votes.Id) FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE users.DisplayName = 'Harlan';\t----- bird -----\tcodebase_community",
    "633": "SELECT posts.Id FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'slashnick' ORDER BY posts.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT users.DisplayName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY users.DisplayName ORDER BY SUM(posts.ViewCount) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(DISTINCT posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id INNER JOIN votes ON posts.Id = votes.PostId WHERE users.DisplayName = 'Matt Parker' GROUP BY posts.Id HAVING COUNT(votes.PostId) > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId INNER JOIN comments ON posts.Id = comments.PostId WHERE users.DisplayName = 'Neil McGuigan' AND comments.Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT tags.TagName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE users.DisplayName = 'Mark Meckes' AND posts.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT users.DisplayName FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT      (CAST(COUNT(DISTINCT p.Id) AS REAL) * 100.0 / COUNT(DISTINCT pc.Id)) AS percentage FROM      posts pc JOIN      users u ON pc.OwnerUserId = u.Id LEFT JOIN      tags t ON t.ExcerptPostId = pc.Id LEFT JOIN      posts p ON p.Id = t.ExcerptPostId WHERE      u.DisplayName = 'Community' AND t.TagName = 'r';\t----- bird -----\tcodebase_community",
    "640": "SELECT      (SUM(p1.ViewCount) - SUM(p2.ViewCount)) AS ViewCountDifference FROM      posts p1 JOIN      users u1 ON p1.OwnerUserId = u1.Id JOIN      posts p2 ON p2.OwnerUserId = u1.Id JOIN      users u2 ON p2.OwnerUserId = u2.Id WHERE      u1.DisplayName = 'Mornington' AND u2.DisplayName = 'Amos';\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT badges.UserId)  FROM badges  WHERE badges.Name = 'Commentator'  AND strftime('%Y', badges.Date) = '2014';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT users.DisplayName, users.Age FROM users ORDER BY users.Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "644": "SELECT posts.LastEditDate, posts.LastEditorUserId FROM posts WHERE posts.Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT DISTINCT posts.Title, comments.UserDisplayName FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE comments.Score > 60;\t----- bird -----\tcodebase_community",
    "647": "SELECT DISTINCT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Location = 'North Pole' AND strftime('%Y', badges.Date) = '2011';\t----- bird -----\tcodebase_community",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(postHistory.Id), posts.LastEditDate FROM posts INNER JOIN postHistory ON posts.Id = postHistory.PostId WHERE posts.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY posts.LastEditDate\t----- bird -----\tcodebase_community",
    "650": "SELECT users.LastAccessDate, users.Location FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Outliers';\t----- bird -----\tcodebase_community",
    "651": "SELECT posts.Title FROM postLinks INNER JOIN posts ON postLinks.RelatedPostId = posts.Id WHERE postLinks.PostId = (     SELECT Id     FROM posts     WHERE Title = 'How to tell if something happened in a data set which monitors a value over time' )\t----- bird -----\tcodebase_community",
    "652": "SELECT p.Id AS PostId, b.Name AS BadgeName FROM users u INNER JOIN posts p ON u.Id = p.OwnerUserId INNER JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = 'Samuel'   AND YEAR(p.CreationDate) = 2013   AND YEAR(b.Date) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT posts.OwnerDisplayName FROM posts ORDER BY posts.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT users.DisplayName, users.Location FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
    "655": "SELECT posts.Title, postLinks.LinkTypeId FROM posts INNER JOIN postLinks ON posts.Id = postLinks.RelatedPostId WHERE postLinks.PostId = (     SELECT Id     FROM posts     WHERE Title = 'What are principal component scores?' );\t----- bird -----\tcodebase_community",
    "656": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.ParentId = users.Id WHERE posts.ParentId IS NOT NULL ORDER BY posts.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "657": "SELECT users.DisplayName, users.WebsiteUrl FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE votes.VoteTypeId = 8 ORDER BY votes.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT posts.OwnerUserId FROM posts ORDER BY posts.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "661": "SELECT users.Age FROM users ORDER BY users.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT posts.Id) FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE YEAR(votes.CreationDate) = 2011 AND votes.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT users.Id FROM users ORDER BY users.Age ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score)  FROM posts  WHERE LastActivityDate LIKE '2010-07-19%';\t----- bird -----\tcodebase_community",
    "665": "SELECT COUNT(postLinks.Id) / 12 AS average_monthly_links FROM postLinks INNER JOIN posts ON postLinks.PostId = posts.Id WHERE YEAR(postLinks.CreationDate) = 2010 AND posts.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "666": "SELECT posts.Id FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE votes.UserId = 1465 ORDER BY posts.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT posts.Title FROM postLinks INNER JOIN posts ON postLinks.PostId = posts.Id ORDER BY postLinks.CreationDate ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName FROM users u INNER JOIN badges b ON u.Id = b.UserId GROUP BY u.Id, u.DisplayName ORDER BY COUNT(b.Name) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(votes.CreationDate) AS FirstVoteDate FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE users.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreaionDate)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName FROM badges b INNER JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Autobiographer' ORDER BY b.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE users.Location LIKE '%United Kingdom%' AND posts.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(post_count)  FROM (     SELECT COUNT(DISTINCT votes.PostId) AS post_count     FROM users     INNER JOIN votes ON users.Id = votes.UserId     WHERE users.Age = (SELECT MAX(Age) FROM users)     GROUP BY votes.UserId ) AS user_post_counts;\t----- bird -----\tcodebase_community",
    "674": "SELECT users.DisplayName FROM users ORDER BY users.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT users.DisplayName FROM users WHERE users.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Jay Stevens' AND YEAR(users.CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT posts.Id, posts.Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky' ORDER BY posts.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT posts.Id, posts.Title FROM posts ORDER BY posts.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.ViewCount > 20000 AND YEAR(users.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "682": "SELECT posts.Id, posts.OwnerDisplayName FROM posts WHERE strftime('%Y', posts.CreationDate) = '2010' ORDER BY posts.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT (CAST(COUNT(posts.Id) AS REAL) * 100 / (SELECT COUNT(posts.Id) FROM posts)) AS percentage FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE strftime('%Y', users.CreationDate) = '2011' AND users.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "684": "SELECT (CAST(COUNT(Id) FILTER (WHERE Age BETWEEN 13 AND 18) AS REAL) * 100 / COUNT(Id)) AS percentage FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT p.ViewCount, u.DisplayName FROM posts p INNER JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(comments.Id) FROM comments WHERE comments.PostId = (     SELECT posts.Id     FROM posts     ORDER BY posts.Score DESC     LIMIT 1 );\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT users.DisplayName, users.Location FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE posts.Id = 183 ORDER BY posts.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "690": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Emmett' ORDER BY badges.Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT badges.Date - users.CreationDate AS DaysToBadge FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Zolomon';\t----- bird -----\tcodebase_community",
    "693": "SELECT      (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)) AS post_count,     (SELECT COUNT(*) FROM comments WHERE UserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)) AS comment_count;\t----- bird -----\tcodebase_community",
    "694": "SELECT comments.Text, comments.UserDisplayName FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'Analysing wind data with R' ORDER BY comments.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT badges.UserId)  FROM badges  WHERE badges.Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(posts.Id) FROM posts INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": "SELECT users.Reputation, users.Views FROM users WHERE users.DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT (p.CommentCount + p.AnswerCount) AS TotalInteractions FROM posts p WHERE p.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT users.CreationDate FROM users WHERE users.DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM votes WHERE BountyAmount > 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT      CAST(COUNT(CASE WHEN posts.Score > 50 THEN 1 END) AS REAL) * 100 / COUNT(posts.Id) AS percentage FROM      posts INNER JOIN      users ON posts.OwnerUserId = users.Id WHERE      users.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT tags.ExcerptPostId, tags.WikiPostId FROM tags WHERE tags.TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT users.Reputation, users.UpVotes FROM users INNER JOIN comments ON comments.UserId = users.Id WHERE comments.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Title LIKE '%linear regression%'\t----- bird -----\tcodebase_community",
    "707": "SELECT comments.Text FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.ViewCount BETWEEN 100 AND 150 ORDER BY comments.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT users.CreationDate, users.Age FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Text LIKE '%http://%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT posts.Id) FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE comments.Score = 0 AND posts.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.CommentCount = 1 AND comments.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT users.Id) FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Score = 0 AND users.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT posts.Id, comments.Text FROM posts INNER JOIN comments ON comments.PostId = posts.Id WHERE posts.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT users.UpVotes FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT comments.Text FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT users.DisplayName FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Score BETWEEN 1 AND 5 AND users.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT      (CAST(COUNT(DISTINCT users.Id) AS REAL) * 100 / COUNT(DISTINCT comments.UserId)) AS percentage FROM      comments INNER JOIN      users ON comments.UserId = users.Id WHERE      comments.Score BETWEEN 5 AND 10     AND users.UpVotes = 0;\t----- bird -----\tcodebase_community",
    "717": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT hero_power.hero_id) FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT superhero.full_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.id HAVING COUNT(hero_power.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE superhero.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT superhero.superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ORDER BY superhero.height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour ORDER BY COUNT(superhero.id) DESC;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(superhero.height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT superhero.superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT publisher.publisher_name FROM hero_attribute JOIN superhero ON superhero.id = hero_attribute.hero_id JOIN publisher ON publisher.id = superhero.publisher_id WHERE hero_attribute.attribute_id = (     SELECT id FROM attribute WHERE attribute_name = 'Speed' ) ORDER BY hero_attribute.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "736": "SELECT s.superhero_name FROM superhero s INNER JOIN hero_attribute ha ON s.id = ha.hero_id INNER JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Intelligence' ORDER BY ha.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "737": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE gender.gender = 'Female'   AND attribute.attribute_name = 'Strength'   AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT s.superhero_name FROM superhero s INNER JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.id ORDER BY COUNT(hp.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT      (COUNT(CASE WHEN alignment.alignment = 'Neutral' THEN 1 END) * 100.0 / COUNT(superhero.id)) AS percentage_neutral,     COUNT(CASE WHEN alignment.alignment = 'Neutral' AND publisher.publisher_name = 'Marvel Comics' THEN 1 END) AS marvel_neutral FROM      superhero INNER JOIN      alignment ON superhero.alignment_id = alignment.id INNER JOIN      publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "744": "SELECT      (COUNT(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN superhero.id END) -       COUNT(CASE WHEN publisher.publisher_name = 'DC Comics' THEN superhero.id END)) AS difference FROM      publisher INNER JOIN      superhero ON publisher.id = superhero.publisher_id WHERE      publisher.publisher_name IN ('Marvel Comics', 'DC Comics');\t----- bird -----\tsuperhero",
    "745": "SELECT publisher.id FROM publisher WHERE publisher.publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(hero_attribute.attribute_value) AS average_attribute_value FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*)  FROM superhero  WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(superhero.weight_kg)  FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  WHERE gender.gender = 'Female';\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT superpower.power_name FROM gender INNER JOIN superhero ON gender.id = superhero.gender_id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE gender.gender = 'Male' LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT superhero.superhero_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT superhero.superhero_name FROM superhero LEFT JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.height_cm BETWEEN 170 AND 190   AND (colour.colour IS NULL OR colour.colour = 'No Colour');\t----- bird -----\tsuperhero",
    "754": "SELECT superpower.power_name FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_power.hero_id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Demi-God' LIMIT 5;\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "757": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT colour.colour FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE superhero.height_cm = 185 AND race.race = 'Human';\t----- bird -----\tsuperhero",
    "759": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id ORDER BY superhero.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "760": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180)) AS percentage FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE height_cm BETWEEN 150 AND 180 AND publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "761": "SELECT superhero.superhero_name FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Male' AND superhero.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero);\t----- bird -----\tsuperhero",
    "762": "SELECT superpower.power_name FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id GROUP BY superpower.power_name ORDER BY COUNT(hero_power.power_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT hero_attribute.attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT superpower.power_name FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_power.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT hero_power.hero_id) FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT superhero.full_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' ORDER BY hero_attribute.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT COUNT(superhero.id) * 1.0 / (SELECT COUNT(*) FROM superhero) AS average FROM superhero WHERE superhero.skin_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT superhero.superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE publisher.publisher_name = 'Dark Horse Comics'   AND attribute.attribute_name = 'Durability' ORDER BY hero_attribute.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT colour_eye.colour AS eye_colour,         colour_hair.colour AS hair_colour,         colour_skin.colour AS skin_colour FROM superhero INNER JOIN colour AS colour_eye ON superhero.eye_colour_id = colour_eye.id INNER JOIN colour AS colour_hair ON superhero.hair_colour_id = colour_hair.id INNER JOIN colour AS colour_skin ON superhero.skin_colour_id = colour_skin.id INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female'    AND publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "773": "SELECT superhero.superhero_name, publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.hair_colour_id = superhero.skin_colour_id AND superhero.hair_colour_id = superhero.eye_colour_id;\t----- bird -----\tsuperhero",
    "774": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) FROM superhero WHERE skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')  AND gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "776": "SELECT superhero.superhero_name, race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT gender.gender FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE superhero.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(hero_power.hero_id) FROM hero_power INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "780": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black';\t----- bird -----\tsuperhero",
    "783": "SELECT DISTINCT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold');\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire';\t----- bird -----\tsuperhero",
    "785": "SELECT superhero.superhero_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(DISTINCT hero_attribute.hero_id) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = (     SELECT MAX(hero_attribute.attribute_value)     FROM hero_attribute     INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id     WHERE attribute.attribute_name = 'Strength' );\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, alignment.alignment FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE superhero.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT      (COUNT(*) * 100.0 / total_heroes.total_count) AS percent_female_heroes FROM      superhero INNER JOIN      gender ON superhero.gender_id = gender.id INNER JOIN      publisher ON superhero.publisher_id = publisher.id CROSS JOIN      (SELECT COUNT(*) AS total_count       FROM superhero       INNER JOIN publisher ON superhero.publisher_id = publisher.id       WHERE publisher.publisher_name = 'Marvel Comics') AS total_heroes WHERE      gender.gender = 'Female'      AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(superhero.weight_kg)  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE race.race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT      (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') -      (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference;\t----- bird -----\tsuperhero",
    "791": "SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT sp.power_name FROM superhero AS sh INNER JOIN hero_power AS hp ON sh.id = hp.hero_id INNER JOIN superpower AS sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE race.race = 'God / Eternal' AND gender.gender = 'Male'\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name FROM superhero s INNER JOIN hero_attribute ha ON s.id = ha.hero_id INNER JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' ORDER BY ha.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown';\t----- bird -----\tsuperhero",
    "798": "SELECT DISTINCT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL\t----- bird -----\tsuperhero",
    "800": "SELECT (CAST(COUNT(*) AS REAL) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' AND colour.id = 7;\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN gender.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) /         CAST(SUM(CASE WHEN gender.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) AS ratio FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero.superhero_name FROM superhero WHERE superhero.height_cm = (     SELECT MAX(superhero.height_cm)     FROM superhero ) LIMIT 1;\t----- bird -----\tsuperhero",
    "803": "SELECT superpower.id FROM superpower WHERE superpower.power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT superhero.full_name FROM superhero WHERE superhero.weight_kg = 0 OR superhero.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 108 AND superhero.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT race.race FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN race ON superhero.race_id = race.id ORDER BY hero_attribute.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "811": "SELECT a.alignment, sp.power_name FROM superhero s INNER JOIN alignment a ON s.alignment_id = a.id INNER JOIN hero_power hp ON s.id = hp.hero_id INNER JOIN superpower sp ON hp.power_id = sp.id WHERE s.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' LIMIT 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(hero_attribute.attribute_value) AS average FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "814": "SELECT DISTINCT colour.colour FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE alignment.id = 1 AND gender.id = 2;\t----- bird -----\tsuperhero",
    "816": "SELECT superhero.superhero_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT race.race FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN race ON superhero.race_id = race.id WHERE colour.colour = 'Blue' AND gender.gender = 'Male';\t----- bird -----\tsuperhero",
    "818": "SELECT (CAST(COUNT(*) AS REAL) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE alignment_id = 2)) AS percentage_female_bad_superheroes FROM superhero WHERE alignment_id = 2 AND gender_id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT      (COUNT(CASE WHEN superhero.eye_colour_id = 7 THEN 1 END) -       COUNT(CASE WHEN superhero.eye_colour_id = 1 THEN 1 END)) AS difference FROM      superhero WHERE      (superhero.weight_kg = 0 OR superhero.weight_kg IS NULL);\t----- bird -----\tsuperhero",
    "820": "SELECT ha.attribute_value FROM superhero s INNER JOIN hero_attribute ha ON s.id = ha.hero_id INNER JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = 'Hulk' AND a.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
    "821": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT superhero.superhero_name FROM hero_power INNER JOIN superhero ON hero_power.hero_id = superhero.id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Wind Control' ORDER BY superhero.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT gender.gender FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE superpower.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT superhero.superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics' ORDER BY superhero.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(superhero.height_cm)  FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN race ON superhero.race_id = race.id WHERE publisher.publisher_name = 'Dark Horse Comics'  AND race.race <> 'Human';\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(DISTINCT hero_attribute.hero_id) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "829": "SELECT      (dc_count - marvel_count) AS difference FROM (     SELECT          (SELECT COUNT(*) FROM superhero           INNER JOIN publisher ON superhero.publisher_id = publisher.id           WHERE publisher.publisher_name = 'DC Comics') AS dc_count,         (SELECT COUNT(*) FROM superhero           INNER JOIN publisher ON superhero.publisher_id = publisher.id           WHERE publisher.publisher_name = 'Marvel Comics') AS marvel_count ) AS counts;\t----- bird -----\tsuperhero",
    "830": "SELECT attribute.attribute_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Black Panther' ORDER BY hero_attribute.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero) LIMIT 1;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero.superhero_name FROM superhero WHERE superhero.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT (CAST(COUNT(*) AS REAL) * 100.0 / (SELECT COUNT(*) FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'George Lucas')) AS female_percentage FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT      (CAST(SUM(CASE WHEN alignment.alignment = 'Good' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage_of_good_superheroes FROM      superhero INNER JOIN      publisher ON superhero.publisher_id = publisher.id INNER JOIN      alignment ON superhero.alignment_id = alignment.id WHERE      publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*)  FROM superhero  WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_attribute.hero_id FROM hero_attribute ORDER BY hero_attribute.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "838": "SELECT superhero.full_name FROM superhero WHERE superhero.superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.weight_kg < 100 AND colour.colour = 'Brown';\t----- bird -----\tsuperhero",
    "840": "SELECT hero_attribute.attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT superhero.weight_kg, race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(superhero.height_cm)  FROM superhero  INNER JOIN alignment ON superhero.alignment_id = alignment.id  WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "843": "SELECT hero_power.hero_id FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT DISTINCT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero);\t----- bird -----\tsuperhero",
    "846": "SELECT drivers.driverRef FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 20 ORDER BY CAST(SUBSTR(qualifying.q1, 1, INSTR(qualifying.q1, ':') - 1) AS INTEGER) * 60 +           CAST(SUBSTR(qualifying.q1, INSTR(qualifying.q1, ':') + 1) AS FLOAT) DESC LIMIT 5;\t----- bird -----\tformula_1",
    "847": "SELECT drivers.surname FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 19 ORDER BY CAST(SUBSTR(qualifying.q2, 1, INSTR(qualifying.q2, ':') - 1) AS INTEGER) * 60 +           CAST(SUBSTR(qualifying.q2, INSTR(qualifying.q2, ':') + 1) AS FLOAT) ASC LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT DISTINCT circuits.circuitId FROM circuits INNER JOIN races ON races.circuitId = circuits.circuitId INNER JOIN results ON results.raceId = races.raceId INNER JOIN constructors ON constructors.constructorId = results.constructorId WHERE constructors.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.country NOT IN ('Asia', 'Europe');\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT constructors.nationality FROM results INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE results.raceId = 24 AND results.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE drivers.forename = 'Bruno'   AND drivers.surname = 'Senna'   AND qualifying.raceId = 354;\t----- bird -----\tformula_1",
    "860": "SELECT drivers.nationality FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 355 AND qualifying.q2 = '0:01:40';\t----- bird -----\tformula_1",
    "861": "SELECT qualifying.number FROM qualifying WHERE qualifying.raceId = 903   AND qualifying.q3 = '0:01:54';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.name = 'Bahrain Grand Prix'   AND races.year = 2007   AND results.time IS NULL;\t----- bird -----\tformula_1",
    "863": "SELECT seasons.url FROM races INNER JOIN seasons ON races.year = seasons.year WHERE races.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.date = '2015-11-29' AND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "865": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.raceId = 592 AND results.time IS NOT NULL ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT drivers.url FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.raceId = 161 AND lapTimes.time LIKE '1:27%'\t----- bird -----\tformula_1",
    "867": "SELECT d.nationality FROM results r INNER JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = 933 ORDER BY CAST(r.fastestLapSpeed AS FLOAT) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "868": "SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT constructors.url FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructorResults.raceId = 9 ORDER BY constructorResults.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.forename = 'Lucas'    AND drivers.surname = 'di Grassi'    AND qualifying.raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT drivers.nationality FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 347 AND qualifying.q2 = '0:01:15';\t----- bird -----\tformula_1",
    "872": "SELECT drivers.code FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 45 AND qualifying.q3 LIKE '1:33%'\t----- bird -----\tformula_1",
    "873": "SELECT r.time FROM drivers d INNER JOIN results r ON d.driverId = r.driverId WHERE d.forename = 'Bruce' AND d.surname = 'McLaren' AND r.raceId = 743;\t----- bird -----\tformula_1",
    "874": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'San Marino Grand Prix' AND races.year = 2006 AND results.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT seasons.url FROM races INNER JOIN seasons ON races.year = seasons.year WHERE races.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*) FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.date = '2015-11-29' AND results.time IS NULL;\t----- bird -----\tformula_1",
    "877": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.raceId = 872 AND results.time IS NOT NULL ORDER BY drivers.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "878": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE results.raceId = 348 ORDER BY results.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality FROM results r INNER JOIN drivers d ON r.driverId = d.driverId ORDER BY CAST(r.fastestLapSpeed AS FLOAT) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "880": "SELECT      ((CAST(r1.fastestLapSpeed AS REAL) - CAST(r2.fastestLapSpeed AS REAL)) * 100 / CAST(r1.fastestLapSpeed AS REAL)) AS percentage_faster FROM      results r1 INNER JOIN      drivers d ON r1.driverId = d.driverId INNER JOIN      results r2 ON r1.driverId = r2.driverId WHERE      d.forename = 'Paul'      AND d.surname = 'di Resta'     AND r1.raceId = 853     AND r2.raceId = 854;\t----- bird -----\tformula_1",
    "881": "SELECT      (COUNT(CASE WHEN results.time IS NOT NULL THEN 1 END) * 100.0 / COUNT(results.driverId)) AS percentage FROM      races INNER JOIN      results ON races.raceId = results.raceId WHERE      races.date = '1983-07-16';\t----- bird -----\tformula_1",
    "882": "SELECT MIN(races.year)  FROM races  WHERE races.name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT name FROM races WHERE year = 2005 ORDER BY name DESC;\t----- bird -----\tformula_1",
    "884": "SELECT races.name FROM races WHERE YEAR(races.date) = (SELECT YEAR(MIN(date)) FROM races)   AND MONTH(races.date) = (SELECT MONTH(MIN(date)) FROM races);\t----- bird -----\tformula_1",
    "885": "SELECT races.name, races.date FROM races WHERE races.year = 1999 ORDER BY races.round DESC LIMIT 1;\t----- bird -----\tformula_1",
    "886": "SELECT races.year FROM races GROUP BY races.year ORDER BY COUNT(races.round) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT DISTINCT races.name FROM races WHERE races.year = 2017 AND races.name NOT IN (     SELECT races.name     FROM races     WHERE races.year = 2000 );\t----- bird -----\tformula_1",
    "888": "SELECT circuits.country, circuits.name, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix' ORDER BY races.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "889": "SELECT MAX(races.year)  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.name = 'Brands Hatch'  AND races.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT seasons.year) FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN seasons ON races.year = seasons.year WHERE circuits.name = 'Silverstone Circuit' AND races.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "891": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.year = 2010 AND races.name = 'Singapore Grand Prix' ORDER BY results.positionOrder;\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename, drivers.surname, driverStandings.points FROM driverStandings INNER JOIN drivers ON driverStandings.driverId = drivers.driverId ORDER BY driverStandings.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT drivers.forename, drivers.surname, results.points FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2017 AND races.name = 'Chinese Grand Prix' ORDER BY results.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT d.forename, d.surname, r.name FROM results res INNER JOIN drivers d ON res.driverId = d.driverId INNER JOIN races r ON res.raceId = r.raceId ORDER BY res.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "896": "SELECT      CAST(COUNT(CASE WHEN results.position > 1 THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM      drivers INNER JOIN      results ON drivers.driverId = results.driverId INNER JOIN      races ON results.raceId = races.raceId WHERE      drivers.surname = 'Hamilton'      AND races.year >= 2010;\t----- bird -----\tformula_1",
    "897": "SELECT d.forename, d.surname, d.nationality, MAX(ds.points) AS max_points FROM driverStandings ds INNER JOIN drivers d ON ds.driverId = d.driverId GROUP BY ds.driverId ORDER BY MAX(ds.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT      YEAR(CURRENT_TIMESTAMP) - YEAR(drivers.dob) AS age,      drivers.forename,      drivers.surname  FROM      drivers  WHERE      drivers.nationality = 'Japanese'  ORDER BY      drivers.dob DESC  LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT circuits.name FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.year BETWEEN 1990 AND 2000 GROUP BY circuits.circuitId HAVING COUNT(races.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location, races.name FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA' AND races.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT races.name, circuits.name, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE MONTH(races.date) = 9 AND YEAR(races.date) = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT races.name FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE circuits.name = 'Sepang International Circuit'   AND drivers.forename = 'Michael'   AND drivers.surname = 'Schumacher'   AND results.position = 1;\t----- bird -----\tformula_1",
    "904": "SELECT r.name, r.year FROM drivers d INNER JOIN results res ON d.driverId = res.driverId INNER JOIN races r ON res.raceId = r.raceId WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' ORDER BY res.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(results.points) AS average_points FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Eddie'   AND drivers.surname = 'Irvine'   AND races.year = 2000;\t----- bird -----\tformula_1",
    "906": "SELECT r.name AS race_name, res.points FROM drivers d INNER JOIN results res ON d.driverId = res.driverId INNER JOIN races r ON res.raceId = r.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY r.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT races.name, races.year, circuits.location FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId ORDER BY results.laps DESC LIMIT 1;\t----- bird -----\tformula_1",
    "909": "SELECT (CAST(COUNT(*) FILTER (WHERE circuits.country = 'Germany') AS REAL) * 100.0 / COUNT(*)) AS percentage FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "910": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT circuits.name FROM circuits WHERE circuits.name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY circuits.lat DESC LIMIT 1;\t----- bird -----\tformula_1",
    "912": "SELECT circuits.circuitRef FROM circuits WHERE circuits.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1;\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*)  FROM drivers  WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT circuits.country FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN circuits ON results.circuitId = circuits.circuitId ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT drivers.surname FROM drivers WHERE drivers.nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT drivers.url FROM drivers WHERE drivers.forename = 'Anthony' AND drivers.surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT drivers.driverRef FROM drivers WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "921": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "922": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.name = 'Abu Dhabi Circuit';\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT races.date FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT circuits.url FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MIN(results.fastestLapTime) AS fastest_lap_time FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "927": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId ORDER BY CAST(results.fastestLapSpeed AS FLOAT) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "928": "SELECT drivers.driverRef FROM races INNER JOIN results ON races.raceId = results.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'Canadian Grand Prix'   AND races.year = 2007   AND results.positionOrder = 1;\t----- bird -----\tformula_1",
    "929": "SELECT DISTINCT races.name FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT races.name FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(CAST(results.fastestLapSpeed AS FLOAT)) AS fastest_lap_speed FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT races.year FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "933": "SELECT results.positionOrder FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis'   AND drivers.surname = 'Hamilton'   AND races.name = 'Chinese Grand Prix'   AND races.year = 2008;\t----- bird -----\tformula_1",
    "934": "SELECT drivers.forename, drivers.surname FROM races INNER JOIN results ON races.raceId = results.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.year = 1989   AND races.name = 'Australian Grand Prix'   AND results.grid = 4;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT drivers.number) FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT results.fastestLap FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis'   AND drivers.surname = 'Hamilton'   AND races.year = 2008   AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "937": "SELECT results.time FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.year = 2008   AND races.name = 'Chinese Grand Prix'   AND results.rank = 2;\t----- bird -----\tformula_1",
    "938": "SELECT drivers.forename, drivers.surname, drivers.url FROM races INNER JOIN results ON races.raceId = results.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.time LIKE '__:__:___.___'\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT results.driverId)  FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.nationality = 'British'  AND races.year = 2008  AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT results.driverId) FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.name = 'Chinese Grand Prix'   AND races.year = 2008   AND results.time IS NOT NULL   AND results.driverId IN (     SELECT driverId     FROM results     GROUP BY driverId     HAVING COUNT(raceId) > 0   )\t----- bird -----\tformula_1",
    "941": "SELECT SUM(results.points) AS total_points FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT AVG(     CAST(SUBSTR(results.fastestLapTime, 1, INSTR(results.fastestLapTime, ':') - 1) AS INTEGER) * 60 +     CAST(SUBSTR(results.fastestLapTime, INSTR(results.fastestLapTime, ':') + 1) AS REAL) ) AS average_fastest_lap_time_seconds FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "943": "SELECT (CAST(COUNT(results.raceId) AS REAL) * 100 / (SELECT COUNT(results.raceId)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.year = 2008 AND races.name = 'Australian Grand Prix')) AS completion_rate FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "944": "SELECT      ((last_driver_time - champion_time) * 100.0 / last_driver_time) AS percentage_faster FROM (     SELECT          (SELECT milliseconds           FROM results           WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')           AND positionOrder = 1) AS champion_time,         (SELECT milliseconds           FROM results           WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')           AND time IS NOT NULL           ORDER BY positionOrder DESC           LIMIT 1) AS last_driver_time ) AS times;\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(circuitId)  FROM circuits  WHERE country = 'Australia'  AND location = 'Adelaide';\t----- bird -----\tformula_1",
    "946": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND YEAR(dob) > 1980;\t----- bird -----\tformula_1",
    "948": "SELECT MAX(constructorStandings.points) AS maximum_points FROM constructorStandings INNER JOIN constructors ON constructorStandings.constructorId = constructors.constructorId WHERE constructors.nationality = 'British';\t----- bird -----\tformula_1",
    "949": "SELECT constructors.name FROM constructorStandings INNER JOIN constructors ON constructorStandings.constructorId = constructors.constructorId ORDER BY constructorStandings.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "950": "SELECT constructors.name FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructorResults.raceId = 291 AND constructorResults.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT cr.constructorId) FROM constructorResults cr INNER JOIN constructors c ON cr.constructorId = c.constructorId WHERE c.nationality = 'Japanese' AND cr.points = 0 GROUP BY cr.constructorId HAVING COUNT(cr.raceId) = 2;\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT constructors.name FROM results INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE results.rank = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructors.constructorId) FROM constructors INNER JOIN results ON constructors.constructorId = results.constructorId INNER JOIN lapTimes ON results.driverId = lapTimes.driverId AND results.raceId = lapTimes.raceId WHERE constructors.nationality = 'French' AND lapTimes.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT      CAST(COUNT(DISTINCT CASE WHEN results.time IS NOT NULL THEN results.driverId END) AS REAL) * 100.0 / COUNT(DISTINCT results.driverId) AS completion_percentage FROM      drivers INNER JOIN      results ON drivers.driverId = results.driverId INNER JOIN      races ON results.raceId = races.raceId WHERE      drivers.nationality = 'Japanese'     AND races.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT races.year, AVG(CAST(SUBSTR(results.time, 1, INSTR(results.time, ':') - 1) AS INTEGER) * 60 +                        CAST(SUBSTR(results.time, INSTR(results.time, ':') + 1) AS REAL)) AS avg_champion_time_seconds FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.positionOrder = 1 AND races.year < 1975 AND results.time IS NOT NULL GROUP BY races.year;\t----- bird -----\tformula_1",
    "956": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId WHERE YEAR(drivers.dob) > 1975 AND driverStandings.position = 2;\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE drivers.nationality = 'Italian' AND results.time IS NULL;\t----- bird -----\tformula_1",
    "958": "SELECT d.forename, d.surname FROM drivers d INNER JOIN results r ON d.driverId = r.driverId ORDER BY r.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "959": "SELECT results.fastestLap FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.year = 2009 AND results.positionOrder = 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(CAST(results.fastestLapSpeed AS FLOAT)) AS average_fastest_lap_speed FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "961": "SELECT races.name, races.year FROM races INNER JOIN results ON races.raceId = results.raceId WHERE results.milliseconds IS NOT NULL ORDER BY results.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT      CAST(COUNT(DISTINCT d.driverId) FILTER (WHERE YEAR(d.dob) < 1985 AND r.laps > 50) AS REAL) * 100 /      COUNT(DISTINCT d.driverId) AS percentage FROM      drivers d JOIN      results r ON d.driverId = r.driverId JOIN      races ra ON r.raceId = ra.raceId WHERE      ra.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'French' AND CAST(SUBSTR(lapTimes.time, 1, INSTR(lapTimes.time, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(lapTimes.time, INSTR(lapTimes.time, ':') + 1) AS FLOAT) < 120;\t----- bird -----\tformula_1",
    "964": "SELECT DISTINCT drivers.code FROM drivers WHERE drivers.nationality LIKE '%American%'\t----- bird -----\tformula_1",
    "965": "SELECT races.raceId FROM races WHERE races.year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT results.driverId)  FROM results  WHERE results.raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT COUNT(*)  FROM (     SELECT drivers.code      FROM drivers      ORDER BY drivers.dob DESC      LIMIT 3 ) AS top3  WHERE top3.nationality = 'Netherlandic';\t----- bird -----\tformula_1",
    "968": "SELECT drivers.driverRef FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND strftime('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'German'   AND strftime('%Y', drivers.dob) BETWEEN '1980' AND '1990' ORDER BY lapTimes.time ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT drivers.driverRef FROM drivers WHERE drivers.nationality = 'German' ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT DISTINCT drivers.driverId, drivers.code FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE YEAR(drivers.dob) = 1971   AND results.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "973": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'Spanish'    AND strftime('%Y', drivers.dob) < '1982' GROUP BY drivers.driverId ORDER BY MAX(lapTimes.time) DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT races.year FROM races INNER JOIN results ON races.raceId = results.raceId ORDER BY results.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT races.year FROM races INNER JOIN results ON races.raceId = results.raceId ORDER BY CAST(results.fastestLapSpeed AS FLOAT) ASC LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT lapTimes.driverId FROM lapTimes WHERE lapTimes.lap = 1 ORDER BY lapTimes.time ASC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE raceId > 50    AND raceId < 100   AND time IS NOT NULL   AND statusId = 2;\t----- bird -----\tformula_1",
    "978": "SELECT circuits.location, circuits.lat, circuits.lng, COUNT(*) FROM circuits WHERE circuits.country = 'Austria' GROUP BY circuits.location, circuits.lat, circuits.lng;\t----- bird -----\tformula_1",
    "979": "SELECT results.raceId FROM results WHERE results.time IS NOT NULL GROUP BY results.raceId ORDER BY COUNT(results.time) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT drivers.driverRef, drivers.nationality, drivers.dob FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 23 AND qualifying.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT races.year, races.name, races.date, races.time FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId INNER JOIN races ON qualifying.raceId = races.raceId ORDER BY drivers.dob DESC, races.date LIMIT 1;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN status ON results.statusId = status.statusId WHERE drivers.nationality = 'American' AND status.status = 'Puncture';\t----- bird -----\tformula_1",
    "983": "SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructors.nationality = 'Italian' ORDER BY constructorStandings.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT constructors.url FROM constructorStandings JOIN constructors ON constructorStandings.constructorId = constructors.constructorId GROUP BY constructorStandings.constructorId ORDER BY SUM(constructorStandings.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT d.forename, d.surname FROM races r INNER JOIN lapTimes lt ON r.raceId = lt.raceId INNER JOIN drivers d ON lt.driverId = d.driverId WHERE r.name = 'French Grand Prix' AND lt.lap = 3 ORDER BY lt.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT r.name, r.milliseconds FROM results r INNER JOIN races ra ON r.raceId = ra.raceId WHERE r.fastestLap = 1 ORDER BY r.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(CAST(SUBSTR(results.fastestLapTime, 1, INSTR(results.fastestLapTime, ':') - 1) AS INTEGER) * 60 +             CAST(SUBSTR(results.fastestLapTime, INSTR(results.fastestLapTime, ':') + 1) AS FLOAT)) AS average_fastest_lap_time FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.year = 2006   AND races.name = 'United States Grand Prix'   AND results.rank < 11;\t----- bird -----\tformula_1",
    "988": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'German'   AND YEAR(drivers.dob) > 1980   AND YEAR(drivers.dob) < 1985 GROUP BY drivers.driverId, drivers.forename, drivers.surname ORDER BY AVG(CAST(pitStops.duration AS FLOAT)) ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT drivers.forename, drivers.surname, results.time FROM races INNER JOIN results ON races.raceId = results.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'Canadian Grand Prix'    AND races.year = 2008    AND results.positionOrder = 1;\t----- bird -----\tformula_1",
    "990": "SELECT constructors.constructorRef, constructors.url FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE races.year = 2009   AND races.name = 'Singapore Grand Prix' ORDER BY CAST(results.time AS TIME) ASC LIMIT 1;\t----- bird -----\tformula_1",
    "991": "SELECT drivers.forename, drivers.surname, drivers.dob FROM drivers WHERE drivers.nationality = 'Austrian' AND drivers.dob BETWEEN '1981-01-01' AND '1991-12-31';\t----- bird -----\tformula_1",
    "992": "SELECT CONCAT(drivers.forename, ' ', drivers.surname) AS full_name, drivers.url, drivers.dob FROM drivers WHERE drivers.nationality = 'German'   AND YEAR(drivers.dob) BETWEEN 1971 AND 1985 ORDER BY drivers.dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT circuits.location, circuits.country, circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT      SUM(constructorResults.points) AS total_points,      constructors.name,      constructors.nationality FROM      constructorResults INNER JOIN      races ON constructorResults.raceId = races.raceId INNER JOIN      constructors ON constructorResults.constructorId = constructors.constructorId WHERE      races.name = 'Monaco Grand Prix'      AND races.year BETWEEN 1980 AND 2010 GROUP BY      constructorResults.constructorId, constructors.name, constructors.nationality ORDER BY      total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(results.points) AS average_score FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Turkish Grand Prix';\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) AS annual_average_races FROM (     SELECT COUNT(*) AS race_count     FROM races     WHERE races.date BETWEEN '2000-01-01' AND '2010-12-31'     GROUP BY races.year ) AS yearly_race_counts;\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT wins FROM driverStandings WHERE position = 91\t----- bird -----\tformula_1",
    "999": "SELECT races.name FROM races INNER JOIN results ON races.raceId = results.raceId ORDER BY results.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT circuits.location || ', ' || circuits.country AS full_location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId ORDER BY races.date DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1001": "SELECT drivers.forename, drivers.surname FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId INNER JOIN qualifying ON races.raceId = qualifying.raceId INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE races.year = 2008   AND circuits.name = 'Marina Bay Street Circuit'   AND qualifying.q3 = (     SELECT MIN(q3)     FROM qualifying     INNER JOIN races ON qualifying.raceId = races.raceId     INNER JOIN circuits ON races.circuitId = circuits.circuitId     WHERE races.year = 2008       AND circuits.name = 'Marina Bay Street Circuit'   );\t----- bird -----\tformula_1",
    "1002": "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name,         d.nationality,         r.name AS race_name FROM drivers d JOIN results res ON d.driverId = res.driverId JOIN races r ON res.raceId = r.raceId WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.date LIMIT 1;\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*) AS accident_count FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Canadian Grand Prix' AND results.statusId = 3 GROUP BY results.driverId ORDER BY accident_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1004": "SELECT ds.wins, d.forename, d.surname FROM drivers d INNER JOIN driverStandings ds ON d.driverId = ds.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) LIMIT 1;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_duration FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT lapTimes.time FROM lapTimes ORDER BY lapTimes.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(CAST(pitStops.duration AS FLOAT)) AS longest_duration FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1008": "SELECT pitStops.lap FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId INNER JOIN races ON pitStops.raceId = races.raceId WHERE drivers.forename = 'Lewis'   AND drivers.surname = 'Hamilton'   AND races.year = 2011   AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "1009": "SELECT drivers.driverId, pitStops.duration FROM pitStops INNER JOIN races ON pitStops.raceId = races.raceId WHERE races.year = 2011 AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "1010": "SELECT lapTimes.time FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY lapTimes.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1011": "SELECT drivers.forename, drivers.surname FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId ORDER BY CAST(SUBSTR(lapTimes.time, 1, INSTR(lapTimes.time, ':') - 1) AS INTEGER) * 60 +           CAST(SUBSTR(lapTimes.time, INSTR(lapTimes.time, ':') + 1) AS FLOAT) ASC LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT results.position FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1013": "SELECT lapTimes.time FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE circuits.name = 'Austrian Grand Prix Circuit' ORDER BY lapTimes.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1014": "SELECT results.fastestLapTime FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN results ON races.raceId = results.raceId WHERE circuits.country = 'Italy'\t----- bird -----\tformula_1",
    "1015": "SELECT races.name FROM circuits INNER JOIN races ON races.circuitId = circuits.circuitId INNER JOIN lapTimes ON lapTimes.raceId = races.raceId WHERE circuits.name = 'Austrian Grand Prix Circuit' ORDER BY lapTimes.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1016": "SELECT ps.duration FROM circuits c JOIN races r ON r.circuitId = c.circuitId JOIN lapTimes lt ON lt.raceId = r.raceId JOIN pitStops ps ON ps.driverId = lt.driverId AND ps.raceId = lt.raceId WHERE c.name = 'Austrian Grand Prix Circuit' ORDER BY lt.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN results ON races.raceId = results.raceId WHERE results.fastestLapTime = '1:29.488';\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(pitStops.milliseconds) AS average_pit_stop_time FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(lapTimes.milliseconds) AS average FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT Player_Attributes.player_api_id FROM Player_Attributes ORDER BY Player_Attributes.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT Player.height, Player.player_name FROM Player ORDER BY Player.height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes ORDER BY potential ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating >= 60    AND overall_rating < 65   AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT Player.id FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT L.name FROM Match M INNER JOIN League L ON M.league_id = L.id WHERE M.season = '2015/2016' GROUP BY M.league_id ORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T.team_long_name FROM Match M JOIN Team T ON M.home_team_api_id = T.team_api_id WHERE M.season = '2015/2016' AND (M.home_team_goal - M.away_team_goal) < 0 GROUP BY M.home_team_api_id ORDER BY COUNT(M.id) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T.team_long_name FROM Match M INNER JOIN League L ON M.league_id = L.id INNER JOIN Team T ON M.away_team_api_id = T.team_api_id WHERE L.name = 'Scotland Premier League'   AND M.season = '2009/2010'   AND M.away_team_goal > M.home_team_goal GROUP BY M.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT Team_Attributes.buildUpPlaySpeed FROM Team_Attributes ORDER BY Team_Attributes.buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT L.name FROM Match M INNER JOIN League L ON M.league_id = L.id WHERE M.season = '2015/2016' AND M.home_team_goal = M.away_team_goal GROUP BY M.league_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) AS player_age FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.sprint_speed >= 97 AND strftime('%Y', Player_Attributes.date) BETWEEN '2013' AND '2015';\t----- bird -----\teuropean_football_2",
    "1032": "SELECT League.name, COUNT(Match.id) AS match_count FROM Match INNER JOIN League ON Match.league_id = League.id GROUP BY Match.league_id, League.name ORDER BY match_count DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(Player.height)  FROM Player  WHERE Player.birthday >= '1990-01-01 00:00:00'  AND Player.birthday < '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT pa.player_api_id FROM Player_Attributes pa WHERE substr(pa.date, 1, 4) = '2010' AND pa.overall_rating > (     SELECT avg(pa2.overall_rating)     FROM Player_Attributes pa2     WHERE substr(pa2.date, 1, 4) = '2010' ) ORDER BY pa.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT DISTINCT Team.team_fifa_api_id FROM Team INNER JOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id WHERE Team_Attributes.buildUpPlaySpeed > 50 AND Team_Attributes.buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT DISTINCT Team.team_long_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE strftime('%Y', Team_Attributes.date) = '2012' AND Team_Attributes.buildUpPlayPassing > (     SELECT AVG(Team_Attributes.buildUpPlayPassing)     FROM Team_Attributes     WHERE strftime('%Y', Team_Attributes.date) = '2012'     AND Team_Attributes.buildUpPlayPassing IS NOT NULL );\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(COUNT(CASE WHEN Player_Attributes.preferred_foot = 'left' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE strftime('%Y', Player.birthday) BETWEEN '1987' AND '1992';\t----- bird -----\teuropean_football_2",
    "1038": "SELECT League.name FROM League JOIN Match ON League.id = Match.league_id GROUP BY League.id ORDER BY SUM(Match.home_team_goal + Match.away_team_goal) ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(Player_Attributes.long_shots) AS average_long_shots FROM Player INNER JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player.height > 180 GROUP BY Player.player_fifa_api_id ORDER BY AVG(Player_Attributes.heading_accuracy) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T.team_long_name FROM Team T INNER JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id WHERE TA.buildUpPlayDribblingClass = 'Normal'   AND TA.date >= '2014-01-01 00:00:00'   AND TA.date <= '2014-12-31 23:59:59'   AND TA.chanceCreationPassing < (     SELECT AVG(chanceCreationPassing)     FROM Team_Attributes     WHERE buildUpPlayDribblingClass = 'Normal'       AND date >= '2014-01-01 00:00:00'       AND date <= '2014-12-31 23:59:59'   ) ORDER BY TA.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2009/2010' GROUP BY Match.league_id HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT Team.team_short_name FROM Team WHERE Team.team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT Player.player_name FROM Player WHERE substr(Player.birthday, 1, 4) = '1970' AND substr(Player.birthday, 6, 2) = '10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT pa.attacking_work_rate FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Franco Zennaro';\t----- bird -----\teuropean_football_2",
    "1046": "SELECT Team_Attributes.buildUpPlayPositioningClass FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT Player_Attributes.heading_accuracy FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Francois Affolter' AND Player_Attributes.date = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT Player_Attributes.overall_rating FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Gabriel Tamas' AND strftime('%Y', Player_Attributes.date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(Match.id) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' AND League.name = 'Scotland Premier League';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT pa.preferred_foot FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id ORDER BY p.birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1051": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = (     SELECT MAX(Player_Attributes.potential)     FROM Player_Attributes )\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.weight < 130 AND Player_Attributes.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT Team.team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT Player_Attributes.defensive_work_rate FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'David Wilson';\t----- bird -----\teuropean_football_2",
    "1055": "SELECT Player.birthday FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1056": "SELECT League.name FROM Country INNER JOIN League ON Country.id = League.country_id WHERE Country.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(Match.home_team_goal) AS average_home_team_goal FROM Match JOIN League ON Match.league_id = League.id JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT Player.player_name FROM (     SELECT Player.player_api_id, AVG(Player_Attributes.finishing) AS avg_finishing     FROM Player     INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id     WHERE Player.height = (SELECT MAX(height) FROM Player)        OR Player.height = (SELECT MIN(height) FROM Player)     GROUP BY Player.player_api_id ) AS subquery ORDER BY avg_finishing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating > 80 AND strftime('%Y', Player_Attributes.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT pa.potential FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1064": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT Team.team_long_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT Team_Attributes.buildUpPlayPassingClass FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_short_name = 'CLB';\t----- bird -----\teuropean_football_2",
    "1067": "SELECT DISTINCT Team.team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT SUM(Player_Attributes.overall_rating) / COUNT(Player_Attributes.id) AS average_overall_rating FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height > 170 AND strftime('%Y', Player_Attributes.date) BETWEEN '2010' AND '2015';\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player ORDER BY height ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT Team.team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeed = 31   AND Team_Attributes.buildUpPlayDribbling = 53   AND Team_Attributes.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(Player_Attributes.overall_rating) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Germany 1. Bundesliga'   AND strftime('%Y-%m', Match.date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT DISTINCT Team.team_short_name FROM Match INNER JOIN Team ON Match.home_team_api_id = Team.team_api_id WHERE Match.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = 61 ORDER BY Player_Attributes.balance DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT      (AVG(CASE WHEN Player.player_name = 'Abdou Diallo' THEN Player_Attributes.ball_control ELSE NULL END) -       AVG(CASE WHEN Player.player_name = 'Aaron Appindangoye' THEN Player_Attributes.ball_control ELSE NULL END)) AS ball_control_difference FROM      Player INNER JOIN      Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE      Player.player_name IN ('Abdou Diallo', 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
    "1077": "SELECT Team.team_long_name FROM Team WHERE Team.team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT Player.player_api_id) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE strftime('%Y', Player.birthday) < '1986' AND Player_Attributes.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY Player_Attributes.crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT pa.heading_accuracy FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height > 180 AND Player_Attributes.volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT DISTINCT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(Match.id) FROM Match INNER JOIN Country ON Match.country_id = Country.id WHERE Match.season = '2008/2009' AND Country.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT pa.long_passing FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id ORDER BY p.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Belgium Jupiler League'   AND SUBSTR(Match.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT L.name FROM Match M INNER JOIN League L ON M.league_id = L.id WHERE M.season = '2008/2009' GROUP BY M.league_id ORDER BY COUNT(M.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(Player_Attributes.overall_rating)  FROM Player  INNER JOIN Player_Attributes  ON Player.player_api_id = Player_Attributes.player_api_id  WHERE strftime('%Y', Player.birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT      ((ab.overall_rating - pp.overall_rating) * 100.0 / pp.overall_rating) AS percentage_increase FROM      (SELECT pa.overall_rating      FROM Player p      INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id      WHERE p.player_name = 'Ariel Borysiuk') ab,     (SELECT pa.overall_rating      FROM Player p      INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id      WHERE p.player_name = 'Paulin Puel') pp;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(Team_Attributes.buildUpPlaySpeed) FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(pa.overall_rating)  FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T2.crossing) AS total_crossing_score FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT      MAX(Team_Attributes.chanceCreationPassing) AS highest_chance_creation_passing,      Team_Attributes.chanceCreationPassingClass  FROM      Team  INNER JOIN      Team_Attributes  ON      Team.team_api_id = Team_Attributes.team_api_id  WHERE      Team.team_long_name = 'Ajax'  GROUP BY      Team_Attributes.chanceCreationPassingClass  ORDER BY      highest_chance_creation_passing DESC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1099": "SELECT pa.preferred_foot FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(Player_Attributes.overall_rating)  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player.player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(Match.away_team_goal)  FROM Match INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id INNER JOIN League ON Match.league_id = League.id INNER JOIN Country ON League.country_id = Country.id WHERE Team.team_long_name = 'Parma' AND Country.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1102": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date LIKE '2016-06-23%' ORDER BY Player.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT Player_Attributes.overall_rating FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT pa.potential FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Francesco Parravicini'  AND pa.date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT Player_Attributes.attacking_work_rate FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Francesco Migliore' AND Player_Attributes.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT Player_Attributes.defensive_work_rate FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Kevin Berigaud' AND Player_Attributes.date = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT pa.date FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Kevin Constant' ORDER BY pa.crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1108": "SELECT Team_Attributes.buildUpPlaySpeedClass FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'Willem II' AND Team_Attributes.date = '2011-02-22';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT Team_Attributes.buildUpPlayDribblingClass FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_short_name = 'LEI' AND Team_Attributes.date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT Team_Attributes.buildUpPlayPassingClass FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT Team_Attributes.chanceCreationPassingClass FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'PEC Zwolle' AND Team_Attributes.date = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT Team_Attributes.chanceCreationCrossingClass FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'Hull City'  AND Team_Attributes.date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT ta.defenceAggressionClass FROM Team t INNER JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE t.team_long_name = 'Hannover 96' AND ta.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(Player_Attributes.overall_rating)  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player.player_name = 'Marko Arnautovic'  AND substr(Player_Attributes.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT      ((ld.overall_rating - jb.overall_rating) * 100.0 / ld.overall_rating) AS percentage_difference FROM      (SELECT overall_rating       FROM Player       INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id       WHERE Player.player_name = 'Landon Donovan'       AND Player_Attributes.date = '2013-07-12') AS ld,     (SELECT overall_rating       FROM Player       INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id       WHERE Player.player_name = 'Jordan Bowery'       AND Player_Attributes.date = '2013-07-12') AS jb;\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', birthday)) >= 35;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(Match.home_team_goal) AS total_home_goals FROM Match INNER JOIN Player ON (     Match.home_player_1 = Player.player_api_id OR     Match.home_player_2 = Player.player_api_id OR     Match.home_player_3 = Player.player_api_id OR     Match.home_player_4 = Player.player_api_id OR     Match.home_player_5 = Player.player_api_id OR     Match.home_player_6 = Player.player_api_id OR     Match.home_player_7 = Player.player_api_id OR     Match.home_player_8 = Player.player_api_id OR     Match.home_player_9 = Player.player_api_id OR     Match.home_player_10 = Player.player_api_id OR     Match.home_player_11 = Player.player_api_id ) WHERE Player.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(Match.away_team_goal) AS total_away_goals FROM Match INNER JOIN Player ON      Player.player_api_id IN (         Match.away_player_1, Match.away_player_2, Match.away_player_3,          Match.away_player_4, Match.away_player_5, Match.away_player_6,          Match.away_player_7, Match.away_player_8, Match.away_player_9,          Match.away_player_10, Match.away_player_11     ) WHERE Player.player_name IN ('Daan Smith', 'Filipe Ferreira');\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(Match.home_team_goal) AS total_home_team_goals FROM Match INNER JOIN Player ON Match.home_player_1 = Player.player_api_id WHERE (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) <= 30\t----- bird -----\teuropean_football_2",
    "1122": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = (     SELECT MAX(potential)      FROM Player_Attributes );\t----- bird -----\teuropean_football_2",
    "1124": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1125": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing = 1 ORDER BY Player.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT DISTINCT Player.player_name FROM Player INNER JOIN Match ON (     Player.player_api_id = Match.home_player_1 OR     Player.player_api_id = Match.home_player_2 OR     Player.player_api_id = Match.home_player_3 OR     Player.player_api_id = Match.home_player_4 OR     Player.player_api_id = Match.home_player_5 OR     Player.player_api_id = Match.home_player_6 OR     Player.player_api_id = Match.home_player_7 OR     Player.player_api_id = Match.home_player_8 OR     Player.player_api_id = Match.home_player_9 OR     Player.player_api_id = Match.home_player_10 OR     Player.player_api_id = Match.home_player_11 OR     Player.player_api_id = Match.away_player_1 OR     Player.player_api_id = Match.away_player_2 OR     Player.player_api_id = Match.away_player_3 OR     Player.player_api_id = Match.away_player_4 OR     Player.player_api_id = Match.away_player_5 OR     Player.player_api_id = Match.away_player_6 OR     Player.player_api_id = Match.away_player_7 OR     Player.player_api_id = Match.away_player_8 OR     Player.player_api_id = Match.away_player_9 OR     Player.player_api_id = Match.away_player_10 OR     Player.player_api_id = Match.away_player_11 ) INNER JOIN League ON Match.league_id = League.id INNER JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT DISTINCT Country.name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id INNER JOIN Match ON (     Match.home_player_1 = Player.player_api_id OR     Match.home_player_2 = Player.player_api_id OR     Match.home_player_3 = Player.player_api_id OR     Match.home_player_4 = Player.player_api_id OR     Match.home_player_5 = Player.player_api_id OR     Match.home_player_6 = Player.player_api_id OR     Match.home_player_7 = Player.player_api_id OR     Match.home_player_8 = Player.player_api_id OR     Match.home_player_9 = Player.player_api_id OR     Match.home_player_10 = Player.player_api_id OR     Match.home_player_11 = Player.player_api_id OR     Match.away_player_1 = Player.player_api_id OR     Match.away_player_2 = Player.player_api_id OR     Match.away_player_3 = Player.player_api_id OR     Match.away_player_4 = Player.player_api_id OR     Match.away_player_5 = Player.player_api_id OR     Match.away_player_6 = Player.player_api_id OR     Match.away_player_7 = Player.player_api_id OR     Match.away_player_8 = Player.player_api_id OR     Match.away_player_9 = Player.player_api_id OR     Match.away_player_10 = Player.player_api_id OR     Match.away_player_11 = Player.player_api_id ) INNER JOIN League ON Match.league_id = League.id INNER JOIN Country ON League.country_id = Country.id WHERE Player_Attributes.vision > 89;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name FROM Player INNER JOIN Match ON Player.player_api_id = Match.home_player_1 OR Player.player_api_id = Match.away_player_1 INNER JOIN League ON Match.league_id = League.id INNER JOIN Country ON League.country_id = Country.id GROUP BY Country.id ORDER BY AVG(Player.weight) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT Team.team_long_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT Team.team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(Player.height) FROM Player INNER JOIN Country ON Player.country_id = Country.id WHERE Country.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE birthday > '1990-01-01 00:00:00' AND player_name LIKE 'Aaron%'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT      (pa1.jumping - pa2.jumping) AS jumping_difference FROM      Player_Attributes pa1 JOIN      Player ON pa1.player_api_id = Player.player_api_id WHERE      Player.id = 6 JOIN      Player_Attributes pa2 ON pa2.player_api_id = Player.player_api_id WHERE      Player.id = 23;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT Player.id FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.preferred_foot = 'right' ORDER BY Player_Attributes.potential ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1137": "SELECT CAST(COUNT(*) AS REAL) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes) AS percentage FROM Player_Attributes WHERE stamina > 80 AND strength > 80;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT Match.home_team_goal, Match.away_team_goal FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.date LIKE '2008-09-24%'  AND League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1140": "SELECT pa.sprint_speed, pa.agility, pa.acceleration FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT Team_Attributes.buildUpPlaySpeedClass FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' AND League.name = 'Italian Serie A';\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(Match.home_team_goal) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Netherlands Eredivisie';\t----- bird -----\teuropean_football_2",
    "1144": "SELECT pa.finishing, pa.curve FROM Player p INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id ORDER BY p.weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY Match.league_id ORDER BY COUNT(Match.id) DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT Team.team_long_name FROM Match INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id ORDER BY Match.away_team_goal DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT      (CAST(COUNT(*) AS REAL) * 100.0 / (SELECT COUNT(*) FROM Player)) AS percentage FROM      Player INNER JOIN      Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE      Player.height < 180      AND Player_Attributes.overall_rating > 70;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT      ((COUNT(CASE WHEN Admission = '+' THEN ID END) - COUNT(CASE WHEN Admission = '-' THEN ID END)) * 100.0 / COUNT(CASE WHEN Admission = '-' THEN ID END)) AS percentage_deviation FROM      Patient WHERE      SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F')) AS percentage FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) > '1930';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT      CAST(COUNT(CASE WHEN Admission = '+' THEN 1 END) AS REAL) * 100.0 / COUNT(*) AS inpatient_percentage FROM      Patient WHERE      strftime('%Y', Birthday) BETWEEN '1930' AND '1940';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT      (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-') /      (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') AS ratio\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Patient.Diagnosis, Laboratory.Date FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT      Patient.SEX,      Patient.Birthday,      Examination.`Examination Date`,      Examination.Symptoms FROM      Patient INNER JOIN      Examination ON Patient.ID = Examination.ID WHERE      Patient.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, (YEAR(CURDATE()) - YEAR(Patient.Birthday)) AS age FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT DISTINCT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1937 AND Laboratory.T-CHO > 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (CAST(COUNT(DISTINCT Laboratory.ID) AS REAL) * 100.0 / COUNT(DISTINCT Patient.ID)) AS percentage FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND (Laboratory.TP < 6.0 OR Laboratory.TP > 8.5);\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(Examination.`aCL IgG`) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) >= 50;\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F'   AND strftime('%Y', `First Date`) = '1997'   AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(YEAR(`First Date`) - YEAR(Birthday)) AS age FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(*) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Thrombosis = 1   AND strftime('%Y', Examination.`Examination Date`) = '1997'   AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(YEAR(Patient.Birthday)) - MIN(YEAR(Patient.Birthday)) AS age_gap FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG < 200;\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT Examination.Symptoms, Examination.Diagnosis FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Symptoms IS NOT NULL ORDER BY Patient.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT COUNT(DISTINCT Laboratory.ID) / 12 AS average_male_patients_per_month FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31' AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT      Laboratory.Date,      (strftime('%Y', Patient.`First Date`) - strftime('%Y', Patient.Birthday)) AS AgeAtFirstVisit FROM      Patient INNER JOIN      Laboratory ON Patient.ID = Laboratory.ID WHERE      Patient.Diagnosis LIKE '%SJS%' ORDER BY      Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT      (SUM(CASE WHEN Patient.SEX = 'M' AND Laboratory.UA <= 8.0 THEN 1 ELSE 0 END) * 1.0) /      (SUM(CASE WHEN Patient.SEX = 'F' AND Laboratory.UA <= 6.5 THEN 1 ELSE 0 END) * 1.0) AS male_to_female_ratio FROM      Laboratory INNER JOIN      Patient ON Laboratory.ID = Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient LEFT JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`Examination Date` IS NULL     OR (strftime('%Y', Examination.`Examination Date`) - strftime('%Y', Patient.`First Date`)) >= 1;\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE (YEAR(Examination.`Examination Date`) BETWEEN 1990 AND 1993) AND (YEAR(Examination.`Examination Date`) - YEAR(Patient.Birthday) < 18);\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.`T-BIL` >= 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Examination.Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Examination.Diagnosis ORDER BY COUNT(Examination.Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - strftime('%Y', Patient.Birthday)) AS average_age FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.Date BETWEEN '1991-10-01' AND '1991-10-31';\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT      strftime('%Y', Examination.`Examination Date`) - strftime('%Y', Patient.Birthday) AS Age,     Examination.Diagnosis FROM      Laboratory INNER JOIN      Examination ON Laboratory.ID = Examination.ID INNER JOIN      Patient ON Laboratory.ID = Patient.ID ORDER BY      Laboratory.HGB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT Examination.ANA FROM Examination WHERE Examination.ID = 3605340 AND Examination.`Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT      CASE          WHEN COUNT(*) > 0 THEN 'Yes'          ELSE 'No'      END AS cholesterol_status FROM      Laboratory WHERE      Laboratory.ID = 2927464      AND Laboratory.Date = '1995-09-04'      AND Laboratory.T-CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT p.SEX FROM Examination e INNER JOIN Patient p ON e.ID = p.ID WHERE e.Diagnosis = 'Aortitis' ORDER BY e.`Examination Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT Examination.`aCL IgM` FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Diagnosis = 'SLE' AND Patient.Description = '1994-02-19' AND Examination.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT Patient.SEX FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.Date = '1992-06-12' AND Laboratory.GPT = 9\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT strftime('%Y', '1991-10-21') - strftime('%Y', Patient.Birthday) AS age FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.UA = 8.4 AND Laboratory.Date = '1991-10-21';\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(Laboratory.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis LIKE '%SJS%' AND Laboratory.Date = '1991-06-13' AND strftime('%Y', Laboratory.Date) = '1995'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT Patient.Diagnosis FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Diagnosis = 'SLE'   AND `Examination Date` = '1997-01-27'   AND `Examination Date` = Patient.`First Date`;\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Examination.Symptoms FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = '1959-03-01'   AND Examination.`Examination Date` = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT      ((SUM(CASE WHEN Laboratory.Date LIKE '1981-11-%' THEN Laboratory.`T-CHO` ELSE 0 END) -        SUM(CASE WHEN Laboratory.Date LIKE '1981-12-%' THEN Laboratory.`T-CHO` ELSE 0 END)) /       SUM(CASE WHEN Laboratory.Date LIKE '1981-11-%' THEN Laboratory.`T-CHO` ELSE 0 END) * 100) AS decrease_rate FROM      Laboratory INNER JOIN      Patient ON Laboratory.ID = Patient.ID WHERE      Patient.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT DISTINCT Examination.ID FROM Examination WHERE Examination.Diagnosis = 'Behcet'   AND Examination.`Examination Date` >= '1997-01-01'   AND Examination.`Examination Date` < '1998-01-01';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT DISTINCT Laboratory.ID FROM Laboratory WHERE Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31'   AND Laboratory.GPT > 30   AND Laboratory.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT Patient.ID FROM Patient WHERE Patient.SEX = 'F'   AND YEAR(Patient.Birthday) = 1964   AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2   AND ANA = 'S'   AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT      (CAST(COUNT(CASE WHEN Laboratory.UA <= 6.5 THEN 1 END) AS REAL) * 100.0 / COUNT(*)) AS percentage FROM      Laboratory WHERE      Laboratory.`U-PRO` > 0      AND Laboratory.`U-PRO` < 30;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (CAST(COUNT(*) AS REAL) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND YEAR(`First Date`) = '1981')) AS percentage FROM Patient WHERE SEX = 'M' AND YEAR(`First Date`) = '1981' AND Diagnosis = 'BEHCET';\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-'   AND Laboratory.Date LIKE '1991-10%'   AND Laboratory.T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.`ANA Pattern` != 'P'   AND Patient.SEX = 'F'   AND Patient.Birthday BETWEEN '1980-01-01' AND '1989-12-31';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT Patient.SEX FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS'   AND Laboratory.CRP > 2   AND Laboratory.CRE = 1   AND Laboratory.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(Laboratory.ALB) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F'   AND Laboratory.PLT > 400   AND Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Examination.Symptoms FROM Examination WHERE Examination.Diagnosis = 'SLE' GROUP BY Examination.Symptoms ORDER BY COUNT(Examination.Symptoms) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Description, Diagnosis FROM Patient WHERE ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT Laboratory.ID)  FROM Laboratory  WHERE YEAR(Laboratory.Date) = 1997  AND (Laboratory.TP <= 6 OR Laboratory.TP > 8.5);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT      CAST(SUM(CASE WHEN Examination.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL) * 100.0 /      SUM(CASE WHEN Examination.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) AS proportion FROM      Examination WHERE      Examination.Symptoms LIKE '%thrombocytopenia%'\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (COUNT(CASE WHEN SEX = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_of_women FROM Patient WHERE YEAR(Birthday) = '1980' AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(*) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M'   AND Examination.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31'   AND Patient.Diagnosis LIKE '%Behcet%'   AND Patient.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(Examination.`Examination Date`, Patient.`First Date`) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT COUNT(*) > 0 AS is_within_normal_range FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.ID = 57266 AND (     (Laboratory.UA > 8.0 AND Patient.SEX = 'M')     OR (Laboratory.UA > 6.5 AND Patient.SEX = 'F') );\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Laboratory.Date FROM Laboratory WHERE Laboratory.ID = 48473 AND Laboratory.GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GOT < 60 AND strftime('%Y', Laboratory.Date) = '1994';\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GPT > 60 ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(Laboratory.LDH)  FROM Laboratory  WHERE Laboratory.LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT Patient.ID,         (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) AS age FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.Admission FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday = '1982-04-01' AND Laboratory.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT (Laboratory.TP - 8.5) AS TP_deviation FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'F' AND Laboratory.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND (Laboratory.ALB <= 3.5 OR Laboratory.ALB >= 5.5) ORDER BY Patient.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT      Patient.ID,      CASE          WHEN Laboratory.ALB BETWEEN 3.5 AND 5.5 THEN 'Yes'          ELSE 'No'      END AS Albumin_Normal_Range FROM      Patient INNER JOIN      Laboratory ON Patient.ID = Laboratory.ID WHERE      YEAR(Patient.Birthday) = 1982;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT      (CAST(COUNT(*) AS REAL) * 100.0 /      (SELECT COUNT(*) FROM Patient WHERE SEX = 'F')) AS percentage FROM      Laboratory INNER JOIN      Patient ON Laboratory.ID = Patient.ID WHERE      Patient.SEX = 'F' AND Laboratory.UA > 6.5;\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(Laboratory.UA) AS average_ua_index FROM (     SELECT Laboratory.ID, Laboratory.UA     FROM Laboratory     INNER JOIN Patient ON Laboratory.ID = Patient.ID     WHERE (Laboratory.UA < 8.0 AND Patient.SEX = 'M')        OR (Laboratory.UA < 6.5 AND Patient.SEX = 'F')     ORDER BY Laboratory.Date DESC ) AS latest_results GROUP BY Laboratory.ID\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'RA' AND Laboratory.UN < 30;\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.CRE >= 1.5 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT      CASE          WHEN SUM(CASE WHEN Patient.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN Patient.SEX = 'F' THEN 1 ELSE 0 END)          THEN 'True'          ELSE 'False'      END AS result FROM      Laboratory INNER JOIN      Patient ON Laboratory.ID = Patient.ID WHERE      Laboratory.CRE >= 1.5;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.T-BIL = (     SELECT MAX(Laboratory.T-BIL)     FROM Laboratory ) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Patient.ID)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.`T-BIL` >= 2.0  GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT Patient.ID, Laboratory.T-CHO FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID ORDER BY Patient.Birthday ASC, Laboratory.T-CHO DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(CURDATE()) - YEAR(Patient.Birthday)) AS average_age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT Patient.ID, Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Laboratory.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.Admission = '-' AND Laboratory.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) BETWEEN 1936 AND 1956   AND Patient.SEX = 'M'   AND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT      Patient.ID,      Patient.SEX,      (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age FROM      Laboratory INNER JOIN      Patient ON Laboratory.ID = Patient.ID WHERE      Laboratory.GLU >= 180      AND Laboratory.T-CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Laboratory.GLU FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Description) = 1991 AND Laboratory.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.WBC <= 3.5 OR Laboratory.WBC >= 9.0 GROUP BY Patient.SEX ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.Diagnosis, Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT Patient.Admission FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F'   AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) >= 50   AND (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0);\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT Patient.ID, Patient.SEX FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.HGB < 10;\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT Patient.ID, Patient.SEX FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17 ORDER BY Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT Laboratory.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.HCT >= 52 GROUP BY Laboratory.ID HAVING COUNT(Laboratory.ID) >= 2;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(Hematoclit)  FROM Laboratory  WHERE Date LIKE '1991%' AND Hematoclit < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT      (SUM(CASE WHEN Laboratory.PLT < 100 THEN 1 ELSE 0 END) -       SUM(CASE WHEN Laboratory.PLT > 400 THEN 1 ELSE 0 END)) AS difference FROM      Laboratory WHERE      Laboratory.PLT <= 100 OR Laboratory.PLT >= 400;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT DISTINCT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE YEAR(Laboratory.Date) = 1984   AND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) < 50   AND Laboratory.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT      CAST(SUM(CASE WHEN Patient.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage_female_with_abnormal_PT FROM      Patient INNER JOIN      Laboratory ON Patient.ID = Laboratory.ID WHERE      (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 55     AND Laboratory.PT >= 14;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT DISTINCT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.`First Date`) > 1992 AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.`Examination Date` > '1997-01-01' AND Laboratory.APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT Examination.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.APTT > 45 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'M'   AND Laboratory.WBC > 3.5   AND Laboratory.WBC < 9.0   AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday > '1980-01-01' AND (Laboratory.FG < 150 OR Laboratory.FG > 450);\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE CAST(Laboratory.`U-PRO` AS INTEGER) >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.U-PRO > 0 AND Laboratory.U-PRO < 30 AND Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT Laboratory.ID)  FROM Laboratory  WHERE Laboratory.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500 ORDER BY Laboratory.IGA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500 AND Patient.`First Date` > '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.IGM <= 40 OR Laboratory.IGM >= 400 GROUP BY Patient.Diagnosis ORDER BY COUNT(Patient.Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.CRP = '+' AND Patient.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(*) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.CRE >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.RA IN ('-', '+-') AND Examination.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday > '1985-01-01' AND Laboratory.RA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT DISTINCT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.RF < 20 AND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.RF < 20 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.C3 > 35 AND Examination.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT Examination.ID FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.HCT <= 29 OR Laboratory.HCT >= 52 ORDER BY Examination.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis > 0 AND Laboratory.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.RNP IN ('-', '0') AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.RNP NOT IN ('-', '+-') ORDER BY Patient.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.SM IN ('-', '0') AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.SM NOT IN ('negative', '0') ORDER BY Patient.Birthday DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT Patient.ID FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.`Examination Date` > '1997-01-01'   AND Laboratory.SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.SC170 IN ('negative', '0')   AND Patient.SEX = 'F'   AND Examination.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.SSA IN ('-', '+-')  AND YEAR(Patient.`First Date`) < 2000;\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT p.ID FROM Patient p INNER JOIN Laboratory l ON p.ID = l.ID WHERE l.SSA NOT IN ('negative', '0') ORDER BY p.`First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.SSB IN ('negative', '0') AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.SSB IN ('negative', '0') AND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.CENTROMEA IN ('-', '+-')   AND Laboratory.SSB IN ('-', '+-')   AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.DNA >= 8;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT Laboratory.ID)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.DNA < 8 AND Patient.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (CAST(COUNT(DISTINCT Examination.ID) AS REAL) * 100 / COUNT(DISTINCT Laboratory.ID)) AS percentage FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.GOT >= 60 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GOT >= 60 ORDER BY Patient.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GPT < 60 ORDER BY Laboratory.GPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GPT < 60 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT Patient.Description FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.LDH < 500 ORDER BY Laboratory.LDH DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT Laboratory.Date FROM Laboratory WHERE Laboratory.LDH >= 500 ORDER BY Laboratory.Date DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.ALP >= 300 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'SJS'   AND Laboratory.TP > 6.0   AND Laboratory.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT Examination.`Examination Date` FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ALB > 3.5 AND Laboratory.ALB < 5.5 ORDER BY Laboratory.ALB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.ALB > 3.5 AND Laboratory.ALB < 5.5 AND Laboratory.TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT Examination.`aCL IgA`, Examination.`aCL IgG`, Examination.`aCL IgM` FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'F' AND Laboratory.UA > 6.5 ORDER BY Laboratory.UA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(Examination.ANA)  FROM Examination  INNER JOIN Laboratory ON Examination.ID = Laboratory.ID  WHERE Laboratory.CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT Examination.ID FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRE < 1.5 ORDER BY Examination.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(*) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.`T-BIL` >= 2.0 AND Examination.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT Examination.ANA FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.T-BIL < 2.0 ORDER BY Laboratory.T-BIL DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.T-CHO >= 250 AND Examination.KCT = '-'\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.T-CHO < 250 AND Examination.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT Examination.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.TG < 200 AND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.TG < 200 ORDER BY Laboratory.TG DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT Examination.ID FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis = 0 AND Laboratory.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT Examination.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.CPK < 250 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU > 180 ORDER BY Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.GLU < 180 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '+' AND Laboratory.WBC > 3.5 AND Laboratory.WBC < 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'SLE' AND Laboratory.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0) AND Patient.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT Laboratory.PLT FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'MCTD' AND Laboratory.PLT > 100 AND Laboratory.PLT < 400;\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(Laboratory.PT)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Patient.SEX = 'M' AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis IN (1, 2) AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1314": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'Art and Design Department';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer';\t----- bird -----\tstudent_club",
    "1316": "SELECT DISTINCT member.phone FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women's Soccer';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women''s Soccer' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT event.event_name FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id GROUP BY attendance.link_to_event ORDER BY COUNT(attendance.link_to_event) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT DISTINCT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1320": "SELECT DISTINCT event.event_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id INNER JOIN event ON attendance.link_to_event = event.event_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison' AND YEAR(event.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*)  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  WHERE event.type = 'Meeting'  GROUP BY attendance.link_to_event  HAVING COUNT(attendance.link_to_member) > 10;\t----- bird -----\tstudent_club",
    "1323": "SELECT event.event_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event WHERE event.type != 'Fundraiser' GROUP BY event.event_id HAVING COUNT(attendance.link_to_event) > 20;\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) AS average_attendance FROM (     SELECT event.event_id, COUNT(attendance.link_to_member) AS attendance_count     FROM attendance     INNER JOIN event ON attendance.link_to_event = event.event_id     WHERE event.type = 'Meeting' AND strftime('%Y', event.event_date) = '2020'     GROUP BY event.event_id ) AS event_attendance;\t----- bird -----\tstudent_club",
    "1325": "SELECT expense.expense_description FROM expense WHERE expense.expense_description LIKE '%Club%' ORDER BY expense.cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT member.first_name || ' ' || member.last_name AS full_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Laugh Out Loud';\t----- bird -----\tstudent_club",
    "1328": "SELECT member.last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT zip_code.county FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sherri' AND member.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT income.amount FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Food' AND event.event_name = 'September Meeting';\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code.city, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT member.first_name || ' ' || member.last_name AS full_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(budget.spent)  FROM budget  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE budget.category = 'Advertisement'  AND event.event_name = 'September Meeting';\t----- bird -----\tstudent_club",
    "1336": "SELECT DISTINCT major.department FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.last_name IN ('Pierce', 'Guidi')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT e.expense_id, e.approved FROM expense e INNER JOIN budget b ON e.link_to_budget = b.budget_id INNER JOIN event ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'October Meeting' AND ev.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(expense.cost) AS total_average_cost FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Elijah'   AND member.last_name = 'Allen'   AND (strftime('%m', expense.expense_date) = '09' OR strftime('%m', expense.expense_date) = '10');\t----- bird -----\tstudent_club",
    "1340": "SELECT      (SUM(CASE WHEN strftime('%Y', event.event_date) = '2019' THEN budget.spent ELSE 0 END) -       SUM(CASE WHEN strftime('%Y', event.event_date) = '2020' THEN budget.spent ELSE 0 END)) AS difference FROM      budget INNER JOIN      event ON budget.link_to_event = event.event_id;\t----- bird -----\tstudent_club",
    "1341": "SELECT event.location FROM event WHERE event.event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT budget.remaining FROM budget WHERE budget.category = 'Food' ORDER BY budget.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1344": "SELECT income.notes FROM income WHERE income.source = 'Fundraising' AND income.date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT member.phone FROM member WHERE member.first_name = 'Carlo' AND member.last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT zip_code.county FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Adela' AND member.last_name = 'O''Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'November Meeting' AND budget.remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT budget.event_status FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Brent' AND member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT zip_code.type FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Christof' AND member.last_name = 'Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT major.department FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT income.date_received FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Connor'   AND member.last_name = 'Hilton'   AND income.source = 'Dues';\t----- bird -----\tstudent_club",
    "1358": "SELECT member.first_name, member.last_name FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.source = 'Dues' ORDER BY income.date_received ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1359": "SELECT      SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) /      SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END) AS budget_ratio FROM      budget b INNER JOIN      event e ON b.link_to_event = e.event_id WHERE      b.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(b1.amount) * 100.0 / SUM(b2.amount)) AS percentage FROM budget b1 INNER JOIN event e ON b1.link_to_event = e.event_id INNER JOIN budget b2 ON b2.link_to_event = e.event_id WHERE b1.category = 'Parking' AND e.event_name = 'November Speaker' AND e.event_name = 'November Speaker';\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(expense.cost)  FROM expense  WHERE expense.expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city)  FROM zip_code  WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT zip_code.city, zip_code.county, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Amy' AND member.last_name = 'Firth';\t----- bird -----\tstudent_club",
    "1365": "SELECT expense.expense_description FROM budget INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE budget.remaining = (     SELECT MIN(remaining)     FROM budget )\t----- bird -----\tstudent_club",
    "1366": "SELECT member.first_name, member.last_name FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(member.member_id) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id ORDER BY budget.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT expense.expense_description FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT income.date_received FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Casey' AND member.last_name = 'Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(*)  FROM attendance  INNER JOIN member ON attendance.link_to_member = member.member_id  WHERE member.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT e.event_name FROM event e INNER JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' ORDER BY (b.spent / b.amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS highest_spent FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020';\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent)  FROM budget  WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id GROUP BY member.member_id HAVING COUNT(attendance.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT member.first_name, member.last_name FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id INNER JOIN major ON member.link_to_major = major.major_id INNER JOIN event ON attendance.link_to_event = event.event_id WHERE major.major_name = 'Interior Design' AND event.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Georgetown' AND zip_code.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(income.amount)  FROM member  INNER JOIN income ON income.link_to_member = member.member_id  WHERE member.first_name = 'Grant' AND member.last_name = 'Gilmour';\t----- bird -----\tstudent_club",
    "1385": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(expense.cost)  FROM event  INNER JOIN expense ON event.event_id = expense.link_to_event  WHERE event.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT member.first_name, member.last_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event INNER JOIN member ON budget.member_id = member.member_id WHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT member.first_name, member.last_name, income.source FROM income INNER JOIN member ON income.link_to_member = member.member_id ORDER BY income.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1389": "SELECT event.event_name FROM event JOIN expense ON event.event_id = expense.link_to_event ORDER BY expense.cost ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT      (SUM(e.cost) FILTER (WHERE ev.event_name = 'Yearly Kickoff') * 100.0 / SUM(e.cost)) AS percentage FROM      expense e INNER JOIN      budget b ON e.link_to_budget = b.budget_id INNER JOIN      event ev ON b.link_to_event = ev.event_id;\t----- bird -----\tstudent_club",
    "1391": "SELECT      (SUM(CASE WHEN major.major_name = 'Finance' THEN 1 ELSE 0 END) * 1.0) /      (SUM(CASE WHEN major.major_name = 'Physics' THEN 1 ELSE 0 END)) AS ratio FROM      major JOIN      member ON major.major_id = member.link_to_major;\t----- bird -----\tstudent_club",
    "1392": "SELECT income.source FROM income WHERE income.date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY income.source ORDER BY SUM(income.amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name, member.email FROM member WHERE member.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community Theater'   AND strftime('%Y', event.event_date) = '2019';\t----- bird -----\tstudent_club",
    "1396": "SELECT      COUNT(attendance.link_to_event) AS event_count,      major.major_name  FROM      member  INNER JOIN      attendance ON member.member_id = attendance.link_to_member  INNER JOIN      major ON member.link_to_major = major.major_id  WHERE      member.first_name = 'Luisa'      AND member.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1397": "SELECT SUM(spent) / COUNT(spent) AS average_spent FROM budget WHERE category = 'Food' AND event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Advertisement' ORDER BY budget.spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT COUNT(*) > 0 AS attended FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id INNER JOIN event ON attendance.link_to_event = event.event_id WHERE member.first_name = 'Maya'   AND member.last_name = 'Mclean'   AND event.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1400": "SELECT (COUNT(CASE WHEN event.type = 'Community Service' THEN 1 END) * 100.0 / COUNT(event.event_id)) AS percentage_share FROM event WHERE event.event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT expense.cost FROM event INNER JOIN budget ON event.event_id = budget.link_to_event INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE event.event_name = 'September Speaker' AND expense.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'Closed' AND budget.remaining < 0 ORDER BY budget.remaining ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT      e.expense_description,      SUM(e.cost) AS total_value FROM      event ev INNER JOIN      budget b ON ev.event_id = b.link_to_event INNER JOIN      expense e ON b.budget_id = e.link_to_budget WHERE      ev.event_name = 'October Meeting'      AND e.approved = 'true' GROUP BY      e.expense_description;\t----- bird -----\tstudent_club",
    "1405": "SELECT b.category, SUM(b.amount) AS total_amount FROM budget b INNER JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'April Speaker' GROUP BY b.category ORDER BY total_amount ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(expense.cost)  FROM expense  WHERE expense.expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost)  FROM expense  WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT      CONCAT(member.first_name, ' ', member.last_name) AS full_name,      SUM(expense.cost) AS total_cost FROM      member INNER JOIN      expense ON member.member_id = expense.link_to_member WHERE      member.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY      member.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense.expense_description FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT expense.expense_description FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT member.zip FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT DISTINCT member.position FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE major.major_name LIKE '%Business%'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT event.type FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT event.type FROM event WHERE event.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT DISTINCT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT (COUNT(CASE WHEN member.position = 'Member' AND major.major_name = 'Business' THEN 1 END) * 100.0 / COUNT(member.member_id)) AS percentage FROM member INNER JOIN major ON member.link_to_major = major.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*)  FROM income  WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences'   AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT member.last_name, major.department, major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT DISTINCT budget.category FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.location = 'MU 215'   AND event.type = 'Guest Speaker'   AND budget.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT DISTINCT zip_code.city, zip_code.state FROM member INNER JOIN major ON member.link_to_major = major.major_id INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE major.department = 'Electrical and Computer Engineering Department'   AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1429": "SELECT event.event_name FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'Social'   AND member.position = 'Vice President'   AND event.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT member.last_name, member.position FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.expense_description = 'Pizza' AND expense.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT DISTINCT member.last_name FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women's Soccer' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1432": "SELECT (CAST(COUNT(CASE WHEN income.amount = 50 THEN 1 END) AS REAL) * 100 / COUNT(member.member_id)) AS percentage FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE member.t_shirt_size = 'Medium' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code.zip_code FROM zip_code WHERE zip_code.type = 'PO Box'   AND zip_code.county = 'San Juan Municipio'   AND zip_code.state = 'Puerto Rico';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game'   AND status = 'Closed'   AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT DISTINCT attendance.link_to_event FROM attendance INNER JOIN expense ON attendance.link_to_member = expense.link_to_member WHERE expense.cost > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT attendance.link_to_event, attendance.link_to_member FROM attendance INNER JOIN expense ON attendance.link_to_member = expense.link_to_member WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT major.college FROM major WHERE major.major_id = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT member.phone FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE major.college = 'College of Agriculture and Applied Sciences' AND major.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1440": "SELECT DISTINCT member.email FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND expense.cost > 20;\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.college = 'College of Education & Human Services' AND major.major_name = 'Education';\t----- bird -----\tstudent_club",
    "1442": "SELECT (CAST(SUM(CASE WHEN budget.remaining < 0 THEN 1 ELSE 0 END) AS REAL) / COUNT(budget.link_to_event)) * 100 AS percentage_over_budget FROM budget;\t----- bird -----\tstudent_club",
    "1443": "SELECT event.event_id, event.location, event.status FROM event WHERE event.event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense.expense_description FROM expense GROUP BY expense.expense_description HAVING SUM(expense.cost) / COUNT(expense.expense_description) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name || ' ' || last_name AS full_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT (SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) * 100.0 / COUNT(zip_code)) AS percentage_po_box FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT event.event_name, event.location FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT event.event_name, event.event_date FROM event INNER JOIN expense ON event.event_id = expense.link_to_event WHERE expense.expense_description = 'Pizza'   AND expense.cost > 50   AND expense.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT member.first_name, member.last_name, major.major_name FROM expense INNER JOIN member ON expense.link_to_member = member.member_id INNER JOIN major ON member.link_to_major = major.major_id WHERE expense.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT DISTINCT zip_code.city, zip_code.county FROM event INNER JOIN budget ON event.event_id = budget.link_to_event INNER JOIN income ON event.event_id = income.link_to_member INNER JOIN member ON income.link_to_member = member.member_id INNER JOIN zip_code ON member.zip = zip_code.zip_code GROUP BY event.event_id, zip_code.city, zip_code.county HAVING COUNT(income.income_id) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT m.first_name, m.last_name FROM expense e INNER JOIN member m ON e.link_to_member = m.member_id INNER JOIN budget b ON e.link_to_budget = b.budget_id INNER JOIN event ev ON b.link_to_event = ev.event_id WHERE e.link_to_member IN (     SELECT e.link_to_member     FROM expense e     INNER JOIN budget b ON e.link_to_budget = b.budget_id     INNER JOIN event ev ON b.link_to_event = ev.event_id     GROUP BY e.link_to_member     HAVING COUNT(DISTINCT ev.event_id) > 1 ) GROUP BY m.member_id ORDER BY SUM(e.cost) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(expense.cost)  FROM expense  INNER JOIN member ON expense.link_to_member = member.member_id  WHERE member.position != 'Member';\t----- bird -----\tstudent_club",
    "1453": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE budget.category = 'Parking' GROUP BY event.event_id HAVING SUM(expense.cost) / COUNT(expense.cost) > AVG(expense.cost)\t----- bird -----\tstudent_club",
    "1454": "SELECT      SUM(expense.cost) * 100.0 / COUNT(DISTINCT event.event_id) AS percentage_cost FROM      event INNER JOIN      budget ON event.event_id = budget.link_to_event INNER JOIN      expense ON budget.budget_id = expense.link_to_budget WHERE      event.type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT budget.budget_id FROM expense WHERE expense.expense_description = 'Water, chips, cookies' ORDER BY expense.cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT member.first_name || ' ' || member.last_name AS full_name FROM expense INNER JOIN member ON expense.link_to_member = member.member_id GROUP BY expense.link_to_member, member.first_name, member.last_name ORDER BY SUM(expense.cost) DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name, m.phone FROM expense e INNER JOIN member m ON e.link_to_member = m.member_id GROUP BY m.member_id HAVING AVG(e.cost) < (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT      (nj_count * 100.0 / total_members) - (vt_count * 100.0 / total_members) AS percentage_difference FROM      (SELECT          SUM(CASE WHEN z.state = 'New Jersey' THEN 1 ELSE 0 END) AS nj_count,         SUM(CASE WHEN z.state = 'Vermont' THEN 1 ELSE 0 END) AS vt_count,         COUNT(CASE WHEN m.position = 'Member' THEN 1 ELSE NULL END) AS total_members      FROM          member m      INNER JOIN          zip_code z ON m.zip = z.zip_code) subquery;\t----- bird -----\tstudent_club",
    "1459": "SELECT major.major_name, major.department FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name, expense.cost FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT budget.category, budget.amount FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT DISTINCT event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name, income.amount FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT budget.category FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name, major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent FROM budget b INNER JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Speaker Gifts' GROUP BY e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT zip_code.city FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT CONCAT(member.first_name, ' ', member.last_name) AS full_name, member.position FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Lincolnton'    AND zip_code.state = 'North Carolina'    AND zip_code.zip_code = 28092;\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT      (COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 1.0) /      COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio FROM      customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT customers.CustomerID FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date BETWEEN '201201' AND '201212' AND customers.Segment = 'LAM' ORDER BY yearmonth.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(yearmonth.Consumption) / 12 AS Average_Monthly_Consumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND yearmonth.Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK'   AND yearmonth.Date BETWEEN '201101' AND '201112' GROUP BY yearmonth.CustomerID ORDER BY SUM(yearmonth.Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT yearmonth.CustomerID)  FROM yearmonth  INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID  WHERE customers.Segment = 'KAM'  AND yearmonth.Consumption < 30000  AND yearmonth.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT      (SUM(CASE WHEN customers.Currency = 'CZK' THEN yearmonth.Consumption ELSE 0 END) -       SUM(CASE WHEN customers.Currency = 'EUR' THEN yearmonth.Consumption ELSE 0 END)) AS consumption_difference FROM      yearmonth INNER JOIN      customers ON yearmonth.CustomerID = customers.CustomerID WHERE      yearmonth.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT strftime('%Y', t.Date) AS Year FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID JOIN products p ON t.ProductID = p.ProductID WHERE c.Currency = 'EUR' AND p.Description LIKE '%Gas%' GROUP BY Year ORDER BY SUM(t.Amount) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT customers.Segment FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID GROUP BY customers.Segment ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(y.Date, 1, 4) AS Year FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'CZK' GROUP BY Year ORDER BY SUM(y.Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT yearmonth.Date FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME'   AND yearmonth.Date BETWEEN '201301' AND '201312' ORDER BY yearmonth.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT      (sme_avg - lam_avg) AS diff_sme_lam,     (lam_avg - kam_avg) AS diff_lam_kam,     (kam_avg - sme_avg) AS diff_kam_sme FROM (     SELECT          (SELECT SUM(ym1.Consumption) / COUNT(DISTINCT ym1.CustomerID)          FROM yearmonth ym1          INNER JOIN customers c1 ON ym1.CustomerID = c1.CustomerID          WHERE c1.Segment = 'SME' AND ym1.Date BETWEEN '201301' AND '201312'          GROUP BY ym1.CustomerID          HAVING SUM(ym1.Consumption) = (              SELECT MIN(total_consumption)              FROM (                  SELECT SUM(ym2.Consumption) AS total_consumption                  FROM yearmonth ym2                  INNER JOIN customers c2 ON ym2.CustomerID = c2.CustomerID                  WHERE c2.Segment = 'SME' AND ym2.Date BETWEEN '201301' AND '201312'                  GROUP BY ym2.CustomerID              ) AS sme_totals          )) AS sme_avg,                  (SELECT SUM(ym3.Consumption) / COUNT(DISTINCT ym3.CustomerID)          FROM yearmonth ym3          INNER JOIN customers c3 ON ym3.CustomerID = c3.CustomerID          WHERE c3.Segment = 'LAM' AND ym3.Date BETWEEN '201301' AND '201312'          GROUP BY ym3.CustomerID          HAVING SUM(ym3.Consumption) = (              SELECT MIN(total_consumption)              FROM (                  SELECT SUM(ym4.Consumption) AS total_consumption                  FROM yearmonth ym4                  INNER JOIN customers c4 ON ym4.CustomerID = c4.CustomerID                  WHERE c4.Segment = 'LAM' AND ym4.Date BETWEEN '201301' AND '201312'                  GROUP BY ym4.CustomerID              ) AS lam_totals          )) AS lam_avg,                  (SELECT SUM(ym5.Consumption) / COUNT(DISTINCT ym5.CustomerID)          FROM yearmonth ym5          INNER JOIN customers c5 ON ym5.CustomerID = c5.CustomerID          WHERE c5.Segment = 'KAM' AND ym5.Date BETWEEN '201301' AND '201312'          GROUP BY ym5.CustomerID          HAVING SUM(ym5.Consumption) = (              SELECT MIN(total_consumption)              FROM (                  SELECT SUM(ym6.Consumption) AS total_consumption                  FROM yearmonth ym6                  INNER JOIN customers c6 ON ym6.CustomerID = c6.CustomerID                  WHERE c6.Segment = 'KAM' AND ym6.Date BETWEEN '201301' AND '201312'                  GROUP BY ym6.CustomerID              ) AS kam_totals          )) AS kam_avg ) AS averages;\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment,         ((SUM(CASE WHEN SUBSTR(y.Date, 1, 4) = '2013' THEN y.Consumption ELSE 0 END) -           SUM(CASE WHEN SUBSTR(y.Date, 1, 4) = '2012' THEN y.Consumption ELSE 0 END)) /           SUM(CASE WHEN SUBSTR(y.Date, 1, 4) = '2013' THEN y.Consumption ELSE 0 END) * 100) AS Percentage_Increase FROM customers c INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Currency = 'EUR' GROUP BY c.Segment ORDER BY Percentage_Increase DESC LIMIT 1  UNION  SELECT Segment,         ((SUM(CASE WHEN SUBSTR(y.Date, 1, 4) = '2013' THEN y.Consumption ELSE 0 END) -           SUM(CASE WHEN SUBSTR(y.Date, 1, 4) = '2012' THEN y.Consumption ELSE 0 END)) /           SUM(CASE WHEN SUBSTR(y.Date, 1, 4) = '2013' THEN y.Consumption ELSE 0 END) * 100) AS Percentage_Increase FROM customers c INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Currency = 'EUR' GROUP BY c.Segment ORDER BY Percentage_Increase ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption)  FROM yearmonth  WHERE CustomerID = 6  AND Date >= '201308'  AND Date <= '201311';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT      (SELECT COUNT(*)       FROM gasstations       WHERE Country = 'CZE' AND Segment = 'Discount')      -      (SELECT COUNT(*)       FROM gasstations       WHERE Country = 'SVK' AND Segment = 'Discount') AS difference\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT      (SELECT SUM(Consumption)       FROM yearmonth       WHERE CustomerID = 7 AND Date = '201304')      -      (SELECT SUM(Consumption)       FROM yearmonth       WHERE CustomerID = 5 AND Date = '201304') AS ConsumptionDifference;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT      (COUNT(CASE WHEN customers.Currency = 'CZK' THEN 1 END) -       COUNT(CASE WHEN customers.Currency = 'EUR' THEN 1 END)) AS difference FROM      customers WHERE      customers.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'LAM'   AND customers.Currency = 'EUR'   AND yearmonth.Date = '201310' ORDER BY yearmonth.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT ym.CustomerID, SUM(ym.Consumption) AS TotalConsumption FROM yearmonth ym INNER JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'KAM' GROUP BY ym.CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(yearmonth.Consumption)  FROM yearmonth  INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID  WHERE customers.Segment = 'KAM'  AND yearmonth.Date = '201305';\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT      CAST(COUNT(DISTINCT ym.CustomerID) AS REAL) * 100 / COUNT(DISTINCT c.CustomerID) AS percentage FROM      customers c INNER JOIN      yearmonth ym ON c.CustomerID = ym.CustomerID WHERE      c.Segment = 'LAM'     AND ym.Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(*) AS total_value_for_money_stations FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country ORDER BY total_value_for_money_stations DESC;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM customers WHERE Segment = 'KAM') AS percentage_of_kam_euro FROM customers WHERE Segment = 'KAM' AND Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM yearmonth WHERE SUBSTR(Date, 1, 6) = '201202') FROM yearmonth WHERE SUBSTR(Date, 1, 6) = '201202' AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK')) AS percentage FROM gasstations WHERE Country = 'SVK' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT customers.Segment FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date = '201309' GROUP BY customers.Segment ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'SME' AND yearmonth.Date = '201206' ORDER BY yearmonth.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption)  FROM yearmonth  WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(monthly_consumption) AS biggest_monthly_consumption FROM (     SELECT SUM(yearmonth.Consumption) / 12 AS monthly_consumption     FROM yearmonth     INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID     WHERE customers.Currency = 'EUR'     GROUP BY yearmonth.CustomerID ) AS subquery;\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT DISTINCT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201309';\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT gasstations.Country FROM gasstations INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201306';\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT gasstations.ChainID FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE customers.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT DISTINCT products.Description FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID INNER JOIN products ON transactions_1k.ProductID = products.ProductID WHERE customers.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Amount * Price) AS average_total_price FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT customers.CustomerID) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT products.Description FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID INNER JOIN products ON transactions_1k.ProductID = products.ProductID WHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT transactions_1k.Time FROM gasstations INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE gasstations.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE' AND transactions_1k.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(transactions_1k.Amount * transactions_1k.Price) AS average_total_price FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(transactions_1k.Amount * transactions_1k.Price) AS average_total_price FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE customers.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' ORDER BY Amount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT gs.Country FROM transactions_1k t INNER JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE t.Date = '2012-08-25' ORDER BY t.Time ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT customers.Currency FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT customers.Segment FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-26'   AND customers.Currency = 'CZK'   AND transactions_1k.Time < '13:00:00';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT customers.Segment FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID ORDER BY transactions_1k.Date ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT gasstations.Country FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT yearmonth.Date, yearmonth.Consumption FROM yearmonth WHERE yearmonth.CustomerID = (     SELECT transactions_1k.CustomerID     FROM transactions_1k     WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Amount = 124.05 ) AND yearmonth.Date = '201201';\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.Date = '2012-08-26'   AND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00'   AND gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT customers.Currency FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date = '201306' AND yearmonth.Consumption = 214582.17;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT customers.Currency FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.CardID = 667467;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT c.Nationality FROM yearmonth ym INNER JOIN customers c ON ym.CustomerID = c.CustomerID WHERE ym.Date = '2012-08-24' AND ym.Consumption = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT      CAST(COUNT(DISTINCT t1.CustomerID) AS REAL) * 100 / COUNT(DISTINCT t2.CustomerID) AS percentage FROM      customers t1 INNER JOIN      transactions_1k t2 ON t1.CustomerID = t2.CustomerID WHERE      t1.Currency = 'EUR'      AND t2.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT      (consumption_2012 - consumption_2013) / consumption_2012 AS consumption_decrease_rate FROM (     SELECT          SUM(CASE WHEN yearmonth.Date LIKE '2012%' THEN yearmonth.Consumption ELSE 0 END) AS consumption_2012,         SUM(CASE WHEN yearmonth.Date LIKE '2013%' THEN yearmonth.Consumption ELSE 0 END) AS consumption_2013     FROM yearmonth     WHERE yearmonth.CustomerID = (         SELECT transactions_1k.CustomerID         FROM transactions_1k         WHERE transactions_1k.Amount = 634.8 AND transactions_1k.Date = '2012-08-25'     ) ) AS consumption_data;\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Amount) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT CAST(COUNT(*) FILTER (WHERE Segment = 'Premium') AS REAL) * 100 / COUNT(*) AS percentage FROM gasstations WHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Amount)  FROM transactions_1k  WHERE CustomerID = 38508  AND strftime('%Y-%m', Date) = '2012-01';\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT p.Description FROM products p INNER JOIN transactions_1k t ON p.ProductID = t.ProductID GROUP BY p.ProductID ORDER BY COUNT(t.ProductID) DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT      t.CustomerID,      SUM(t.Price) / SUM(t.Amount) AS avg_price,      c.Currency FROM      transactions_1k t INNER JOIN      customers c ON t.CustomerID = c.CustomerID GROUP BY      t.CustomerID, c.Currency ORDER BY      SUM(t.Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT gs.Country FROM transactions_1k t INNER JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE t.ProductID = 2 ORDER BY t.Price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT ym.Consumption FROM yearmonth ym WHERE ym.Date = '201208' AND ym.CustomerID IN (     SELECT t.CustomerID     FROM transactions_1k t     WHERE t.ProductID = 5     AND (t.Price / t.Amount) > 29.00     AND t.Date BETWEEN '2012-08-01' AND '2012-08-31' );\t----- bird -----\tdebit_card_specializing"
}